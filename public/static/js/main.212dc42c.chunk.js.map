{"version":3,"sources":["helpers/fetch.js","hooks/QuestionShape/useFetchDestructureValue.js","hooks/QuestionShape/useFetchOptionsDestructure.js","components/test/shapes/ProfileShape/TestShapeCard.js","components/test/shapes/ProfileShape/PanelBody.js","components/answers/shapes/ShapeScreenQuestion.js","hooks/QuestionShape/useFetchQuestionShapeFindAll.js","actions/ui.js","reducers/authReducer.js","reducers/institutionReducer.js","reducers/questionShape.js","reducers/shapeReducer.js","reducers/testShapeReducer.js","reducers/uiReducer.js","reducers/testSimpleReducer.js","reducers/testSimpleCategoryReducer.js","reducers/questionSimpleReducer.js","reducers/answersSimpleReducer.js","reducers/shapeAnswersReducer.js","reducers/answersShapeReducer.js","reducers/rootReducer.js","store/store.js","actions/auth.js","hooks/useForm.js","components/Accounts/AccountScreen.js","components/Accounts/ChangePasswordScreen.js","components/Accounts/UserScreen.js","components/main/Aside.js","components/main/Header.js","components/main/Layout.js","router/private/AccountRouter.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/public/AuthRouter.js","router/PrivateRoute.js","router/PublicRouter.js","actions/institution.js","hooks/useFetchInstitutions.js","components/institution/InstitutionScreen.js","hooks/useFormPhone.js","components/institution/RegisterScreen.js","components/institution/FormUpdate.js","components/institution/UpdateScreen.js","router/private/InstitutionRouter.js","components/test/RegisterScreen.js","actions/shape.js","styles/animation.js","components/test/shapes/styles/style.js","components/test/shapes/GetImage.js","components/test/shapes/GetImageOne.js","components/test/shapes/Form.js","components/test/shapes/FormQuestionShape.js","hooks/QuestionShape/useFetchQuestionShapeOne.js","components/test/shapes/Register.js","hooks/useNeerScreen.js","components/test/shapes/ProfileShape/TestBodyProfile.js","components/test/shapes/ShapeScreen.js","hooks/QuestionShape/useFetchQuestionShape.js","components/test/shapes/UpdatedScreen.js","router/private/TestsRouter.js","actions/testShape.js","hooks/useFetchTestShape.js","components/test/test-shape/ModalRegister.js","components/test/test-shape/TestShapeScreen.js","router/private/TestShapeRouter.js","actions/category.js","hooks/useFetchCategory.js","components/test/simple/category/ModalCategory.js","components/test/simple/category/CategoryScreen.js","actions/questionSimple.js","components/test/simple/ProfileSimple/PanelBody.js","components/test/simple/ProfileSimple/QuestionSimpleCard.js","components/test/simple/ProfileSimple/QuestionBodyProfile.js","components/test/simple/SimpleScreen.js","hooks/QuestionSimple/useFetchQuestionSimple.js","hooks/QuestionSimple/useFetchCategory.js","hooks/QuestionSimple/useFetchTestSimple.js","components/test/simple/SimpleScreenRegister.js","actions/testSimple.js","hooks/useFetchTestSimple.js","components/test/simple/test/ModalRegisterSimple.js","components/test/simple/test/TestScreenSimple.js","components/test/simple/FormUpdatedQuestion.js","components/test/simple/FormQuestionSimple.js","components/test/simple/UpdatedScreen.js","router/private/TestSimpleRouter.js","components/answers/shapes/ShapeScreeAnswers.js","hooks/Answers/Shape/useFetchTestShape.js","actions/answersSimple.js","components/answers/simples/FormWinzard.js","components/answers/simples/MapOfFormWinzard.js","components/answers/simples/SimpleScreenAnswers.js","hooks/Answers/Simple/useFetchAnswerSimple.js","components/answers/AnswersScreen.js","components/answers/simples/SelectionTestScreen.js","router/private/AnswersRouter.js","router/AppRouter.js","PsicologiaApp.js","index.js","actions/questionShape.js","types/types.js","actions/answersShape.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","tokenStart","token","localStorage","getItem","useFetchDestructureValue","pregunta","useState","image","setData","question","Buffer","from","toString","useEffect","useFetchOptionsDestructure","op1","op2","op3","op4","op5","op6","optionOne","optionTwo","optionThree","optionFour","optionFive","optionSix","option1","option2","option3","option4","option5","option6","TestShapeCard","questionData","option","dataOption","setDataOption","id_pregunta","nombre","id_test","respuesta_correcta","createdAt","updatedAt","nombreTest","test_formas","questions","Options","className","filterData","setFilterData","id","map","e","src","alt","moment","locale","PanelBody","dispatch","useDispatch","history","useHistory","format","onClick","id_resp","questionClearShape","questionSetShape","push","handleActiveQuestions","questionDeleteShape","filter","handleDeleteQuestion","ShapeScreenQuestion","shape","useSelector","state","answerShape","uid","auth","limit","setLimit","questionsShape","useFetchQuestionShapeFindAll","disabledFinish","setDisabledFinish","disabledStart","setDisabledStart","setQuestion","images","setImages","limitAnswers","setLimitAnswers","answersShape","setAnswersShape","handlePrevQuestion","handleSelect","handleOfChangeTheValue","target","length","questionCorrect","index","findIndex","answers","filterDataAnswers","correctAnswer","value","newData","bien_mal","dataFilter","dato","undefined","changeAnswerData","answersShapeRegister","style","textAlign","paddingLeft","key","disabled","INITIAL_LIMIT","setQuestionsShape","testShapeLoading","skip","a","resp","json","ok","preguntaFormas","Swal","fire","msg","error","console","log","uiOpenSidebar","type","types","uiCloseSidebar","uiTrueDisabledButton","uiFalseDisabledButton","uiOpenSection","uiCloseSection","uiOpenDrowp","uiCloseDrowp","uiOpenLoadingButton","uiCloseLoadingButton","uiOpenLoadingSaveButton","uiCloseLoadingSaveButton","uiModalTrue","uiModalFalse","institutionAcordionSelect","institutionAcordionDeselect","institutionSelectRegister","institutionDeselectRegister","institutionSelectShow","institutionDeselectShow","uieventLogout","initialState","checking","institutions","activeInstitution","questionActive","name","testShape","testShapeActive","uiDrowp","uiSidebar","uiSection","uiLoadingButton","uiLoadingSaveButton","uiDisabled","uiSelection","uiRegisterSelectAcordion","uiShowSelectInstitution","uiIconClose","uiModal","initState","testSimple","testActiveSimple","category","categoryActive","answersSimpleActive","rootReducer","combineReducers","ui","action","payload","institutionOpenAcordion","institutionCloseAcordion","institutionIconClose","cheking","authLogin","authUserUpdate","authUserUpdatePassword","persona","authCheckingFinish","accountUpdate","authLogout","institution","institutionSetActive","find","id_institucion","institutionLoaded","institutionSetActiveClear","shapeLoaded","questionShape","questionSetActive","questionClearActive","tShape","testShapeClear","testShapeLoaded","tSimple","testSimpleActive","testSimpleClear","testSimpleLoaded","testSimpleCategoryActive","id_categoria","testSimpleCategoryClear","testSimpleCategoryLoaded","qSimple","questionSimpleSetActive","questionSimpleClearActive","answerSimple","answersSimpleClear","answersfilter","answersfilterActive","array","position","answersActive","shapeAnswersActive","shapeAnswer","answersShapeActive","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","startLoginAddAccount","username","password","persona_id","respPersona","setItem","Date","getTime","login","accountUpdated","checkingFinish","user","startLogout","clear","logout","useForm","values","setValues","reset","handleInputChange","AccountScreen","formAccountValues","handleAccountInputChange","primer_apellido","segundo_apellido","celular","imei","edad","dni","direccion","email","onSubmit","preventDefault","startUpdateAccount","placeholder","onChange","ChangePasswordScreen","passwordCurrent","passwordNew","passwordAgain","formPasswordValues","handlePasswordInputChange","inputStylePassword","color","trim","startUpdateUserPassword","marginRight","to","UserScreen","usuarios","formUserValues","handleUserInputChange","startUpdateUser","Aside","activeClassName","cursor","icon","faUniversity","display","faVial","exact","faVials","Header","href","width","height","data-toggle","Layout","children","AccountRouter","document","backgroundColor","path","component","LoginScreen","lUsername","lPassword","formLoginValues","handleLoginInputChange","autoFocus","autoComplete","_ngcontent-kod-c28","aria-hidden","aria-labelledby","role","tabIndex","data-dismiss","RegisterScreen","cryptoRandomString","genero","padres_responsables","password2","formRegisterValues","handleRegisterInputChange","startRegister","AuthRouter","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","useFetchInstituions","setUiDisabled","data_institutions","setInstitutions","handleSwitchChange","useCallback","fetchInstitution","then","res","rows","instituciones","forEach","item","telefono","nit","nombre_contacto","modified","deleted","institutionDelete","catch","err","InstitutionScreen","columns","label","field","sort","noRecordsFoundLabel","scrollX","autoWidth","maxHeight","striped","bordered","small","useFormPhone","mobile","address","phone","emei","contact_name","formInstitutionValues","handleInstitutionInputChange","formInstitutionPhoneValues","handleInstitutionPhoneInputChange","startRegisterInstitution","inputExtraProps","required","dropdownClass","inputStyle","country","mask","maskChar","FormUpdate","newNit","updatedInstitution","UpdateScreen","i","InstitutionRouter","faThermometerQuarter","faThermometerThreeQuarters","faBong","paddingTop","paddingBottom","faCubes","fadeInKeyFrames","keyframes","Img","styled","img","time","css","fadeIn","ImgDefault","GetImage","onImageUpdate","onImageRemove","justifyContent","data_url","GetImageOne","alignItems","Form","questionImage","optionsImage","dataQuestionShape","setDataQuestionShape","respCorrect","formShapeInputValues","handleShapeInputValueChange","imagesQuestion","setImagesQuestion","paddingRight","size","multiple","imageList","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","formcontrolname","shapeEdit","shapeRegister","FormQuestionShape","data_questions_shape","useFetchQuestionShapeOne","questionsImage","setQuestionsImage","imageOptions","setImageOptions","DestructureValue","testFormas","options","Register","useNearScreen","distance","externalRef","once","isNearScreen","setShow","fromRef","useRef","observer","element","current","entries","isIntersecting","disconnect","Promise","resolve","IntersectionObserver","rootMargin","observe","TestBodyProfile","ShapeScreen","loading","setLoading","setSkip","concat","useFetchQuestionShape","debounceHandleNextPage","debounce","preveSkip","ref","UpdatedScreen","TestsRouter","TestShapeSetActiveClear","useFetcheTestShape","data_Tformas","fetchTFormas","testShapeSetActive","testShapeDelete","ModalRegister","Modal","setAppElement","formValues","setFormValues","closeModal","isOpen","onRequestClose","content","top","left","right","bottom","transform","closeTimeoutMS","ariaHideApp","updatedTestShape","TestShapeScreen","TestShape","TestShapeRouter","testSimpleCategory","TestSimpleCategorySetActiveClear","useFetchCategory","data_category","fetchTSimpleCategory","categorias","nombre_categoria","testSimpleCategoryDelete","ModalCategory","startRegisterCategory","CategoryScreen","questionSimple","setDataQuestion","setFilter","test_simples","nombre_test","handleActiveQuestionsSimple","questionSetSimple","handleDeleteQuestionSimple","questionDeleteSimple","QuestionSimpleCard","setState","QuestionBodyProfile","SimpleScreen","QuestionsSimple","setQuestionsSimple","simples_preguntas","useFetchQuestionSimple","debounceHandleNextPageSimple","categoryLoading","useFetchTestSimple","questionsSimple","testSimpleLoading","SimpleScreenRegister","categoryData","setCategoryData","testName","setTestName","nameCategory","setNameCategory","formQuestionSimpleInputValues","handleQuestionSimpleInputValueChange","id_category","TestSimpleSetActiveClear","data_simple","fetchTSimple","testSimpleDelete","ModalRegisterSimple","nombre_test_test","updatedTestSimple","TestScreenSimple","TestSimple","FormUpdatedQuestion","simpleEdit","FormQuestionSimple","TestSimpleRouter","ShapeScreeAnswers","dataShape","shapeLoading","useFetchTestShape","selectionDefault","setSelectionDefault","formSelectionInputValues","handleSelectionInputValueChange","DEFAULTVALUE","FormWinzard","Array","handleClick","answer","elements","arrayLength","htmlFor","defaultChecked","isFirst","prev","isLast","next","now","fecha_hora","si","nose","no","answersRegister","MapOfFormWinzard","dataAnswers","config","navigation","location","SimpleScreenAnswers","data_answer","answersSimpleLoading","useFetchAnswerSimple","AnswersScreen","SelectionTestScreen","AnswersRouter","AppRouter","PsicologiaApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.212dc42c.chunk.js","sourcesContent":["\nconst baseURL = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`; // localhost:4000/api/\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    }else {\n        return fetch( url, {\n            method,\n            headers:{\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        })\n    }\n\n\n}\nconst fetchConToken = ( endpoint, data, method = 'GET', tokenStart = '' ) => {\n\n    const url = `${ baseURL }/${ endpoint }`; // localhost:4000/api/\n    const token = localStorage.getItem( 'token' ) || '';\n    if ( method === 'GET' ) {\n        return fetch( url, { \n            method,\n            headers:{\n                'x-token': token\n            },\n        } );\n    }\n    else if( tokenStart !== '' ){\n        return fetch( url, { \n            method,\n            headers:{\n                'Content-type': 'application/json',\n                'x-token': tokenStart\n            },\n            body: JSON.stringify( data )\n        } );\n    }\n    else {\n        return fetch( url, {            \n            method,\n            headers:{\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        })\n    }\n\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import { useEffect, useState } from \"react\";\n\n\nexport const useFetchDestructureValue = ( pregunta = '' ) => {\n\n    const [ data, setData ] = useState({ image: '' });\n\n    const question   = new Buffer.from( pregunta ).toString(\"ascii\");\n\n    useEffect(() => {\n\n        setData({\n            image: question\n        })\n       \n    }, [ pregunta ])\n\n    return data;\n\n}\n","import { useEffect, useState } from \"react\";\n\n\nexport const useFetchOptionsDestructure = ( op1 = '', op2 = '', op3 = '', op4 = '', op5 = '', op6 = '' ) => {\n\n    const [ data, setData ] = useState([]);  \n    \n    const optionOne   = new Buffer.from( op1 ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2).toString('ascii');\n    const optionThree = new Buffer.from( op3 ).toString('ascii');\n    const optionFour  = new Buffer.from( op4 ).toString('ascii');\n    const optionFive  = new Buffer.from( op5 ).toString('ascii');\n    const optionSix   = new Buffer.from( op6 ).toString('ascii');\n\n    useEffect(() => {\n\n        setData({ \n            option1 : optionOne,\n            option2 : optionTwo,\n            option3 : optionThree,\n            option4 : optionFour,\n            option5 : optionFive,\n            option6 : optionSix })\n       \n    }, [ optionOne, optionTwo, optionThree, optionFour, optionFive, optionSix ]);\n\n    return data;\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { PanelBody } from './PanelBody';\n\nexport const TestShapeCard = ({ questionData, option }) => {\n\n    const [ dataOption, setDataOption ] = useState([])\n    const  { id_pregunta, pregunta, nombre, id_test, op1, op2, op3, op4, op5, op6, respuesta_correcta, createdAt, updatedAt, test_formas } = questionData;\n    const { nombre: nombreTest } = test_formas;\n    \n    const questions   = new Buffer.from( pregunta.data ).toString(\"ascii\");\n\n    const optionOne   = new Buffer.from( op1.data ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2.data ).toString('ascii');\n    const optionThree = new Buffer.from( op3.data ).toString('ascii');\n    const optionFour  = new Buffer.from( op4.data ).toString('ascii');\n    const optionFive  = new Buffer.from( op5.data ).toString('ascii');\n    const optionSix   = new Buffer.from( op6.data ).toString('ascii');\n\n    const Options = [\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            optionFive,\n            optionSix\n    ];\n\n    useEffect(() => {\n        \n        setDataOption( option );\n        \n    }, [ option ]);\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n               <PanelBody \n                   questions = { questions }\n                   nombre = { nombre }\n                   createdAt = { createdAt }\n                   updatedAt = { updatedAt }\n                   respuesta_correcta = { respuesta_correcta }\n                   nombreTest = { nombreTest }\n                   id_pregunta = { id_pregunta }\n                   id_test = { id_test }\n                   filterData = { dataOption }\n                   setFilterData = { setDataOption }\n               />\n            </div>\n            <div className=\"panel-body\">\n                <div id=\"gallery\" className=\"media-gal isotope\" >\n                    {\n                        Options.map( ( e, id )=>(\n                            <div className=\"images item  isotope-item\" key={ id }>\n                                <img \n                                    \n                                    src={ e } \n                                    alt=\"Option1\" />\n                                <p>Opción { id + 1 } </p>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <hr/>\n        </div >\n    );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { questionClearShape, questionDeleteShape, questionSetShape } from '../../../../actions/questionShape';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ id_pregunta = '', id_test = '', questions = [], nombre = [],  createdAt = '', updatedAt = '', respuesta_correcta = '', nombreTest = '', filterData, setFilterData }) => {\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const handleActiveQuestions = ( id_pregunta, nombre, id_test, id_resp ) => {\n\n        dispatch( questionClearShape() );\n        dispatch( questionSetShape( id_pregunta, nombre, id_test, id_resp ));\n        history.push('/test/update/shapes/screen');\n\n    }\n    const handleDeleteQuestion = ( id_pregunta ) => {\n        dispatch( questionDeleteShape( id_pregunta ) );\n        setFilterData( \n            filterData.filter(\n            e =>( e.id_pregunta !== id_pregunta )\n        ));\n        \n    }\n    \n    return (\n        <>\n            <div className=\"col-md-3\">\n                <div className=\"profile-pic text-center\">\n                    <img src={questions} alt=\"question\" />\n                </div>\n            </div>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Nombre</h1>\n                    <br />\n                    <span className=\"text-muted\">{nombre}</span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : {moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : {moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestions( id_pregunta, nombre, id_test, respuesta_correcta ) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp; \n                    <button onClick={() => { handleDeleteQuestion( id_pregunta ) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Nombre</h1>\n                    <p>{nombre} </p>\n                    <h1>Respuesta Correcta</h1>\n                    <p>Imagen : {respuesta_correcta}</p>\n                    <h1>Nombre de Prueba </h1>\n                    <p>{nombreTest}</p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answersShapeRegister } from '../../../actions/answersShape';\nimport { useFetchQuestionShapeFindAll } from '../../../hooks/QuestionShape/useFetchQuestionShapeFindAll';\n\nexport const ShapeScreenQuestion = () => {\n\n    const INITIAL_LIMIT = 0;\n    const VALUEDEFAULT = [];\n    \n    const { shape } = useSelector( state => state.answerShape );\n\n    const dispatch = useDispatch();\n\n    const { uid } = useSelector( state => state.auth );\n\n    const [ limit, setLimit ] = useState( INITIAL_LIMIT );\n\n    const { questionsShape } = useFetchQuestionShapeFindAll( shape, limit, setLimit );\n\n    const [ disabledFinish, setDisabledFinish ] = useState( false );\n\n    const [ disabledStart, setDisabledStart ] = useState( false );\n\n    const [ question, setQuestion ] = useState([]);\n\n    const [ images, setImages ] = useState([]);\n\n    const [ limitAnswers, setLimitAnswers ] = useState(0);\n    \n    const [ answersShape, setAnswersShape ] = useState({\n        data : VALUEDEFAULT\n    });\n\n    const handleNextQuestion = () => {\n        \n        setLimit( limit + 1 );\n        setLimitAnswers( limitAnswers + 1 );\n\n    }\n    const handlePrevQuestion = () => {\n        setLimit( limit - 1 );\n        setLimitAnswers( limitAnswers - 1 );\n\n    }\n\n    const handleSelect = ( e ) => {\n        handleOfChangeTheValue( e.target.id );\n    }\n\n    useEffect(()=>{\n\n        if ( limit === 1 ) {\n            return( \n                setDisabledStart( true ),\n                setDisabledFinish( false )\n            );\n        }\n        else if( questionsShape.length === 0 ) {\n            \n            return ( \n                setDisabledFinish( true ),\n                setDisabledStart( false )\n            );\n        }\n        return( \n            setDisabledFinish( false),\n            setDisabledStart( false )\n         )\n\n    },[ questionsShape, limit ]);\n\n    const handleOfChangeTheValue = ( questionCorrect ) => {\n\n        const answersData = answersShape.data;\n\n        const index = answersData.findIndex( answers  => answers.id === questionsShape[0].id_pregunta );\n        \n        const respuesta_correcta = questionsShape[0].respuesta_correcta;\n\n        if ( questionCorrect !== null ) {\n            \n            filterDataAnswers( index, respuesta_correcta, questionCorrect );\n        }\n        else {\n            filterDataAnswers( index, respuesta_correcta, questionCorrect );\n        }\n    }\n\n    const filterDataAnswers = ( index, respuesta_correcta, questionCorrect ) => {\n\n        if ( respuesta_correcta !== null && questionCorrect !== null ) {\n\n            if ( respuesta_correcta.toString() === questionCorrect.toString() ) {\n                \n                correctAnswer( index, 1, respuesta_correcta, questionCorrect );\n\n            }\n            else{\n                correctAnswer( index, 0, respuesta_correcta, questionCorrect );\n            }\n            \n        }else{\n            if ( respuesta_correcta === null || undefined || '' ) {\n                \n                correctAnswer( index, 0, 1, 0 );\n            }\n            else if(  questionCorrect === null || undefined || '' ){\n\n                correctAnswer( index, 0, respuesta_correcta, 0 );\n            }\n        }\n\n    }\n\n    const correctAnswer = ( index, value, respuesta_correcta, questionCorrect) => {\n\n        if ( index.toString() === '-1' ) {\n\n            if ( respuesta_correcta.toString() === questionCorrect.toString() ) {\n            \n                const { data } = answersShape;\n\n                const newData = [\n\n                    ...data,\n                    {\n                        id: questionsShape[0].id_pregunta,\n                        bien_mal: value,\n                    }\n\n                ];\n                setAnswersShape({ data : newData });\n                \n            }\n            else {\n\n                const { data } = answersShape;\n\n                const newData = [\n\n                    ...data,\n                    {\n                        id: questionsShape[0].id_pregunta,\n                        bien_mal: value,\n                    }\n\n                ];\n                setAnswersShape({ data : newData });\n            }\n            \n        }else {\n\n            const { data } = answersShape;\n            \n            const dataFilter = data.map(function( dato ){\n            if( dato.id === questionsShape[0].id_pregunta ){\n                dato.bien_mal = value;\n            }\n            \n            return dato;\n            });\n\n            setAnswersShape({ data : dataFilter });\n\n        } \n    }\n\n    const changeAnswerData = () => {\n\n\n            const questions   = new Buffer.from( questionsShape[0].pregunta.data ).toString(\"ascii\");\n\n            const optionOne   = new Buffer.from( questionsShape[0].op1.data ).toString(\"ascii\");\n            const optionTwo   = new Buffer.from( questionsShape[0].op2.data ).toString('ascii');\n            const optionThree = new Buffer.from( questionsShape[0].op3.data ).toString('ascii');\n            const optionFour  = new Buffer.from( questionsShape[0].op4.data ).toString('ascii');\n            const optionFive  = new Buffer.from( questionsShape[0].op5.data ).toString('ascii');\n            const optionSix   = new Buffer.from( questionsShape[0].op6.data ).toString('ascii');\n\n            const Options = [\n                optionOne,\n                optionTwo,\n                optionThree,\n                optionFour,\n                optionFive,\n                optionSix\n            ];\n            setQuestion( questions );\n            setImages( Options );\n\n            handleOfChangeTheValue( null );\n        \n    }\n\n    const handleAnswersShapeRegister = () => {\n        \n        dispatch( answersShapeRegister(  uid, answersShape.data ) );\n    }\n\n    useEffect(() => {\n\n        if( questionsShape[0] !== undefined ) changeAnswerData();\n\n    },[ questionsShape ]);\n\n    return (\n        <>\n            {\n                ( questionsShape.length !== 1  && disabledFinish === true ) ? \n                <div className=\"row animated fadeIn\" >\n                    <br/>\n                    <div className=\"col-sm-6\" > \n                        <button className=\"btn btn-success btn-lg btn-block\"\n                            onClick={ handlePrevQuestion }\n                        >\n                            Atrás\n                        </button>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                        <button className=\"btn btn-primary btn-lg btn-block\"\n                            onClick={ handleAnswersShapeRegister }\n                        >  \n                            Enviar respuestas\n                        </button>\n                    </div>\n                </div>      \n                :\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        PRUEBAS FORMAS\n                    </header>\n\n                    {\n                        ( questionsShape.length !== 1 ) ? \n                            <div>\n                                <div className=\"col-sm-6\">\n                                    Cargando ...\n                                </div>\n                            </div>\n                        :\n                        <div className=\"panel-body\" style={{ textAlign:'center' }} >\n                            <div className=\"row\">\n                                <div className=\"col-sm-12\" style={{ paddingLeft: '5%' }}>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-4 form-group text-center\" />\n                                            <div className=\"col-sm-4 form-group text-center\">\n                                                <section className=\"panel\">\n                                                    <div id=\"gallery\" className=\"media-gal isotope\" style={{textAlign:'center' }} >\n                                                        <div className=\"images item  isotope-item\" >\n                                                            <img \n                                                                src={ question }\n                                                                alt=\"Option1\" />\n                                                            <h2 >Pregunta</h2>\n                                                        </div>\n                                                    </div> \n                                            </section>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-12\" style={{ paddingLeft: '5%' }} >\n                                    <div className=\"row\">\n\n                                        {\n                                            ( images !== [] ) ?\n\n                                                images.map(( e, key )=> \n                                                (\n                                                    \n                                                    <div className=\"col-sm-4 form-group text-center\" key={ key } >\n                                                        <section className=\"panel\">\n                                                            <div id=\"gallery\" className=\"media-gal isotope\" style={{ textAlign:'center' }} >\n                                                                <div className=\"images item  isotope-item\" >\n                                                                    <img \n                                                                        src={ e }\n                                                                    />\n                                                                    <h2 >Opción { key + 1 }</h2>\n                                                                    <button className=\"btn btn-info\" \n                                                                        onClick={ handleSelect }\n                                                                        id={ key + 1 }\n                                                                    >Seleccionar</button>\n                                                                </div>\n                                                            </div> \n                                                        </section>\n                                                    </div>\n\n                                                )\n                                                )\n                                            :\n                                            <div>\n                                                Cargando...\n                                            </div>\n                                        }\n                                    </div>\n                                    <div className=\"d-grid gap-2\">\n                                        <div className=\"col-sm-6\">\n                                            <button className=\"btn btn-primary\" \n                                                onClick={ handlePrevQuestion }\n                                                disabled={ disabledStart }\n                                            >Anterior</button>\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                            <button className=\"btn btn-success\" \n                                                onClick={ handleNextQuestion } \n                                                disabled={ disabledFinish }\n                                                >Siguiente</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </section>\n            }\n            \n        </>\n    )\n}\n","// localhost:4000/api/test-formas//tformas/answers\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchQuestionShapeFindAll = ( shape, INITIAL_LIMIT, setLimit ) => {\n\n    const history = useHistory();\n    const [ questionsShape, setQuestionsShape ] = useState([]);\n\n    useEffect(() => {\n        \n        testShapeLoading( shape, INITIAL_LIMIT );\n\n    }, [ shape, INITIAL_LIMIT ]);\n\n\n    useEffect(() => {\n        \n        return () => {\n            setQuestionsShape([]);\n        }\n    }, []);\n\n    const testShapeLoading = async ( id_test, skip ) => {\n\n        if ( skip < 1 ) {\n            setLimit( 1 );\n        }\n        else{\n        \n            const resp = await fetchConToken(`test-formas/tformas/answers`,{\n                limit: 1,\n                skip: skip,\n                id_test,\n            }, 'POST');\n\n            const body = await resp.json();\n        \n            try {\n\n                if ( body.ok ) {   \n                    \n                    const  { preguntaFormas } = body;\n\n                    setQuestionsShape(  preguntaFormas );\n        \n                }\n                else{\n                    Swal.fire(':(', body.msg, 'error');\n                    history.push(\"/answers/shape\");\n        \n                }\n            } catch ( error ) {\n                console.log(error);\n            }\n        }\n    \n    }\n\n    return { questionsShape };\n\n\n}","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenSidebar  = () => ({ type: types.uiOpenSidebar });\nexport const uiCloseSidebar = () => ({ type: types.uiCloseSidebar });\n\nexport const uiTrueDisabledButton = () => ({ type:types.uiTrueDisabledButton });\nexport const uiFalseDisabledButton = () => ({ type:types.uiFalseDisabledButton });\n\nexport const uiOpenSection  = () => ({ type: types.uiOpenSection });\nexport const uiCloseSection = () => ({ type: types.uiCloseSection });\n\nexport const uiOpenDrowp  = () => ({ type: types.uiOpenDrowp });\nexport const uiCloseDrowp = () => ({ type: types.uiCloseDrowp });\n\nexport const uiOpenLoadingButton = () => ({ type: types.uiOpenLoadingButton } );\nexport const uiCloseLoadingButton = () => ({ type: types.uiCloseLoadingButton } );\n\nexport const uiOpenLoadingSaveButton = () => ({ type: types.uiOpenLoadingSaveButton } );\nexport const uiCloseLoadingSaveButton = () => ({ type: types.uiCloseLoadingSaveButton } );\n\nexport const uiModalTrue = () => ({ type:types.uiModalTrue });\nexport const uiModalFalse = () => ({ type:types.uiModalFalse });\n\n// Institution\nexport const institutionAcordionSelect = () => ({ type:types.institutionAcordionSelect });\nexport const institutionAcordionDeselect = () => ({ type:types.institutionAcordionDeselect });\n\nexport const institutionSelectRegister = () => ({ type:types.institutionSelectRegister });\nexport const institutionDeselectRegister = () => ({ type:types.institutionDeselectRegister });\n\nexport const institutionSelectShow = () => ({ type:types.institutionSelectShow });\nexport const institutionDeselectShow = () => ({ type:types.institutionDeselectShow });\n\nexport const institutionOpenAcordion = () => ({ type:types.institutionOpenAcordion });\nexport const institutionCloseAcordion = () => ({ type:types.institutionCloseAcordion });\nexport const institutionIconClose = () => ({ type:types.institutionIconClose });\n\n\nexport const uieventLogout = () => ({ type: types.uieventLogout } );\n\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking:true,\n    // uid:null,\n    // name:null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch( action.type ){\n\n        case types.authLogin:\n                return{\n                    ...state,\n                    ...action.payload,\n                    checking: false\n                }\n        case types.authUserUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authUserUpdatePassword:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authCheckingFinish:\n            return{\n                ...state,\n                checking:false\n            }\n        case types.accountUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default: \n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    institutions:[],\n    activeInstitution:null\n}\n\nexport const institutionReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n\n        case types.institutionSetActive:\n            return {\n                ...state,\n                activeInstitution: state.institutions.find(  institution => institution.id_institucion.toString() === action.payload.id )\n            }\n        case types.institutionLoaded:\n            return {\n                ...state,\n                institutions: [ ...action.payload]\n            }\n        case types.institutionSetActiveClear:\n            return { \n                ...state,\n                activeInstitution:null\n            }\n        \n        default:\n            return state\n    }\n    \n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    questionActive: {\n        question: null,\n        name: '',\n        id_test: null,\n        id_resp: null\n    }\n}\n\nexport const questionShape = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSetActive:\n            return {\n                ...state,\n                questionActive: action.payload\n            }\n        case types.questionClearActive:\n            return { \n                ...state,\n                questionActive: null\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape:[]\n}\n\nexport const shapeReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.shapeLoaded:\n            return {\n                ...state,\n                shape:[ ...action.payload ]\n            }\n        default:\n            return state\n    }\n    \n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    testShape: [],\n    testShapeActive: null\n}\n\nexport const testShapeReducer = ( state = initialState, action  ) => {\n\n    switch ( action.type ) {\n\n        case types.testShapeActive:\n            return {\n                ...state,\n                testShapeActive: state.testShape.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testShapeClear:\n            return {\n                ...state,\n                testShapeActive: null\n            }\n        case types.testShapeLoaded:\n            return {\n                ...state,\n                testShape: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    uiDrowp:'dropdown',\n    uiSidebar:'nav-collapse',\n    uiSection:'',\n    uiLoadingButton:'fa fa-lock',\n    uiLoadingSaveButton:'fa fa-save',\n    uiDisabled:false,\n\n    uiSelection:'none',\n    uiRegisterSelectAcordion:'',\n    uiShowSelectInstitution:'',\n\n    uiIconClose:'dcjq-icon',\n\n    uiModal: false\n\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n    switch ( action.type ) {\n        case types.uiOpenSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse'\n            }\n        case types.uiCloseSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse hide-left-bar'\n            }\n        case types.uiTrueDisabledButton:\n            return {\n                ...state,\n                uiDisabled:true\n            }\n        case types.uiFalseDisabledButton:\n            return {\n                ...state,\n                uiDisabled:false\n            }\n        case types.uiOpenSection:\n            return {\n                ...state,\n                uiSection:''\n            }\n        case types.uiCloseSection:\n            return {\n                ...state,\n                uiSection:'merge-left'\n            }\n        case types.uiOpenDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown open'\n            }\n        case types.uiCloseDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown'\n            }\n\n        case types.uiOpenLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-lock'\n            }\n        case types.uiCloseLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-spin fa-refresh'\n            }\n            \n        case types.uiOpenLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-save'\n            }\n        case types.uiCloseLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-spin fa-refresh'\n            }\n        \n        case types.uieventLogout:\n            return {\n                ...initialState\n            }\n        \n        // Events Screen Institution\n\n        case types.institutionAcordionSelect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'block',\n                checking:false\n            }\n        case types.institutionAcordionDeselect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'none',\n                checking:false\n            }\n        case types.institutionSelectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'active',\n                checking:false\n            }\n        case types.institutionDeselectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'',\n                checking:false\n            }\n\n        case types.institutionSelectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:'active'\n            }\n        case types.institutionDeselectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:''\n            }\n        case types.institutionOpenAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionCloseAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionIconClose:\n            return{\n                ...state,\n                ...action.payload,\n                uiIconClose:'dcjq-icon',\n                cheking:false\n            }\n        case types.uiModalTrue:\n            return {\n                ...state,\n                uiModal: true\n            }\n        case types.uiModalFalse:\n            return {\n                ...state,\n                uiModal: false\n            }\n                \n    \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initState = {\n    testSimple: [],\n    testActiveSimple: null\n}\n\nexport const testSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleActive:\n            return {\n                ...state,\n                testActiveSimple: state.testSimple.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testSimpleClear:\n            return {\n                ...state,\n                testActiveSimple: null\n            }\n        case types.testSimpleLoaded:\n            return { \n                ...state,\n                testSimple: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    category:[],\n    categoryActive: null\n}\n\nexport const testSimpleCategoryReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleCategoryActive:\n            return { \n                ...state,\n                categoryActive: state.category.find(  e => e.id_categoria.toString() === action.payload.id )\n            }\n        case types.testSimpleCategoryClear:\n            return {\n                ...state,\n                categoryActive: null\n            }\n        case types.testSimpleCategoryLoaded:\n            return {\n                ...state,\n                category:[ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initState = { \n    questionActive: [],\n}\n\nexport const questionSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSimpleSetActive:\n            return {\n                ...state,\n                questionActive:  action.payload \n            }\n        case types.questionSimpleClearActive:\n            return { \n                ...state,\n                questionActive: [],\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersSimpleActive: null,\n    answers: null\n}\n\nexport const answersSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersSimpleActive:\n            return{\n                ...state,\n                answersSimpleActive: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersSimpleActive: null\n            }\n        case types.answersfilter:\n                return{\n                    ...state,\n                    answers: action.payload\n                }\n        case types.answersfilterActive:\n            let array = state.answers;\n            array[ action.payload.position ] = action.payload.answersActive \n            return{\n                ...state,\n                answers: array\n            }      \n        default:\n            return  state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape:[]\n}\n\nexport const shapeAnswersReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.shapeAnswersActive:\n            return {\n                ...state,\n                shape:[ ...action.payload ]\n            }\n        default:\n            return state\n    }\n    \n}\n","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersShape: [],\n}\n\nexport const answersShapeReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersShapeActive:\n            return{\n                ...state,\n                answersShape: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersShape: []\n            }\n        // case types.answersfilter:\n        //         return{\n        //             ...state,\n        //             answers: action.payload\n        //         }\n        // case types.answersfilterActive:\n        //     let array = state.answers;\n        //     array[ action.payload.position ] = action.payload.answersActive \n        //     return{\n        //         ...state,\n        //         answers: array\n        //     }      \n        default:\n            return  state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { institutionReducer } from \"./institutionReducer\";\nimport { questionShape } from \"./questionShape\";\nimport { shapeReducer } from \"./shapeReducer\";\nimport { testShapeReducer } from \"./testShapeReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { testSimpleReducer } from \"./testSimpleReducer\";\nimport { testSimpleCategoryReducer } from \"./testSimpleCategoryReducer\";\nimport { questionSimpleReducer } from \"./questionSimpleReducer\";\nimport { answersSimpleReducer } from \"./answersSimpleReducer\";\nimport { shapeAnswersReducer } from \"./shapeAnswersReducer\";\nimport { answersShapeReducer } from \"./answersShapeReducer\";\n\nexport const rootReducer = combineReducers({\n       ui:uiReducer,\n       auth: authReducer,\n       institution:institutionReducer,\n       shape:shapeReducer,\n       questionShape:questionShape,\n       tShape:testShapeReducer,\n       tSimple:testSimpleReducer,\n       category:testSimpleCategoryReducer,\n       qSimple:questionSimpleReducer,\n       answerSimple:answersSimpleReducer,\n       answerShape:shapeAnswersReducer,\n       shapeAnswer:answersShapeReducer\n\n});","import { createStore , compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n)","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport {\n  uiCloseLoadingButton,\n  uiCloseLoadingSaveButton,\n  uieventLogout,\n  uiFalseDisabledButton,\n  uiOpenLoadingButton,\n  uiOpenLoadingSaveButton,\n  uiTrueDisabledButton,\n} from \"./ui\";\n// import { eventLogout } from \"./events\";\n\nexport const startLogin = (username, password) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startLoginAddAccount = (username, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startRegister = (\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  genero,\n  edad,\n  direccion,\n  padres_responsables,\n  dni,\n  email,\n  username,\n  password,\n  password2,\n  id_institucion\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    if (password !== password2) {\n      return (\n        Swal.fire(\":(\", \"Las contraseñas no coinciden\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    } else if (\n      password.trim().length <= 5 ||\n      \"\" ||\n      password2.trim().length <= 5 ||\n      \"\" ||\n      username === \"\"\n    ) {\n      return (\n        Swal.fire(\":(\", \"El username o password no son validos\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    }\n\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      {\n        nombre,\n        primer_apellido,\n        segundo_apellido,\n        celular,\n        imei,\n        genero,\n        edad,\n        direccion,\n        padres_responsables,\n        dni,\n        email,\n        username,\n        password,\n        id_institucion,\n      },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      dispatch(startLoginAddAccount(username, password));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startUpdateAccount = (\n  persona_id,\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  edad,\n  dni,\n  direccion,\n  email\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      const resp = await fetchConToken(\n        \"users/update\",\n        {\n          persona_id,\n          nombre,\n          primer_apellido,\n          segundo_apellido,\n          celular,\n          imei,\n          edad,\n          dni,\n          direccion,\n          email,\n        },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(accountUpdated(persona));\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(uiOpenLoadingSaveButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startUpdateUser = (persona_id, username) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (username.trim() === \"\") {\n        return (\n          Swal.fire(\"Error\", \"El username esta vacio\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-user\",\n        { persona_id, username },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(\n          login({\n            uid: body.uid,\n            username: body.username,\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const startUpdateUserPassword = (\n  persona_id,\n  passwordCurrent,\n  passwordNew,\n  passwordAgain\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (passwordNew.trim() === \"\" || passwordNew.trim().length <= 5) {\n        return (\n          Swal.fire(\"Error\", \"La contraseña es menor a 6\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      } else if (passwordNew !== passwordAgain) {\n        return (\n          Swal.fire(\"Error\", \"Las contraseñas no coinciden\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-userp\",\n        { persona_id, passwordCurrent, passwordNew },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      console.log(body);\n\n      if (body.ok) {\n        dispatch(\n          login({\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst accountUpdated = (persona) => ({\n  type: types.accountUpdate,\n  payload: persona,\n});\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(uieventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });\n","\nimport { useState } from \"react\"\n\nexport const useForm = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ( { target } ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n\n        setValues({\n            ...values,\n           [target.name] : target.value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdateAccount } from '../../actions/auth';\nimport { uiFalseDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const AccountScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { persona } = useSelector(state => state.auth);\n    \n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui)\n\n    const [ formAccountValues, handleAccountInputChange ] = useForm( persona );\n    \n    const { persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email } = formAccountValues;\n\n    const handleUpdate = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startUpdateAccount( persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email ) );\n\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ dispatch ])\n\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>  INFORMACIÓN PERSONAL</h2>\n                                </div>\n                                <form alt=\"formulario\" className=\"form-horizontal\" onSubmit={ handleUpdate } >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">\n                                            Foto principal\n                                        </label>\n                                        <div className=\"col-sm-6\">\n                                            <img\n                                                className=\"w150 img-thumbnail\"\n                                                src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" \n                                                alt=\"perfil\"\n                                            />\n                                            <br />\n                                            <br />\n                                            <input type=\"file\" className=\"form-control\"></input>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nombre</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"nombre\"\n                                                value={ nombre }\n                                                onChange= { handleAccountInputChange }\n                                                id=\"nombre\"\n                                                name=\"nombre\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Primer Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"Primer Apellido\"\n                                                id=\"primer_apellido\"\n                                                name=\"primer_apellido\"\n                                                value={ primer_apellido }\n                                                onChange= { handleAccountInputChange }\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Segundo Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"segundo_apellido\"\n                                                name=\"segundo_apellido\"\n                                                className=\"form-control\"\n                                                value={ segundo_apellido }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Numero Celular</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"celular\"\n                                                name=\"celular\"\n                                                className=\"form-control\"\n                                                value={ celular }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Imei</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"imei\"\n                                                name=\"imei\"\n                                                className=\"form-control\"\n                                                value={ imei }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dni</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"dni\"\n                                                name=\"dni\"\n                                                className=\"form-control\"\n                                                value={ dni }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Edad</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"edad\"\n                                                name=\"edad\"\n                                                className=\"form-control\"\n                                                value={ edad }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Email</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"email\"\n                                                name=\"email\"\n                                                className=\"form-control\"\n                                                value={ email }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dirección</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"direccion\"\n                                                name=\"direccion\"\n                                                className=\"form-control\"\n                                                value={ direccion }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">&nbsp;</label>\n                                        <div className=\"col-sm-6\">\n                                            <button type=\"submit\" className=\"btn btn-primary btn-round btn-block\" disabled={ uiDisabled } >\n                                                <i className={ uiLoadingSaveButton } ></i>  Guardar\n                                        </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startUpdateUserPassword } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const ChangePasswordScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n    const { persona_id } = useSelector(state => state.auth.persona);\n    \n    const [ formPasswordValues, handlePasswordInputChange ] = useForm({\n\n        passwordCurrent:'',\n        passwordNew:'',\n        passwordAgain:''\n\n    });\n    const inputStylePassword = {\n        color:'#1D253E'\n    }\n    \n    const { passwordCurrent, passwordNew, passwordAgain } = formPasswordValues;\n\n    useEffect(() => {\n        if ( passwordNew.trim() === '' ||  passwordAgain.trim() === ''|| passwordCurrent.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( passwordCurrent.trim().length <= 5 || passwordNew.trim().length <= 5 || passwordAgain.trim().length <= 5 ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        \n          dispatch( uiFalseDisabledButton() );\n\n    }, [ passwordCurrent, passwordNew, passwordAgain, dispatch ])\n\n\n    const handleChangePassword = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUserPassword( persona_id, passwordCurrent, passwordNew, passwordAgain ) );\n    }\n    \n\n    return (\n        <div className=\"col-md-12\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>CAMBIAR CONTRASEÑA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleChangePassword } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Contraseña Actual</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Contraseña actual\"\n                                                value={ passwordCurrent }\n                                                onChange= { handlePasswordInputChange }\n                                                id=\"passwordCurrent\"\n                                                name=\"passwordCurrent\"\n                                                className=\"form-control\" \n                                                style={ inputStylePassword }\n                                                />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nueva Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                id=\"passwordNew\"\n                                                name=\"passwordNew\"\n                                                placeholder=\"Contraseña nueva\"\n                                                className=\"form-control\"\n                                                value={ passwordNew }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Repetir Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Confirme contraseña\"\n                                                id=\"passwordAgain\"\n                                                name=\"passwordAgain\"\n                                                className=\"form-control\"\n                                                value={ passwordAgain }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i \n                                            className={ uiLoadingSaveButton } \n                                            ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-warning col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/setting\"\n                                            ><i className=\"fa fa-times\" ></i> Cancelar</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport 'moment/locale/es';\nimport { startUpdateUser } from '../../actions/auth';\nimport { Link } from 'react-router-dom';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n// change Spanish\n\nmoment.locale('es');\n\nexport const UserScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { usuarios, persona_id } = useSelector(state => state.auth.persona);\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [ formUserValues, handleUserInputChange ] = useForm( usuarios[0] );\n\n    const { username, createdAt, updatedAt  } = formUserValues;\n\n    const handleUpdateUser = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUser( persona_id, username ) );\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n\n        if( username.trim() === '' ){\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ username, dispatch ]);\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>INFORMACIÓN CUENTA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleUpdateUser } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">User Name</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"User Name\"\n                                                value={ username }\n                                                onChange= { handleUserInputChange }\n                                                id=\"username\"\n                                                name=\"username\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Fecha de Creación</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"create\"\n                                                className=\"form-control\"\n                                                value={ moment(createdAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Ultima Actualización</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"update\"\n                                                className=\"form-control\"\n                                                value={ moment(updatedAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i className={ uiLoadingSaveButton } ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-success col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/settingp\"\n                                            >\n                                            <i className=\"fa fa-lock\" ></i> Cambiar Contraseña</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUniversity, faVials, faVial } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport '../../styles/styles.css';\nimport { institutionAcordionDeselect, institutionAcordionSelect, institutionDeselectRegister, institutionDeselectShow, institutionSelectRegister, institutionSelectShow } from '../../actions/ui';\n\n\nexport const Aside = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiSelection, uiRegisterSelectAcordion, uiShowSelectInstitution } = useSelector(state => state.ui);\n\n    const { uiSidebar } = useSelector(state => state.ui);\n\n    const handleChangeStylePerfil = ( e ) => {\n        e.preventDefault();\n\n        dispatch( institutionAcordionDeselect() );\n        dispatch( institutionDeselectRegister() );\n        dispatch( institutionDeselectShow() );\n    }\n    \n    const handleChangeStyle = ( e ) => {\n        e.preventDefault();\n        console.log( uiSelection );\n        if( uiSelection === 'block' ){\n            return (\n                dispatch( institutionAcordionDeselect() ),\n                dispatch( institutionDeselectRegister() ),\n                dispatch( institutionDeselectShow() )\n            )\n        }\n        dispatch( institutionAcordionSelect() );\n\n    }\n\n    const handleChangeStyleShow = ( e ) => {\n        e.preventDefault();\n        dispatch( institutionSelectShow() );\n        dispatch( institutionDeselectRegister() );\n    }\n    const handleChangeStyleRegister = ( e ) => {\n        e.preventDefault();\n        dispatch( institutionSelectRegister() );\n        dispatch( institutionDeselectShow() );\n    }\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <aside>\n            <div\n                id=\"sidebar\"\n                className={ uiSidebar }\n            >\n            <div className=\"leftside-navigation\">\n                <ul className=\"sidebar-menu\" id=\"nav-accordion\">\n                    \n                    <li className=\"sub-menu\" onClick={ handleChangeStylePerfil } >\n                        <NavLink to='/user' activeClassName=\"active\" >\n                            <i className=\"fa fa-user\"></i>\n                            <span>Perfil</span>\n                        </NavLink>\n                    </li>\n                    \n                    <li className=\"sub-menu\" style={{ cursor:\"pointer\" }}  >\n                        <div onClick={ handleChangeStyle }>\n                            <NavLink to=\"/institution\" activeClassName=\"active\">\n                                <i>\n                                    <FontAwesomeIcon icon={ faUniversity } />\n                                </i> \n                                <span>Institución</span>\n                            </NavLink>\n                        </div>\n                        <ul className=\"sub\" style={{ display: uiSelection }}>\n                            <li className={ uiShowSelectInstitution } onClick={ handleChangeStyleShow } >\n                                <NavLink to=\"/institution/view\">\n                                    Ver Instituciónes\n                                </NavLink>\n                            </li>\n                            <li className={ uiRegisterSelectAcordion } onClick={ handleChangeStyleRegister }>\n                                <NavLink to=\"/institution\" >\n                                    Registrar\n                                </NavLink>\n                            </li>\n                         </ul>\n                    </li>\n                    <li className=\"sub-menu\" >   \n                        <NavLink to=\"/test/register\" activeClassName=\"active\" >\n                            <i>\n                                <FontAwesomeIcon\n                                    icon={ faVial }\n                                />\n                            </i>\n                            <span>Registrar pruebas</span>\n                        </NavLink>\n                    </li> \n                    <li className=\"sub-menu\" >\n                        <NavLink to=\"/answers\"  activeClassName=\"active\" exact >\n                            <i>\n                                <FontAwesomeIcon icon={ faVials } />\n                            </i> \n                            <span>Pruebas</span>\n                        </NavLink>\n                    </li>\n                    <li onClick={ handleLogout } >\n                        <NavLink to=\"/auth/login\" className='hyper'>\n                            <i className=\"fa fa-sign-out\"></i>\n                            <span>Cerrar Sesión</span>\n                        </NavLink>\n                    </li>\n                </ul>            \n            </div>\n            </div>\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport { uiCloseDrowp, uiCloseSection, uiCloseSidebar, uiOpenDrowp, uiOpenSection, uiOpenSidebar } from '../../actions/ui';\nimport '../../styles/styles.css';\n\nexport const Header = () => {\n    const { uiDrowp, uiSidebar  } = useSelector(state => state.ui);\n   \n    const dispatch = useDispatch();\n\n    const handleSidebar = ( e ) => {\n        e.preventDefault();\n\n        if( uiSidebar === 'nav-collapse' ){\n            return (\n                dispatch( uiCloseSidebar()),\n                dispatch( uiCloseSection())     \n            );\n        }\n        dispatch( uiOpenSidebar());\n        dispatch( uiOpenSection());\n    }\n\n    const dropDownOpen = ( e ) => {\n        e.preventDefault();\n        \n        if ( uiDrowp === 'dropdown' ) {\n            \n           return dispatch( uiOpenDrowp() );\n            \n        }\n\n        dispatch( uiCloseDrowp() );\n    }\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n\n    return (\n        <header className=\"header fixed-top clearfix\">\n            <div className=\"brand\">\n\n                <a href=\"index.html\" className=\"logo\">\n                    <img \n                        src=\"https://mauriciocartagena.github.io/my-perfil/static/media/Logo.2921d167.png\" \n                        style={{ width:168,height:40 }}  alt=\"logo\" \n                    />\n                </a>\n                <div \n                    className=\"sidebar-toggle-box\"  \n                    onClick = { handleSidebar }\n                >\n                    <div className=\"fa fa-bars\"></div>\n                </div>\n            </div>\n        \n            <div className=\"top-nav clearfix\">\n                <ul className=\"nav pull-right top-menu\">\n                    <li \n                        className={ uiDrowp }\n                        >\n                        <a data-toggle=\"dropdown\"\n                            className=\"dropdown-toggle\" \n                            onClick={ dropDownOpen } \n                            style={{cursor:\"pointer\" }}\n                            >\n                            <img alt=\"\" src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" />  \n                            <span className=\"username\" > &nbsp; Mauricio Cartagena </span>\n                            <b className=\"caret\"></b>\n                        </a>\n                        <ul className=\"dropdown-menu extended logout\">\n                            <li>\n                                <Link to='/user' >\n                                    <i className=\" fa fa-suitcase\"></i>\n                                    Perfil\n                                </Link>                                        \n                            </li>\n                            <li>\n                               <Link to='/user/setting' >\n                                    <i className=\"fa fa-cog\"></i>\n                                    Configuración\n                                </Link>    \n                            </li>\n                            <li className='hyper' onClick = { handleLogout } >\n                                <a>\n                                    <i className=\"fa fa-key\"></i>Cerrar Sesión\n                                </a>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Aside } from './Aside';\nimport { Header } from './Header';\n\nexport const Layout = ({ children }) => {\n    \n    const { uiSection } = useSelector(state => state.ui)   \n\n    return (\n        \n        <section id=\"container\">\n            <Header />\n            <Aside />    \n           <section \n               id=\"main-content\"                 \n               className={ uiSection } \n               >\n               <section className=\"wrapper\">\n\n                { children }\n\n               </section>\n           </section>\n       </section>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AccountScreen } from '../../components/Accounts/AccountScreen';\nimport { ChangePasswordScreen } from '../../components/Accounts/ChangePasswordScreen';\nimport { UserScreen } from '../../components/Accounts/UserScreen';\nimport { Layout } from '../../components/main/Layout';\n\n\n\nexport const AccountRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/user\"\n                    component={ AccountScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/setting\"\n                    component={ UserScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/settingp\"\n                    component={ ChangePasswordScreen }\n                />\n                <Redirect to=\"/user\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startLogin } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const LoginScreen = () => {\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lUsername:'ad2min',\n        lPassword:'administrador'\n    });\n    \n    const { lUsername, lPassword } = formLoginValues;\n    \n    const handleLogin = ( e ) => {\n        e.preventDefault(); \n\n        if ( lUsername.trim() === '' || lPassword.trim() === '') {\n            return Swal.fire(':(', 'Username o contraseña esta vacia'  , 'error');\n        }\n        else if( lPassword.trim().length <= 5 ) {\n           return Swal.fire(':(', `La contraseña debe tener 6 a mas digitos y tiene ${ lPassword.trim().length }`  , 'error');\n        }\n        \n        dispatch( startLogin( lUsername, lPassword ) );  \n        \n    }\n\n    useEffect(() => {\n\n        if ( lUsername.trim() === '' ||  lPassword.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( lPassword.trim().length <= 5  ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n    \n    }, [ lUsername, lPassword, dispatch ]);\n\n    return (\n        <div className=\"container animate__animated animate__fadeIn\">\n            <form className=\"form-signin\" onSubmit={ handleLogin } >\n                <h2 className=\"form-signin-heading\">Sistema de Psicologia</h2>\n                <div className=\"login-wrap\">\n                    <div className=\"user-login-info\">\n                        <input \n                            type=\"text\" \n                            name=\"lUsername\"\n                            className=\"form-control\"  \n                            placeholder=\"Username\" \n                            autoFocus\n                            autoComplete=\"off\"\n                            value={ lUsername }\n                            onChange={ handleLoginInputChange }\n                            />\n                        <input \n                            type=\"password\"\n                            name=\"lPassword\" \n                            className=\"form-control\" \n                            placeholder=\"Password\" \n                            autoComplete=\"off\"\n                            value={ lPassword }\n                            onChange={ handleLoginInputChange }\n                            />\n                    </div>\n                    <label className=\"checkbox\">\n                        <span className=\"pull-right\">\n                            <a data-toggle=\"modal\" href=\"#myModal\"> ¿Olvidadeste tu Contraseña?</a>\n                        </span>\n                        <br/>\n                    </label>\n                    <button className='btn btn-lg btn-login btn-block'  disabled={ uiDisabled } type=\"submit\">\n                        <i _ngcontent-kod-c28=\"\" className={ uiLoadingButton }></i> Iniciar Sesión\n                    </button>\n\n                    <div className=\"registration\">\n                    ¿No tienes una cuenta?                   \n                        <Link \n                            to=\"/auth/register\"\n                        > Crear cuenta \n                        </Link>\n                    </div>\n                </div>\n                {/* Modal */}\n                <div aria-hidden=\"true\" aria-labelledby=\"myModalLabel\" role=\"dialog\" tabIndex=\"-1\" id=\"myModal\" className=\"modal fade in\" style={{ display:\"none\" }} >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                                <h4 className=\"modal-title\">¿Olvidaste tu Contraseña?</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p>Ingrese tu email para restablecer tu contraseña</p>\n                                <input type=\"text\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control placeholder-no-fix\" />\n\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button data-dismiss=\"modal\" className=\"btn btn-default\" type=\"button\">Cancel</button>\n                                <button className=\"btn btn-success\" type=\"button\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* End Modal */}\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport cryptoRandomString from 'crypto-random-string';\n\n\nimport { useForm } from '../../hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startRegister } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n\n        nombre: \"tu nombre\",\n        primer_apellido: \"tu primer apellido\",\n        segundo_apellido: \"tu segundo apellido\",\n        celular: `${ cryptoRandomString({ length:8, type:'numeric' }) }`,\n        imei: `${ cryptoRandomString({ length:12, type:'numeric' }) }`,\n        genero: \"Masculino\",\n        edad: \"15\",\n        direccion: \"Cochabamba\",\n        padres_responsables: \"padres\",\n        dni: `${ cryptoRandomString({ length: 8, type: 'url-safe' })}`,\n        email: `${ cryptoRandomString({ length:8, type:'distinguishable' }) }@gmail.com`,\n        username: \"\",\n        password: \"\",\n        password2:\"\",\n        id_institucion: \"1\"\n\n    });\n\n    const { nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, id_institucion, password2 } = formRegisterValues;\n\n    const handleRegisterUser = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startRegister( nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, password2, id_institucion ) );\n    }\n\n    useEffect(() => {\n\n        if ( password.trim() === '' ||  password2.trim() === ''|| username.trim() === '' ) {\n          return dispatch( uiTrueDisabledButton() );\n        }\n        else if( password.trim().length <= 5 || password2.trim().length <= 5 ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n  \n    }, [ password, password2, username, dispatch ]);\n  \n\n\n    return (\n        <div className=\"container\">\n            <form className=\"form-signin\" onSubmit={ handleRegisterUser }>\n                <h2 className=\"form-signin-heading\">Crear Cuenta</h2>\n\n                <div className=\"login-wrap\">\n\n                    <input \n                        type=\"text\"     \n                        name=\"username\" \n                        className=\"form-control\"\n                        placeholder=\"User Name\" \n                        value={ username }\n                        onChange={ handleRegisterInputChange }\n                         \n                    />\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        className=\"form-control\" \n                        placeholder=\"Contraseña\" \n                        value={ password }\n                        onChange={ handleRegisterInputChange }\n                    />\n                    <input \n                        type=\"password\" \n                        className=\"form-control\"\n                        placeholder=\"Confirmar Contraseña\"\n                        name=\"password2\"\n                        value={ password2 }\n                        onChange={ handleRegisterInputChange }\n                    />\n\n                    <button className=\"btn btn-lg btn-login btn-block\" type=\"submit\" disabled={ uiDisabled } >\n                        <i _ngcontent-kod-c28=\"\" className={ uiLoadingButton }></i> Crear Cuenta\n                    </button>\n\n                    <div className=\"registration\">\n                        ¿Ya tienes una cuenta?\n                        <Link to=\"/auth/login\" >  Login\n                        </Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../../components/auth/LoginScreen';\nimport { RegisterScreen } from '../../components/auth/RegisterScreen';\n\n\nexport const AuthRouter = () => {\n\n    document.body.style.backgroundColor = \"#32323A\";\n\n    return (\n        <div>\n            <Switch>\n                    <Route\n                        exact\n                        path=\"/auth/login\"\n                        component= { LoginScreen }\n                    />\n                    <Route\n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" /> \n\n                </Switch>\n        </div>\n      \n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props)=>(\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n        component={ ( props )=>(\n            (isAuthenticated)\n            ? ( <Redirect to=\"/user\"/> )\n            : ( <Component { ...props } /> )\n\n        )}\n    />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterInstitution = ( name, address, phone, emei, nit, contact_name, mobile ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'institutos/new',{ \n                nombre:name, \n                direccion:address, \n                celular:mobile, \n                telefono:phone, \n                imei:emei, \n                nit:nit, \n                nombre_contacto:contact_name \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Institución registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const institutionSetActive = ( institutions, id ) => ({ \n    type:types.institutionSetActive,\n    payload: { institutions, id }\n});\n\nexport const updatedInstitution = ( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'institutos/update', { \n                nombre:name,\n                direccion:address,\n                celular:mobile,\n                telefono:phone,\n                imei:emei,\n                nit:newNit,\n                nombre_contacto:contact_name,\n                id_institucion:id_institucion\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Institución actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const institutionSetActiveClear = () => ({\n    type:types.institutionSetActiveClear\n});\n\n\nexport const institutionLoaded = ( institutions ) => ({\n    type: types.institutionLoaded,\n    payload: institutions \n});\n","import Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { institutionLoaded, institutionSetActive } from '../actions/institution';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport  const  useFetchInstituions = () =>{\n\n    const dispatch = useDispatch();\n    const [ uiDisabled, setUiDisabled] = useState( false )\n    const history  = useHistory();\n\n    const [ institutions, setInstitutions ] = useState({\n        data_institutions:[]\n    });\n\n    const handleSwitchChange = useCallback (() => {\n        setUiDisabled( true )\n    },[]);\n\n    useEffect(()=>{\n\n        const fetchInstitution = () =>{\n\n            fetchConToken( 'institutos/inst', 'GET' )\n            .then(res => res.json())\n            .then(json => {\n        \n                let rows = [];\n        \n                json.instituciones.forEach(item =>rows.push({\n                    id_institucion:item.id_institucion,\n                    nombre: item.nombre,\n                    direccion: item.direccion,\n                    celular: item.celular,\n                    telefono: item.telefono ,\n                    imei: item.imei,\n                    nit: item.nit,\n                    nombre_contacto:item.nombre_contacto,\n                    modified: <button className=\"btn btn-primary\" id= { item.id_institucion }  onClick= { ( e ) => { \n                        // It's a little more understandable\n                        return(\n                            dispatch( institutionLoaded(  json.instituciones ) ),\n                            dispatch( institutionSetActive( json.instituciones, e.target.id  ) ),\n                            history.push('/institution/update')\n                        )\n                    }}>Modificar</button>,\n                    deleted: <button className=\"btn btn-success\"  disabled={ uiDisabled } id= { item.id_institucion } \n                        onClick = { ( e ) => {\n                            return (\n                                institutionDelete( e.target.id )  \n                            )\n                        }}\n                    >Eliminar</button>\n                }));\n                setInstitutions( { data_institutions:rows });\n            })\n            .catch(err => console.error(err));\n            \n        }\n        const institutionDelete = ( id_institucion ) => { \n\n            handleSwitchChange();\n\n            fetchConToken( 'institutos/delete', { \n                id_institucion\n            }, 'DELETE')\n            .then(res => {\n                if (res.ok) { \n                    Swal.fire(':)','Institución Eliminada', 'success');\n                    fetchInstitution();\n                }\n            })\n            .catch(err => (\n                console.error(err)),\n            );\n        };\n        fetchInstitution();\n        \n        // Clear useEffect\n        return () => {\n            setInstitutions({ data_institutions:[] });\n            setUiDisabled( false );\n        }  \n        \n    },[ history, dispatch, uiDisabled, handleSwitchChange ]);\n\n    return institutions; \n\n}","import React, { useEffect } from 'react';\nimport {  MDBDataTable } from 'mdbreact';\nimport { useFetchInstituions } from '../../hooks/useFetchInstitutions';\nimport { useDispatch } from 'react-redux';\nimport { institutionSetActiveClear } from '../../actions/institution';\n\nexport const InstitutionScreen = () => {\n    \n    const dispatch = useDispatch();\n    // Rename the name\n    const { data_institutions:institutions } =  useFetchInstituions();\n\n    const data = {\n      columns: [\n          {\n            label: 'Nombre',\n            field: 'nombre',\n            sort: 'asc',\n            width: 200,\n          },\n          {\n            label: 'Direccion',\n            field: 'direccion',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Nit',\n            field: 'nit',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Telefono',\n            field: 'telefono',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Celular',\n            field: 'celular',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Imei',\n            field: 'imei',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Nombre de Contacto',\n            field: 'nombre_contacto',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Modificar',\n            field: 'modified',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Eliminar',\n            field: 'deleted',\n            sort: 'asc',\n            width: 200\n          },\n      ],\n      rows: institutions\n    };\n\n    useEffect( () => {\n\n      dispatch( institutionSetActiveClear() );\n\n    },[ dispatch ]);\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Institutos\n                </header>\n                {\n                  (data.rows !== [])\n                  ?\n                  <div className=\"panel-body\">\n                    <MDBDataTable\n                        noRecordsFoundLabel=\"Cargando...\"\n                        scrollX\n                        autoWidth={true}\n                        maxHeight=\"40vh\"\n                        striped\n                        bordered\n                        small\n                        data={ data }\n                    />\n                  </div>\n                  :\n                  <div className=\"panel-body\">\n                    <div>Cargando...</div>\n                  </div>\n                }\n            </section>\n        </div>\n    )\n}\n","\nimport { useState } from \"react\"\n\nexport const useFormPhone = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = (  value  ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n        setValues({\n            ...values,\n           mobile : value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react'\nimport InputMask from 'react-input-mask';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { institutionSetActiveClear, startRegisterInstitution } from '../../actions/institution';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\n \n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n\n    const [ formInstitutionValues, handleInstitutionInputChange ] = useForm({ \n        name:'',\n        address:'',\n        phone:'',\n        emei:'',\n        nit:'',\n        contact_name:''\n    });\n    const [ formInstitutionPhoneValues, handleInstitutionPhoneInputChange ] = useFormPhone({ \n        mobile:'',\n    });\n\n    const { name, address, phone, emei, nit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n        dispatch(startRegisterInstitution( name, address, phone, emei, nit, contact_name, mobile ));\n    }\n\n    useEffect(() => {\n\n        dispatch( institutionSetActiveClear() );\n        \n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiTrueDisabledButton() )\n            )\n\n        }\n        dispatch( uiFalseDisabledButton() );\n       \n        \n    }, [ address ,phone ,emei ,nit ,contact_name ,mobile ,name, dispatch ]);\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    REGISTRAR INSTITUCIÓN\n                </header>\n                <div className=\"panel-body\">\n                    <div className=\"position-center\">\n                        <form autoComplete=\"off\" onSubmit={ handleRegister } >\n                            <div className=\"form-group\">\n                                <label>Nombre</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"name\" \n                                    placeholder=\"Ingrese nombre\"  \n                                    name=\"name\" \n                                    value={ name } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Dirección</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"address\" \n                                    placeholder=\"Ingrese dirección\"  \n                                    name=\"address\" \n                                    value={ address } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Celular</label>\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: mobile,\n                                        required: true,\n                                        autoFocus: true\n                                    }}\n                                    dropdownClass=\"col-lg-3\"\n                                    inputStyle={{ width:\"100%\" }}\n                                    placeholder=\"Enter phone number\"\n                                    value={ mobile }\n                                    onChange={ handleInstitutionPhoneInputChange }\n                                    country=\"bo\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Telefono</label>\n                               <InputMask \n                                    placeholder=\"Ingrese telefono\"\n                                    className=\"form-control\" \n                                    mask=\"999-99-999\" \n                                    style={{ color:\"black\" }}\n                                    maskChar={null} \n                                    name=\"phone\"\n                                    id=\"phone\" \n                                    value={ phone } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Imei</label>\n                                <InputMask \n                                    className=\"form-control\" \n                                    mask=\"999999999999999\" \n                                    style={{ color:\"black\" }}\n                                    maskChar={null} \n                                    placeholder=\"Ingrese imei\"  \n                                    id=\"emei\" \n                                    name=\"emei\" \n                                    value={ emei } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nit</label>\n                                <InputMask \n                                    className=\"form-control\" \n                                    mask=\"9999999999999\" \n                                    style={{ color:\"black\" }}\n                                    maskChar={null} \n                                    id=\"nit\" \n                                    placeholder=\"Ingrese Nit\"  \n                                    name=\"nit\" \n                                    value={ nit } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nombre de Contacto</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"contact_name\" \n                                    placeholder=\"Ingrese nombre de contacto\"  \n                                    name=\"contact_name\" \n                                    value={ contact_name } \n                                    onChange={ handleInstitutionInputChange }\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-info\" disabled={ uiDisabled } > \n                                <i className={ uiLoadingSaveButton } /> Registrar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </div>   \n    )\n}\n","import React, { useEffect } from 'react'\nimport PhoneInput from 'react-phone-input-2';\nimport InputMask from 'react-input-mask';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { updatedInstitution } from '../../actions/institution';\n\nexport const FormUpdate = ( { data = '' } ) => {\n\n    const dispatch = useDispatch();\n\n    const  { nombre = '', celular = '', direccion = '', telefono = '', imei = '', nit = '', nombre_contacto = '', id_institucion = '' } = data;\n\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n    \n    const [ formInstitutionValues, handleInstitutionInputChange ] = useForm({ \n        name: nombre,\n        address: direccion,\n        phone: telefono,\n        emei: imei,\n        newNit: nit,\n        contact_name: nombre_contacto\n    });\n    \n    const [ formInstitutionPhoneValues, handleInstitutionPhoneInputChange ] = useFormPhone({ \n        mobile: celular ,\n    });\n    \n    const { name, address, phone, emei, newNit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleUpdated = (e) => {\n        e.preventDefault();\n        dispatch( updatedInstitution( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) );\n    }\n\n    useEffect(() => {\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiTrueDisabledButton() )\n            )\n\n        }\n        dispatch( uiFalseDisabledButton() );\n       \n        \n    }, [ address ,phone ,emei ,newNit ,contact_name ,mobile ,name, dispatch ]);\n\n    return (\n        <div className=\"panel-body\">\n            <div className=\"position-center\">\n                <form autoComplete=\"off\" onSubmit={ handleUpdated } >\n                    <div className=\"form-group\">\n                        <label>Nombre</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name\" \n                            placeholder=\"Ingrese nombre\"  \n                            name=\"name\" \n                            value={ name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Dirección</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"address\" \n                            placeholder=\"Ingrese dirección\"  \n                            name=\"address\" \n                            value={ address } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Celular</label>\n                        <PhoneInput\n                            inputExtraProps={{\n                                name: \"444\",\n                                required: true,\n                                autoFocus: true\n                            }}\n                            dropdownClass=\"col-lg-3\"\n                            inputStyle={{ width:\"100%\" }}\n                            placeholder=\"Enter phone number\"\n                            value={ mobile }\n                            onChange={ handleInstitutionPhoneInputChange }\n                            country=\"bo\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Telefono</label>\n                    <InputMask \n                            placeholder=\"Ingrese telefono\"\n                            className=\"form-control\" \n                            mask=\"999-99-999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            name=\"phone\"\n                            id=\"phone\" \n                            value={ phone } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Imei</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"999999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            placeholder=\"Ingrese imei\"  \n                            id=\"emei\" \n                            name=\"emei\" \n                            value={ emei } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nit</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"9999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            id=\"newNit\" \n                            placeholder=\"Ingrese Nit\"  \n                            name=\"newNit\" \n                            value={ newNit } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nombre de Contacto</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"contact_name\" \n                            placeholder=\"Ingrese nombre de contacto\"  \n                            name=\"contact_name\" \n                            value={ contact_name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info\" \n                    disabled={ uiDisabled } \n                    > \n                        <i \n                        className={ uiLoadingSaveButton } \n                        /> Modificar\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormUpdate } from './FormUpdate';\n\nexport const UpdateScreen = () => {\n\n    const { activeInstitution } = useSelector(state => state.institution);\n    const history  = useHistory();\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    MODIFICAR INSTITUCIÓN\n                </header>\n                {\n                    (activeInstitution !== null)\n                    ?\n                        [activeInstitution].map(( e, i ) => (\n                            <FormUpdate key={ i } data={ e }  />\n                        ))\n                    :\n                        history.push('/institution/view')\n                }\n            </section>\n        </div>   \n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { InstitutionScreen } from '../../components/institution/InstitutionScreen';\nimport { RegisterScreen } from '../../components/institution/RegisterScreen';\nimport { UpdateScreen } from '../../components/institution/UpdateScreen';\nimport { Layout } from '../../components/main/Layout';\n\nexport const InstitutionRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route \n                    exact\n                    path=\"/institution\"\n                    component={ RegisterScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/view\"\n                    component={ InstitutionScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/update\"\n                    component={ UpdateScreen }\n                />\n                <Redirect to=\"/institution\" />\n            </Switch>\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterScreen = () => {\n\n    return (\n        <>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={ faThermometerQuarter } />\n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>31</span>\n                             Cantidad de Pruebas simples \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={ faThermometerThreeQuarters } />\n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>60</span>\n                             Cantidad total de pruebas \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={ faThermometerQuarter } />                            \n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>29</span>\n                             Cantidad de Pruebas de formas \n                        </div>\n                    </div>\n                </div>\n            </div>   \n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" > \n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={ faBong } />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <NavLink className=\"btn btn-primary btn-lg btn-block\"\n                        to=\"/test-simple/question\"\n                    >  \n                        Seleccionar\n                    </NavLink>\n\n                    <div className=\"row\" style={{ paddingTop:\"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom:\"10px\" }} >\n                            <NavLink className=\"btn btn-success btn-lg btn-block\" \n                                to=\"/test-simple\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-danger btn-lg btn-block\" \n                                to=\"/test-simple/category\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                    <NavLink className=\"btn btn-info btn-lg btn-block\" \n                        to=\"/test-simple/tsimple\"\n                    >\n                        Prueba Simple\n                    </NavLink>\n                </div>\n\n\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={ faCubes } />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <NavLink className=\"btn btn-success btn-lg btn-block\" \n                        to=\"/test/register/shapes\"\n                    >\n                        Seleccionar\n                    </NavLink>\n                    \n                    <div className=\"row\" style={{ paddingTop:\"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom:\"10px\" }} >\n                            <NavLink className=\"btn btn-warning btn-lg btn-block\" \n                                to=\"/test/register/shapes/screen\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-info btn-lg btn-block\" \n                                to=\"/test-shape\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport const shapeStartLoading = () => {\n    return async ( dispatch ) => { \n       try {\n           \n           const resp = await fetchConToken('test-formas/tformas');\n           const body = await resp.json();\n\n           const { testFormas } =  body;\n\n           dispatch( shapeLoaded( testFormas ) );\n\n       } catch (error) {\n           console.log(error);\n       }\n    }\n}\n\nexport const shapeLoaded = ( shape ) => ({\n    type: types.shapeLoaded,\n    payload: shape \n});","import { keyframes, css } from 'styled-components'\nconst fadeInKeyFrames = keyframes`\n  from{\n    filter:blur(5px);\n    opacity:0;\n  }\n  to{\n    filter:blur(0);\n    opacity:1;\n  }\n`\nexport const fadeIn = ({ time = '1s', type = 'ease' } = {}) =>\n  css`animation:${time} ${fadeInKeyFrames} ${type};`","import styled from 'styled-components';\nimport { fadeIn } from '../../../../styles/animation';\n\nexport const Img = styled.img`\n  ${fadeIn({ time: '2.5s' })}\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`\nexport const ImgDefault = styled.img`\n  box-shadow:0 10px 14px rgba(0,0,0, .2);\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`;\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImage = ( { data, onImageUpdate, onImageRemove } ) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n    \n    return (\n       <>\n            {\n                data.map(( image, index) => (\n                    <div key={ index } className=\"col-sm-4 form-group text-center\"\n                        style={{ justifyContent: 'center' }}\n                        >\n                        <br/>\n                            {\n                                ( image.data_url !== undefined ) \n                                ?\n                                    <Img src={ image['data_url'] } alt=\"images-shapes\"  className=\"img-rounded\" />\n                                :\n                                    <ImgDefault src={ DEFAULT_IMAGE } alt=\"images-shapes\"  className=\"img-rounded\" />\n                            }\n                        <br/>\n                        <div className=\"image-item__btn-wrapper\">\n                            <br/>\n                            <button className=\"btn btn-info\" style={{ marginRight:5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight:5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n\n                ))\n            }\n       </>\n    )\n}\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImageOne = ( { data, onImageUpdate, onImageRemove } ) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n\n    return (\n       <>\n            {\n                data.map(( image, index) => (\n                    <div key={ index } \n                        style={{ justifyContent: 'center', alignItems:'center' }} \n                    >\n                        <br/>\n                        {\n                            ( image.data_url !== '' ) \n                            ?\n                                <Img src={ image['data_url'] } alt=\"images-shapes\"  className=\"img-rounded\" />\n                            :\n                                <ImgDefault src={ DEFAULT_IMAGE } alt=\"images-shapes\"  className=\"img-rounded\" />\n                        }\n                        <br/>\n                        <div className=\"image-item__btn-wrapper\">\n                            <br/>\n                            <button className=\"btn btn-info\" style={{ marginRight:5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight:5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n                ))\n            }\n       </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport { shapeEdit, shapeRegister } from '../../../actions/questionShape';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../../actions/ui';\nimport { useForm } from '../../../hooks/useForm';\nimport { GetImage } from './GetImage';\nimport { GetImageOne } from './GetImageOne';\nimport Swal from 'sweetalert2';\n\nexport const Form = ({ id_pregunta = '', nombre = '', id_test = '', respuesta_correcta = '', questionImage, optionsImage }) => {\n\n    const dispatch = useDispatch();\n\n    const { shape } = useSelector( state => state.shape );\n\n    const [ dataQuestionShape, setDataQuestionShape ] = useState([])\n\n    const { uiLoadingSaveButton, uiDisabled } = useSelector( state => state.ui );\n\n    const [ formShapeInputValues, handleShapeInputValueChange ] = useForm({\n        name: nombre,\n        respCorrect: respuesta_correcta,\n        testShape: id_test\n    });\n    \n    const { name, testShape, respCorrect } = formShapeInputValues;\n\n    const [ imagesQuestion, setImagesQuestion ] = useState([]);\n\n    const maxNumberQuestion = 1;\n    const maxNumber = 6;\n\n    const onChangeQuestion = ( imageList ) => {\n        setImagesQuestion( imageList );\n    };\n\n    const [ images, setImages ] = useState([]);\n\n    const onChange = ( imageList ) => {\n        setImages( imageList );\n    };\n    \n    const handleRegisterTestShape = ( e ) => {\n        e.preventDefault();\n\n        if( respCorrect === '' || testShape === '' ) {\n            Swal.fire(\"Error\", \"Debe de seleccionar una respuesta y una prueba forma\", \"error\");\n        }\n        else if( nombre !== '') {\n          \n            dispatch( shapeEdit(\n                id_pregunta,\n                imagesQuestion[0].data_url,\n                images[0].data_url,\n                images[1].data_url,\n                images[2].data_url,\n                images[3].data_url,\n                images[4].data_url,\n                images[5].data_url,\n                respCorrect,\n                name,\n                testShape )\n            );\n\n        }else{\n\n            dispatch( shapeRegister( \n                imagesQuestion[0].data_url,\n                images[0].data_url,\n                images[1].data_url,\n                images[2].data_url,\n                images[3].data_url,\n                images[4].data_url,\n                images[5].data_url,\n                respCorrect,\n                name,\n                testShape )\n            );\n\n        }\n    }\n\n    useEffect(() => {\n        \n        if ( imagesQuestion.length !== 1 || images.length !== 6 || name === undefined || '' || 0 ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch(uiFalseDisabledButton() );\n        \n    }, [ imagesQuestion, images, name, dispatch ]);\n\n    useEffect(() => {\n\n        if ( nombre !== '' || undefined || null ) {     \n            setImagesQuestion( questionImage );\n            setImages( optionsImage );\n        }\n        \n    }, [ questionImage, optionsImage, nombre ]);\n\n    useEffect(() => {\n        setDataQuestionShape( shape.filter(( e )=>(\n            e.id_test.toString() === testShape.toString()\n        ))); \n    }, [ testShape, shape ]);\n\n    return (\n        <>\n            <div className=\"form-group alert alert-info\" style={{ paddingLeft:\"25%\", paddingRight:\"25%\" }}>\n                <div className=\"col-xs-14 text-center\">\n                    <label>\n                        <h3>Nombre</h3>\n                    </label>\n                    <input \n                        className=\"text-center form-control round-input input-medium default-date-picker\" \n                        placeholder=\"Ingrese Nombre\" \n                        autoComplete=\"off\"\n                        size=\"16\" \n                        type=\"text\" \n                        name=\"name\"\n                        value={ name }\n                        onChange={ handleShapeInputValueChange }\n                    />\n                </div>\n            </div>\n            <div className=\"form-group text-center alert alert-success\">\n                <label >\n                    <h3>Pregunta</h3>\n                </label>\n                <ImageUploading\n                    multiple\n                    value={ imagesQuestion }\n                    onChange={ onChangeQuestion }\n                    maxNumber={ maxNumberQuestion }\n                    dataURLKey=\"data_url\"\n                >\n                    {\n                        ({ onImageUpload, onImageRemoveAll, onImageUpdate, onImageRemove }) => (\n                            <div className=\"upload__image-wrapper\">\n                                <button\n                                    className=\"btn btn-round btn-success\"\n                                    style={{ marginRight:5 }}\n                                    onClick={ onImageUpload }\n                                >\n                                Subir Imagen\n                                </button> \n                                <button \n                                    className=\"btn btn-round btn-warning\" \n                                    style={{ marginRight:5 }} \n                                    onClick={ onImageRemoveAll } \n                                >\n                                    Eliminar Todo\n                                </button>\n                                <div className=\"row\" >\n                                    <GetImageOne \n                                        data={ imagesQuestion } \n                                        onImageUpdate={ onImageUpdate } \n                                        onImageRemove={ onImageRemove } \n                                    />\n                                </div>\n                            </div>\n                        )\n                    }\n                </ImageUploading>\n            </div>\n            <div className=\"form-group text-center alert alert-warning\" >\n                <label>\n                    <h3>Opciones</h3>\n                </label>\n                <ImageUploading\n                    multiple\n                    value={ images }\n                    onChange={ onChange }\n                    maxNumber={ maxNumber }\n                    dataURLKey=\"data_url\"\n                >\n                    {\n                        ({ onImageUpload, onImageRemoveAll, onImageUpdate, onImageRemove }) => (\n                            <div className=\"upload__image-wrapper\">\n                                <button\n                                    className=\"btn btn-round btn-success\"\n                                    style={{ marginRight:5 }}\n                                    onClick={ onImageUpload }\n                                >\n                                Subir Imagen\n                                </button> \n                                <button \n                                    className=\"btn btn-round btn-warning\" \n                                    style={{ marginRight:5 }} \n                                    onClick={ onImageRemoveAll } \n                                >\n                                    Eliminar Todo\n                                </button>\n                                <div className=\"row\" >\n                                    <GetImage data={ images } \n                                        onImageUpdate={ onImageUpdate } \n                                        onImageRemove={ onImageRemove } \n                                    />\n                                </div>\n                            </div>\n                        )\n                    }\n                </ImageUploading>\n            </div>\n            <div className=\"form-group text-center alert\">\n                <label>\n                    <h3>Respuesta Correcta</h3>\n                </label>\n                <div className=\"form-group\">\n                    <label className=\"col-sm-3 control-label\"></label>\n                    <div className=\"col-sm-7\">\n                        <p>Respuesta seleccionada : `{ respCorrect }`</p>\n                        <select \n                            formcontrolname=\"curso\" \n                            name=\"respCorrect\"\n                            onChange={ handleShapeInputValueChange } \n                            className=\"form-control ng-valid ng-dirty ng-touched\"\n                            value={ respCorrect  }\n                            >\n                            {\n                                images.map(( e, i )=>(\n                                    <option \n                                        name=\"respCorrect\"\n                                        key={ i } \n                                        value={ i + 1 } \n                                    > Imagen { i + 1 }</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group text-center alert\">\n                <label>\n                    <h3>Prueba Forma</h3>\n                </label>\n                <div className=\"form-group\">\n                    <label className=\"col-sm-3 control-label\"></label>\n                    <div className=\"col-sm-7\" >\n                        <p>Forma seleccionada : `{  \n                            dataQuestionShape.map(( e )=>(\n                                e.nombre\n                            ))\n                        }`\n                        </p>\n                        <select \n                            formcontrolname=\"curso\" \n                            name=\"testShape\" \n                            onChange={ handleShapeInputValueChange } \n                            className=\"form-control ng-valid ng-dirty ng-touched\"\n                            value={ testShape }\n                            >\n                            {\n                                shape.map(( e, i )=>(\n                                    <option  \n                                        key={ i } \n                                        value={ e.id_test } \n                                    > { e.nombre }</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div className=\"panel-body\">\n                <hr/>\n                <button type=\"submit\"  \n                    onClick={ handleRegisterTestShape } \n                    disabled={ uiDisabled } \n                    className=\"btn btn-primary btn-lg btn-block\" >\n                <i  className={ uiLoadingSaveButton } ></i> \n                        {\n                            ( id_test === '')\n                            ?\n                                \" Registrar\"\n                            :\n                                \" Modificar\"\n                        }\n                </button>\n            </div>\n    </>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shapeStartLoading } from \"../../../actions/shape\";\nimport { useFetchQuestionShapeOne } from \"../../../hooks/QuestionShape/useFetchQuestionShapeOne\";\nimport { useFetchDestructureValue } from \"../../../hooks/QuestionShape/useFetchDestructureValue\";\nimport { useFetchOptionsDestructure } from \"../../../hooks/QuestionShape/useFetchOptionsDestructure\";\nimport { Form } from \"./Form\";\n\nexport const FormQuestionShape = ({ id_pregunta = \"\",nombre = \"\",id_test = \"\", respuesta_correcta = \"\" }) => {\n  \n  const dispatch = useDispatch();\n\n  const { data_questions_shape } = useFetchQuestionShapeOne(id_pregunta);\n\n  const [question, setQuestion] = useState([]);\n\n  const { pregunta, op1, op2, op3, op4, op5, op6 } = question;\n\n  const [questionsImage, setQuestionsImage] = useState([]);\n\n  const [imageOptions, setImageOptions] = useState([]);\n\n  const DestructureValue = (data_questions_shape) => {\n    setQuestion(data_questions_shape);\n  };\n  useEffect(() => {\n    DestructureValue(data_questions_shape);\n  }, [data_questions_shape]);\n\n  const { image } = useFetchDestructureValue(pregunta);\n\n  const {\n    option1,\n    option2,\n    option3,\n    option4,\n    option5,\n    option6,\n  } = useFetchOptionsDestructure(op1, op2, op3, op4, op5, op6);\n\n  useEffect(() => {\n    dispatch(shapeStartLoading());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (\n      image !== \"\" ||\n      option1 !== \"\" ||\n      option2 !== \"\" ||\n      option3 !== \"\" ||\n      option4 !== \"\" ||\n      option5 !== \"\" ||\n      option6 !== \"\"\n    ) {\n      const options = [\n        {\n          data_url: option1,\n        },\n        {\n          data_url: option2,\n        },\n        {\n          data_url: option3,\n        },\n        {\n          data_url: option4,\n        },\n        {\n          data_url: option5,\n        },\n        {\n          data_url: option6,\n        },\n      ];\n      setQuestionsImage([{ data_url: image }]);\n      setImageOptions(options);\n    }\n  }, [image, option1, option2, option3, option4, option5, option6]);\n\n  return (\n    <div className=\"panel-body row align-items-end\">\n      <Form\n        id_pregunta={id_pregunta}\n        questionImage={questionsImage}\n        optionsImage={imageOptions}\n        nombre={nombre}\n        id_test={id_test}\n        respuesta_correcta={respuesta_correcta}\n      />\n    </div>\n  );\n};\n","\nimport { useEffect, useState } from 'react'\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchQuestionShapeOne = ( id_pregunta ) => {\n\n    const [ questionsShape, setQuestionsShape ] = useState({\n        data_questions_shape:[]\n    });\n\n    useEffect(() => {\n        testShapeLoading( id_pregunta );\n\n        return (()=>{\n            setQuestionsShape({ data_questions_shape:[] })\n        })\n\n    }, [ id_pregunta ])\n\n    const testShapeLoading = async ( id_pregunta ) => {\n\n        const resp = await fetchConToken('pregunta-formas/pforma', { id_pregunta },'POST');\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { preguntaFormas } = body;\n                setQuestionsShape({\n                    data_questions_shape:preguntaFormas\n                });\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return questionsShape;\n\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { questionClearShape } from '../../../actions/questionShape';\nimport { FormQuestionShape } from './FormQuestionShape';\n\nexport const Register = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        \n        dispatch( questionClearShape() );\n\n    }, [ dispatch ])\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        REGISTRO DE PRUEBAS FORMAS\n                    </header>\n                    <FormQuestionShape />\n                </section>\n            </div>\n        </div>\n    )\n}\n","import {useEffect, useState, useRef} from 'react'\n\nexport default function useNearScreen ({ distance = '100px', externalRef, once = true } = {}) {\n  const [isNearScreen, setShow] = useState(false);\n  const fromRef = useRef()\n\n  useEffect(() => {\n    let observer\n\n    const element = externalRef ? externalRef.current : fromRef.current\n\n    const onChange = (entries, observer) => {\n      const el = entries[0]\n      if (el.isIntersecting) {\n        setShow(true)\n        once && observer.disconnect()\n      } else {\n        !once && setShow(false)\n      }\n    }\n\n    Promise.resolve(\n      typeof IntersectionObserver !== 'undefined'\n        ? IntersectionObserver\n        : import('intersection-observer')\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance\n      })\n  \n      if (element) observer.observe(element)\n    })\n\n    return () => observer && observer.disconnect()\n  })\n\n  return {isNearScreen, fromRef}\n}","import React, { useEffect, useState } from 'react'\nimport { TestShapeCard } from './TestShapeCard';\n\nexport const TestBodyProfile = ({ options }) => {\n\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        \n        setData( options );\n        \n    }, [ options ]);\n\n    return (\n        <>\n            { \n                ( data !== [] )\n                &&\n                    data.map( ( question, key )=> (\n                        <TestShapeCard \n                            key={ key }\n                            questionData={ question }\n                            option={ data }\n                        />\n                    ))\n            }\n        </>\n    )\n}\n","import React, { useCallback,  useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionShape } from '../../../hooks/QuestionShape/useFetchQuestionShape';\nimport useNearScreen from '../../../hooks/useNeerScreen';\nimport { TestBodyProfile } from './ProfileShape/TestBodyProfile';\nimport './styles.css';\n\nexport const ShapeScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, questionsShape, setSkip } = useFetchQuestionShape();\n\n    const { isNearScreen } = useNearScreen({ \n        externalRef: loading  ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPage = useCallback(debounce(\n        () => setSkip( preveSkip => preveSkip + 1 ), 200\n    ), [ setSkip ]);\n\n    useEffect(() => {\n        if( isNearScreen ) debounceHandleNextPage()\n    },[ isNearScreen, debounceHandleNextPage ])\n\n    return (\n        <>\n            <div className=\"animated fadeIn\">\n               <div className=\"profile-nav alt\">\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            ADMINISTRACION DE PREGUNTAS FORMAS\n                        </header>\n                        {\n                            ( questionsShape !== [] ) &&\n                                <TestBodyProfile options={ questionsShape } />\n                        }\n                    </section>\n                </div>\n            </div>\n            <div id=\"visor\" ref={ externalRef }></div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionShape = () => {\n\n    const [ loading, setLoading ] = useState(false);\n\n    const [ skip, setSkip ] = useState( INITIAL_LIMIT );\n\n    const [ questionsShape, setQuestionsShape ] = useState([]);\n\n    useEffect(() => {\n        \n        if ( skip === INITIAL_LIMIT ) {\n            testShapeLoading( INITIAL_LIMIT )\n        }{\n            testShapeLoading( skip );\n        }\n    }, [ skip ]);\n\n    useEffect(() => {\n        \n        return () => {\n            setQuestionsShape([])\n        }\n    }, []);\n\n    const testShapeLoading = async ( skip ) => {\n        \n        setLoading( true );\n        const resp = await fetchConToken(`pregunta-formas/pformas?limit=1&skip=${ skip }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { preguntaFormas } = body;\n\n                setQuestionsShape( questionsShape.concat( preguntaFormas ) );\n                setLoading( false );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n                setLoading( false );\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n            setLoading( false );\n        }\n    \n    }\n\n    return { loading, questionsShape, setSkip };\n\n\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionShape } from './FormQuestionShape';\n\nexport const UpdatedScreen = () => {\n\n    const { question, nombre, id_test, id_resp } = useSelector( state => state.questionShape.questionActive );\n\n    const history = useHistory();\n\n    const ChangeLocation = ( e ) => {\n        e.preventDefault();\n        history.push('/test/register/shapes/screen');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBAS FORMAS\n                    </header>\n                    {\n                        ( question !== null )\n                        ?\n                            <FormQuestionShape  \n                                id_pregunta = { question }\n                                nombre = { nombre }\n                                id_test = { id_test }\n                                respuesta_correcta = { id_resp }\n\n                            /> \n                        :\n                        <div className=\"panel-body row align-items-end\">\n                            <div className=\"col-sm-12\"> \n                                <div className=\"text-center\">\n                                    <br/>\n                                    <button onClick={ ChangeLocation } className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { RegisterScreen } from '../../components/test/RegisterScreen';\nimport { Register } from '../../components/test/shapes/Register';\nimport { ShapeScreen } from '../../components/test/shapes/ShapeScreen';\nimport { UpdatedScreen } from '../../components/test/shapes/UpdatedScreen';\n\nexport const TestsRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test/register\"\n                    component={ RegisterScreen }\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes\"\n                    component={ Register }\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes/screen\"\n                    component={ ShapeScreen }\n                />\n                <Route\n                    exact\n                    path=\"/test/update/shapes/screen\"\n                    component={ UpdatedScreen }\n                />\n                <Redirect to=\"/test/register\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestShape = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-formas/new',{ \n                nombre:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba forma registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testShapeSetActive = ( testShape, id ) => ({ \n    type:types.testShapeActive,\n    payload: { testShape, id }\n});\n\nexport const updatedTestShape = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-formas/update', { \n                nombre:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba forma actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestShapeSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestShapeSetActiveClear = () => ({\n    type:types.testShapeClear\n});\n\n\nexport const testShapeLoaded = ( testShape ) => ({\n    type: types.testShapeLoaded,\n    payload: testShape \n});\n","import Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { testShapeLoaded, testShapeSetActive } from '../actions/testShape';\nimport { uiModalTrue } from '../actions/ui';\n\n\nexport  const  useFetcheTestShape = () =>{\n\n    const dispatch = useDispatch();\n\n    const [ uiDisabled, setUiDisabled] = useState( false );\n        \n    const history  = useHistory();\n\n    const [ data, setData ] = useState({\n        data_Tformas:[]\n    });\n\n    const handleSwitchChange = useCallback (() => {\n        setUiDisabled( true )\n    },[]);\n\n    useEffect(()=>{\n\n        const fetchTFormas = () =>{\n\n            fetchConToken( 'test-formas/tformas', 'GET' )\n            .then(res => res.json())\n            .then(json => {\n        \n                let rows = [];\n        \n                json.testFormas.forEach( item =>rows.push({\n                    id_test:item.id_test,\n                    nombre: item.nombre,\n                    modified: <button className=\"btn btn-primary\" id = { item.id_test }  onClick = { ( e ) => { \n\n                        // It's a little more understandable\n                        return(\n                            dispatch( testShapeLoaded(  json.testFormas ) ),\n                            dispatch( testShapeSetActive( json.testFormas, e.target.id  ) ),\n                            dispatch(  uiModalTrue() )\n                        )\n                    }}>Modificar</button>,\n                    deleted: <button className=\"btn btn-success\"  disabled={ uiDisabled } id= { item.id_test } \n                        onClick = { ( e ) => {\n                            return (\n                                testShapeDelete( e.target.id )\n                            )\n                        }}\n                    >Eliminar</button>\n                }));\n\n                setData( { data_Tformas:rows });\n            })\n            .catch(err => console.error(err));\n            \n        }\n        const testShapeDelete = ( id_test ) => { \n\n            handleSwitchChange();\n\n            fetchConToken( 'test-formas/delete', { \n                id_test\n            }, 'DELETE')\n            .then(res => {\n                if (res.ok) { \n                    Swal.fire(':)','Prueba forma Eliminada', 'success');\n                    fetchTFormas();\n                }\n            })\n            .catch(err => (\n                console.error(err)),\n            );\n        };\n\n        fetchTFormas();\n        \n        // Clear useEffect\n        return () => {\n            setData({ data_Tformas:[] });\n            setUiDisabled( false );\n        }  \n        \n    },[ history, dispatch, uiDisabled, handleSwitchChange ]);\n\n    return data; \n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestShape, TestShapeSetActiveClear, updatedTestShape } from '../../../actions/testShape';\nimport { uiModalFalse } from '../../../actions/ui';\n\nexport const ModalRegister = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testShapeActive } = useSelector( state => state.tShape );\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector( state => state.ui );\n\n    //TODO README \n    if ( process.env.NODE_ENV !== 'test' ) {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre: ''\n    }\n    const [ formValues, setFormValues ] = useState( initForm );\n\n    const { nombre, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n          ...formValues,\n          [target.name]:target.value\n        });\n    \n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if( testShapeActive ){\n\n            dispatch( updatedTestShape( nombre, id_test ) );\n            history.push('/test-shape');\n      \n        }else{\n            \n            dispatch( startRegisterTestShape( nombre ) );\n            history.push('/test-shape');\n        \n        }\n      \n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch( uiModalFalse() );\n        dispatch( TestShapeSetActiveClear() );\n    }\n\n    useEffect(() => {\n        if ( testShapeActive ) {\n            setFormValues( testShapeActive );\n        }\n        else{\n            setFormValues({ nombre:'' });\n        }\n     \n    }, [ testShapeActive, setFormValues ]);\n\n    return (\n        <Modal\n            isOpen={ uiModal }\n        //   onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            ariaHideApp={ !process.env.NODE_ENV ==='test' }\n        >\n            <h1> { ( testShapeActive )? 'Editar Prueba Forma' : 'Registrar Prueba Forma' } </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={ handleRegister } >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                id=\"nombre\" \n                                placeholder=\"Ingrese nombre\"  \n                                name=\"nombre\" \n                                value={ nombre } \n                                onChange={ handleInputChange }\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\" \n                        disabled={ uiDisabled } \n                        > \n                            <i className={ uiLoadingSaveButton } /> \n                            {\n                                (testShapeActive) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetcheTestShape } from '../../../hooks/useFetchTestShape';\nimport { ModalRegister } from './ModalRegister';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../actions/ui';\n\nexport const TestShapeScreen = () => {\n\n    const { data_Tformas: TestShape } =  useFetcheTestShape();\n    const dispatch = useDispatch();\n\n    const data = {\n        columns: [\n            {\n              label: 'Nombre',\n              field: 'nombre',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Modificar',\n              field: 'modified',\n              sort: 'asc',\n              width: 200\n            },\n            {\n              label: 'Eliminar',\n              field: 'deleted',\n              sort: 'asc',\n              width: 200\n            },\n        ],\n        rows: TestShape\n      };\n    const handleChangeModal = () =>{\n        dispatch( uiModalTrue() );\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Pruebas Formas\n                </header>\n                {\n                    (data.rows !== [])\n                    ?\n                    <div className=\"panel-body\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"text-right\" id=\"nestable_list_menu\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={ handleChangeModal }>Registrar</button>\n                        </div>\n                        <br/>\n                    </div>\n\n                        <MDBDataTable\n                            noRecordsFoundLabel=\"Cargando...\"\n                            scrollX\n                            autoWidth={true}\n                            maxHeight=\"40vh\"\n                            striped\n                            bordered\n                            small\n                            data={ data }\n                        />\n                    </div>\n                    :\n                    <div className=\"panel-body\">\n                        <div>Cargando...</div>\n                    </div>\n                }\n            </section>\n            <ModalRegister />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreenQuestion } from '../../components/answers/shapes/ShapeScreenQuestion';\nimport { Layout } from '../../components/main/Layout';\nimport { TestShapeScreen } from '../../components/test/test-shape/TestShapeScreen';\n\nexport const TestShapeRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-shape\"\n                    component={ TestShapeScreen }\n                /> \n                <Route\n                    exact\n                    path=\"/test-shape/questions\"\n                    component={ ShapeScreenQuestion }\n                />\n                <Redirect to=\"/test-shape\" />\n            </Switch>\n        </Layout>\n    );\n\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterCategory = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'categoria/new',{ \n                nombre_categoria:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Categoria registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleCategoryActive = ( testSimpleCategory, id ) => ({ \n    type:types.testSimpleCategoryActive,\n    payload: { testSimpleCategory, id }\n});\n\nexport const updatedTestSimpleCategory = ( name, id  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'categoria/update', { \n                nombre_categoria: name,\n                id_categoria: id\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Categoria actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleCategorySetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleCategorySetActiveClear = () => ({\n    type:types.testSimpleCategoryClear\n});\n\n\nexport const testSimpleCategoryLoaded = ( testSimpleCategory ) => ({\n    type: types.testSimpleCategoryLoaded,\n    payload: testSimpleCategory \n});\n","import Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleCategoryActive, testSimpleCategoryLoaded } from '../actions/category';\n\n\nexport  const  useFetchCategory = () =>{\n\n    const dispatch = useDispatch();\n\n    const [ uiDisabled, setUiDisabled] = useState( false );\n        \n    const history  = useHistory();\n\n    const [ data, setData ] = useState({\n        data_category:[]\n    });\n\n    const handleSwitchChange = useCallback (() => {\n        setUiDisabled( true )\n    },[]);\n\n    useEffect(()=>{\n\n        const fetchTSimpleCategory = () =>{\n\n            fetchConToken( 'categoria/categorias', 'GET' )\n            .then(res => res.json())\n            .then(json => {\n        \n                let rows = [];\n        \n                json.categorias.forEach( item => rows.push({\n                    id_categoria: item.id_categoria,\n                    nombre_categoria: item.nombre_categoria,\n                    modified: <button className=\"btn btn-primary\" id = { item.id_categoria }  onClick = { ( e ) => { \n                        // It's a little more understandable\n                        return(\n                            dispatch( testSimpleCategoryLoaded( json.categorias ) ),\n                            dispatch( testSimpleCategoryActive( json.categorias, e.target.id  ) ),\n                            dispatch(  uiModalTrue() )\n                        )\n                    }}>Modificar</button>,\n                    deleted: <button className=\"btn btn-success\"  disabled={ uiDisabled } id= { item.id_categoria } \n                        onClick = { ( e ) => {\n                            return (\n                                testSimpleCategoryDelete( e.target.id )\n                            )\n                        }}\n                    >Eliminar</button>\n                }));\n\n                setData( { data_category: rows });\n            })\n            .catch(err => console.error(err));\n            \n        }\n        const testSimpleCategoryDelete = ( id_categoria ) => { \n\n            handleSwitchChange();\n\n            fetchConToken( 'categoria/delete', { \n                id_categoria\n            }, 'DELETE')\n            .then(res => {\n                if (res.ok) { \n                    Swal.fire(':)','Categoria Eliminada', 'success');\n                    fetchTSimpleCategory();\n                }\n            })\n            .catch(err => (\n                console.error(err)),\n            );\n        };\n\n        fetchTSimpleCategory();\n        \n        // Clear useEffect\n        return () => {\n            setData({ data_category:[] });\n            setUiDisabled( false );\n        }  \n        \n    },[ history, dispatch, uiDisabled, handleSwitchChange ]);\n\n    return data; \n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterCategory, testSimpleCategoryActive, updatedTestSimpleCategory } from '../../../../actions/category';\nimport { uiModalFalse } from '../../../../actions/ui';\n\nexport const ModalCategory = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { categoryActive } = useSelector( state => state.category );\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector( state => state.ui );\n\n    //TODO README \n    if ( process.env.NODE_ENV !== 'test' ) {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_categoria: ''\n    }\n    const [ formValues, setFormValues ] = useState( initForm );\n\n    const { nombre_categoria, id_categoria } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n          ...formValues,\n          [target.name]:target.value\n        });\n    \n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if( categoryActive ){\n\n            dispatch( updatedTestSimpleCategory( nombre_categoria, id_categoria ) );\n            history.push('category');\n      \n        }else{\n            \n            dispatch( startRegisterCategory( nombre_categoria ) );\n            history.push('category');\n        \n        }\n      \n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch( uiModalFalse() );\n        dispatch( testSimpleCategoryActive() );\n    }\n\n    useEffect(() => {\n        if ( categoryActive ) {\n            setFormValues( categoryActive );\n        }\n        else{\n            setFormValues({ nombre_categoria:'' });\n        }\n     \n    }, [ categoryActive, setFormValues ]);\n\n    return (\n        <Modal\n            isOpen={ uiModal }\n        //   onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            ariaHideApp={ !process.env.NODE_ENV ==='test' }\n        >\n            <h1> { ( categoryActive )? 'Editar Categoria' : 'Registrar Categoria' } </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={ handleRegister } >\n                        <div className=\"form-group\">\n                            <label>Nombre categoria</label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                id=\"nombre_categoria\" \n                                placeholder=\"Ingrese nombre categoria\"  \n                                name=\"nombre_categoria\" \n                                value={ nombre_categoria } \n                                onChange={ handleInputChange }\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\" \n                        disabled={ uiDisabled } \n                        > \n                            <i className={ uiLoadingSaveButton } /> \n                            {\n                                ( categoryActive ) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { MDBDataTable } from 'mdbreact';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../../actions/ui';\nimport { useFetchCategory } from '../../../../hooks/useFetchCategory';\nimport { ModalCategory } from './ModalCategory';\n\nexport const CategoryScreen = () => {\n\n    const { data_category: category } =  useFetchCategory();\n    \n    const dispatch = useDispatch();\n\n    const data = {\n        columns: [\n            {\n              label: 'Nombre Categoria',\n              field: 'nombre_categoria',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Modificar',\n              field: 'modified',\n              sort: 'asc',\n              width: 200\n            },\n            {\n              label: 'Eliminar',\n              field: 'deleted',\n              sort: 'asc',\n              width: 200\n            },\n        ],\n        rows: category\n      };\n    const handleChangeModal = () =>{\n        dispatch( uiModalTrue() );\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Administración de Categoria\n                </header>\n                {\n                    (data.rows !== [])\n                    ?\n                    <div className=\"panel-body\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"text-right\" id=\"nestable_list_menu\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={ handleChangeModal }>Registrar</button>\n                        </div>\n                        <br/>\n                    </div>\n\n                        <MDBDataTable\n                            noRecordsFoundLabel=\"Cargando...\"\n                            scrollX\n                            autoWidth={true}\n                            maxHeight=\"40vh\"\n                            striped\n                            bordered\n                            small\n                            data={ data }\n                        />\n                    </div>\n                    :\n                    <div className=\"panel-body\">\n                        <div>Cargando...</div>\n                    </div>\n                }\n            </section>\n            <ModalCategory />\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from '../types/types';\n\nexport const simpleRegister = ( pregunta, id_category, id_test ) => {\n\n    return async ( dispatch ) => {\n\n       console.log(pregunta, id_category, id_test)\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n        if ( pregunta === '' || id_test === '' || id_category === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.','error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton () )\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/new', {\n                pregunta: pregunta,\n                id_categoria: id_category,\n                id_test: id_test\n            },'POST');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta registrada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\n\nexport const simpleEdit = ( id_pregunta, pregunta, id_categoria, id_test ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( id_pregunta === '' || pregunta === '' || id_test === '' || id_categoria === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.','error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton () )\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/update', {\n                id_pregunta,\n                pregunta:pregunta,\n                id_test:id_test,\n                id_categoria:id_categoria\n            },'PUT');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Modificada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n        \n\n    }\n}\n\nexport const questionDeleteSimple = ( id_pregunta ) => {\n\n    return async () => {\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/delete', {\n                id_pregunta\n            },'DELETE');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Eliminada', 'success');\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log( error);\n        }\n\n    }\n\n}\n\nexport const questionSetSimple = ( id_pregunta, pregunta, id_categoria, id_test ) => ( questionSimple( { id_pregunta, pregunta, id_categoria, id_test }  ) );\n\nconst questionSimple = ( questionActive ) => ({ \n    type: types.questionSimpleSetActive,\n    payload: questionActive\n});\n\nexport const questionClearSimple = ()  =>({ type: types.questionSimpleClearActive });","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { questionClearSimple, questionDeleteSimple, questionSetSimple } from '../../../../actions/questionSimple';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ setDataQuestion, setFilter = [], id_pregunta = '', id_categoria = '', id_test = '', pregunta = '', updatedAt = '', createdAt = '', categorias = '', test_simples = ''  }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { nombre_categoria } = categorias;\n\n    const { nombre_test } = test_simples;\n\n    const handleActiveQuestionsSimple = ( id_pregunta, pregunta, id_categoria, id_test ) => {\n\n        dispatch( questionClearSimple() );\n        dispatch( questionSetSimple( id_pregunta, pregunta, id_categoria, id_test ));\n        history.push('/test-simple/question/edit');\n    }\n\n    const handleDeleteQuestionSimple = ( id_pregunta ) => {\n        \n        dispatch( questionDeleteSimple( id_pregunta ) );\n        setDataQuestion( \n            setFilter.filter(\n                e =>( e.id_pregunta !== id_pregunta )\n        ));\n    }\n\n    return (\n        <>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Pregunta</h1>\n                    <br />\n                    { pregunta }\n                    <span className=\"text-muted\"></span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : { moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : { moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestionsSimple( id_pregunta, pregunta, id_categoria, id_test ) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp; \n                    <button onClick={() => { handleDeleteQuestionSimple( id_pregunta ) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Categoria</h1>\n                    <p>\n                        { \n                           nombre_categoria\n                        } \n                    </p>\n                    <h1>Prueba Simple</h1>\n                    <p>\n                        { \n                            nombre_test\n                        }\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React,{ useState, useEffect } from 'react'\nimport { PanelBody } from './PanelBody'\n\nexport const QuestionSimpleCard = ( { setDataQuestion, option = [], setFilter = [] } ) => {\n\n    const [state, setState] = useState([]);\n\n    const { id_pregunta, id_categoria, id_test, pregunta, updatedAt, createdAt, categorias, test_simples } = state;\n\n    useEffect(() => {\n        setState( option );\n        return () => {\n            setState([]);\n        }\n    }, [ option ]);\n\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n                <PanelBody\n                    id_pregunta = { id_pregunta }\n                    id_categoria = { id_categoria } \n                    id_test = { id_test }\n                    pregunta={ pregunta }\n                    updatedAt={ updatedAt }\n                    createdAt ={ createdAt }\n                    categorias={ categorias }\n                    test_simples={ test_simples }\n                    setFilter= { setFilter }\n                    setDataQuestion={ setDataQuestion }\n               />\n            </div>\n            <hr/>\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { QuestionSimpleCard } from './QuestionSimpleCard';\n\nexport const QuestionBodyProfile = ({ options }) => {\n\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        \n        setData( options );\n\n        return(()=>{\n            setData([])\n        });\n        \n    }, [ options ]);\n\n    return (\n        <>\n            { \n                ( data !== [] )\n                &&\n                    data.map( ( option , key )=> (\n                        <QuestionSimpleCard \n                            option={ option }\n                            setFilter={ options }\n                            setDataQuestion= { setData } \n                            key={ key } />\n                    ))\n            }\n        </>\n    )\n}\n","import React, { useCallback,  useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionSimple } from '../../../hooks/QuestionSimple/useFetchQuestionSimple';\nimport { QuestionBodyProfile } from './ProfileSimple/QuestionBodyProfile'\nimport useNearScreen from '../../../hooks/useNeerScreen';\n\nexport const SimpleScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, QuestionsSimple, setSkip } = useFetchQuestionSimple();\n\n    const { isNearScreen } = useNearScreen({ \n        externalRef: loading  ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPageSimple = useCallback(\n        debounce(\n            () => setSkip( preveSkip => preveSkip + 5 ), 1000\n        ),[ setSkip ]);\n\n    useEffect(() => {\n        if( isNearScreen ) debounceHandleNextPageSimple();\n    },[ isNearScreen, debounceHandleNextPageSimple ]);\n\n    return (\n        <>\n            <div className=\"animated fadeIn\">\n                <div className=\"profile-nav alt\">\n                        <section className=\"panel\">\n                            <header className=\"panel-heading\">\n                                ADMINISTRACION DE PREGUNTAS SIMPLES\n                            </header>\n                            <div>\n                            {\n                                ( QuestionsSimple !== [] ) &&\n                                    <QuestionBodyProfile options={ QuestionsSimple } />\n                            }\n                            </div>\n                        </section>\n                    </div>\n            </div>\n            <div id=\"visor-simple\" ref={ externalRef }></div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionSimple = () => {\n\n    const [ loading, setLoading ] = useState( false );\n\n    const [ skip, setSkip ] = useState( INITIAL_LIMIT );\n\n    const [ QuestionsSimple, setQuestionsSimple ] = useState([]);\n\n    useEffect(() => {\n        \n        if ( skip === INITIAL_LIMIT) \n            testShapeLoading(INITIAL_LIMIT)\n        else\n        testShapeLoading(skip)\n    }, [ skip ]);\n\n    useEffect(() => {\n        \n        return () => {\n            setQuestionsSimple([])\n        }\n    }, []);\n\n    const testShapeLoading = async ( skip ) => {\n        \n        setLoading( true );\n        const resp = await fetchConToken(`pregunta-simple/psimples?limit=5&skip=${ skip }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { simples_preguntas } = body;\n\n                setQuestionsSimple( QuestionsSimple.concat( simples_preguntas ) );\n                setLoading( false );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n                setLoading( false );\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n            setLoading( false );\n        }\n    \n    }\n\n    return { loading, QuestionsSimple, setSkip };\n\n\n}","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchCategory = () => {\n\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        \n        categoryLoading()\n        \n    }, [])\n\n    const categoryLoading = async () => {\n\n        const resp = await fetchConToken(`categoria/categorias`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { categorias } = body;\n\n                setData( categorias );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return { data };\n\n\n}","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchTestSimple = () => {\n\n    const [ questionsSimple, setQuestionsSimple ] = useState([]);\n\n    useEffect(() => {\n        \n        testSimpleLoading()\n        \n    }, [])\n\n    const testSimpleLoading = async () => {\n\n        const resp = await fetchConToken(`test-simple/testsimples`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { testSimple } = body;\n\n                setQuestionsSimple( testSimple );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return { questionsSimple };\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleRegister } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SimpleScreenRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n    const { data } = useFetchCategory();\n\n    const [ state, setState ] = useState([]);\n    const [ categoryData, setCategoryData ] = useState([]);\n    const [ testName, setTestName ] = useState([]);\n    const [ nameCategory, setNameCategory ] = useState([]);\n\n    const [ formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange ] = useForm({\n        question: '',\n        tSimple: '',\n        category: ''\n    });\n\n    const  { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleRegister = ( e ) =>{\n        e.preventDefault();\n        if ( question !== '' && tSimple !== '' && category !== '' ) {\n            dispatch( simpleRegister( question, tSimple, category ) );\n        }\n        Swal.fire(':(','Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n        \n        setState( questionsSimple );\n        setCategoryData( data );\n        \n    }, [ questionsSimple, data ]);\n\n    \n    useEffect(() => {\n        \n        setNameCategory( data.find( e => e.id_categoria.toString() === category ) );\n        setTestName( questionsSimple.find( e => e.id_test.toString() === tSimple ) );\n\n    }, [ category, tSimple, data, questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        REGISTRO DE PRUEBAS SIMPLES\n                    </header>\n                \n                        <div className=\"panel-body\">\n                            <div className=\"position-center\">\n                                <form onSubmit={ handleRegister }>\n                                <div className=\"form-group\">\n                                    <label>Pregunta</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"InputQuestion\" \n                                        name=\"question\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        value={ question }\n                                        placeholder=\"Ingrese la pregunta\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <p>Prueba seleccionada : `{ ( testName !== undefined || '' ? testName.nombre_test : '') }`</p>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ tSimple  }\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Categoria</label>\n                                    <p>Categoria seleccionada : `{ ( nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '') }`</p>\n                                    <select \n                                        formcontrolname=\"curso\" \n                                        name=\"category\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ category  }\n                                        >\n                                        {\n                                            categoryData.map(( e )=>(\n                                                <option \n                                                    key={ e.id_categoria } \n                                                    value={ e.id_categoria } \n                                                >{ e.nombre_categoria }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                <button type=\"submit\" className=\"btn btn-success\">Registrar</button>\n                            </form>\n                            </div>\n\n                        </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestSimple = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-simple/new',{ \n                nombre_test:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba simple registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleActive = ( testSimple, id ) => ({ \n    type:types.testSimpleActive,\n    payload: { testSimple, id }\n});\n\nexport const updatedTestSimple = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-simple/update', { \n                nombre_test:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba simple actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleSetActiveClear = () => ({\n    type:types.testSimpleClear\n});\n\n\nexport const testSimpleLoaded = ( testSimple ) => ({\n    type: types.testSimpleLoaded,\n    payload: testSimple \n});\n","import Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleActive, testSimpleLoaded } from '../actions/testSimple';\n\n\nexport  const  useFetchTestSimple = () =>{\n\n    const dispatch = useDispatch();\n\n    const [ uiDisabled, setUiDisabled] = useState( false );\n        \n    const history  = useHistory();\n\n    const [ data, setData ] = useState({\n        data_simple:[]\n    });\n\n    const handleSwitchChange = useCallback (() => {\n        setUiDisabled( true )\n    },[]);\n\n    useEffect(()=>{\n\n        const fetchTSimple = () =>{\n\n            fetchConToken( 'test-simple/testsimples', 'GET' )\n            .then(res => res.json())\n            .then(json => {\n        \n                let rows = [];\n        \n                json.testSimple.forEach( item => rows.push({\n                    id_test:item.id_test,\n                    nombre: item.nombre_test,\n                    modified: <button className=\"btn btn-primary\" id = { item.id_test }  onClick = { ( e ) => { \n\n                        // It's a little more understandable\n                        return(\n                            dispatch( testSimpleLoaded( json.testSimple ) ),\n                            dispatch( testSimpleActive( json.testSimple, e.target.id  ) ),\n                            dispatch(  uiModalTrue() )\n                        )\n                    }}>Modificar</button>,\n                    deleted: <button className=\"btn btn-success\"  disabled={ uiDisabled } id= { item.id_test } \n                        onClick = { ( e ) => {\n                            return (\n                                testSimpleDelete( e.target.id )\n                            )\n                        }}\n                    >Eliminar</button>\n                }));\n\n                setData( { data_simple: rows });\n            })\n            .catch(err => console.error(err));\n            \n        }\n        const testSimpleDelete = ( id_test ) => { \n\n            handleSwitchChange();\n\n            fetchConToken( 'test-simple/delete', { \n                id_test\n            }, 'DELETE')\n            .then(res => {\n                if (res.ok) { \n                    Swal.fire(':)','Prueba simple Eliminada', 'success');\n                    fetchTSimple();\n                }\n            })\n            .catch(err => (\n                console.error(err)),\n            );\n        };\n\n        fetchTSimple();\n        \n        // Clear useEffect\n        return () => {\n            setData({ data_simple:[] });\n            setUiDisabled( false );\n        }  \n        \n    },[ history, dispatch, uiDisabled, handleSwitchChange ]);\n\n    return data; \n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestSimple, TestSimpleSetActiveClear, updatedTestSimple } from '../../../../actions/testSimple';\nimport { uiModalFalse } from '../../../../actions/ui';\n\nexport const ModalRegisterSimple = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testActiveSimple } = useSelector( state => state.tSimple );\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector( state => state.ui );\n\n    //TODO README \n    if ( process.env.NODE_ENV !== 'test' ) {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_test_test: ''\n    }\n    const [ formValues, setFormValues ] = useState( initForm );\n\n    const { nombre_test, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n          ...formValues,\n          [target.name]:target.value\n        });\n    \n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if( testActiveSimple ){\n\n            dispatch( updatedTestSimple( nombre_test, id_test ) );\n            history.push('tsimple');\n      \n        }else{\n            \n            dispatch( startRegisterTestSimple( nombre_test ) );\n            history.push('tsimple');\n        \n        }\n      \n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch( uiModalFalse() );\n        dispatch( TestSimpleSetActiveClear() );\n    }\n\n    useEffect(() => {\n        if ( testActiveSimple ) {\n            setFormValues( testActiveSimple );\n        }\n        else{\n            setFormValues({ nombre_test:'' });\n        }\n     \n    }, [ testActiveSimple, setFormValues ]);\n\n    return (\n        <Modal\n            isOpen={ uiModal }\n        //   onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            ariaHideApp={ !process.env.NODE_ENV ==='test' }\n        >\n            <h1> { ( testActiveSimple )? 'Editar Prueba Simple' : 'Registrar Prueba Simple' } </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={ handleRegister } >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                id=\"nombre_test\" \n                                placeholder=\"Ingrese nombre\"  \n                                name=\"nombre_test\" \n                                value={ nombre_test } \n                                onChange={ handleInputChange }\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\" \n                        disabled={ uiDisabled } \n                        > \n                            <i className={ uiLoadingSaveButton } /> \n                            {\n                                (testActiveSimple) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { uiModalTrue } from '../../../../actions/ui';\nimport { useDispatch } from 'react-redux';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetchTestSimple } from '../../../../hooks/useFetchTestSimple';\nimport { ModalRegisterSimple } from './ModalRegisterSimple';\n\n\nexport const TestScreenSimple = () => {\n\n    const { data_simple: TestSimple } =  useFetchTestSimple();\n    \n    const dispatch = useDispatch();\n\n    const data = {\n        columns: [\n            {\n              label: 'Nombre',\n              field: 'nombre',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Modificar',\n              field: 'modified',\n              sort: 'asc',\n              width: 200\n            },\n            {\n              label: 'Eliminar',\n              field: 'deleted',\n              sort: 'asc',\n              width: 200\n            },\n        ],\n        rows: TestSimple\n      };\n    const handleChangeModal = () =>{\n        dispatch( uiModalTrue() );\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Pruebas Simple\n                </header>\n                {\n                    (data.rows !== [])\n                    ?\n                    <div className=\"panel-body\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"text-right\" id=\"nestable_list_menu\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={ handleChangeModal }>Registrar</button>\n                        </div>\n                        <br/>\n                    </div>\n\n                        <MDBDataTable\n                            noRecordsFoundLabel=\"Cargando...\"\n                            scrollX\n                            autoWidth={true}\n                            maxHeight=\"40vh\"\n                            striped\n                            bordered\n                            small\n                            data={ data }\n                        />\n                    </div>\n                    :\n                    <div className=\"panel-body\">\n                        <div>Cargando...</div>\n                    </div>\n                }\n            </section>\n            <ModalRegisterSimple />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleEdit } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const FormUpdatedQuestion = ( { id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  } ) => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n    const { data } = useFetchCategory();\n\n    const [ state, setState ] = useState([]);\n    const [ categoryData, setCategoryData ] = useState([]);\n    const [ testName, setTestName ] = useState([]);\n    const [ nameCategory, setNameCategory ] = useState([]);\n\n    const [ formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange ] = useForm({\n        question: pregunta,\n        tSimple: id_test,\n        category: id_categoria\n    });\n\n    const  { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleModified = ( e ) =>{\n        e.preventDefault();\n        if ( question !== '' && tSimple !== '' && category !== '' && question.trim().length !== 0 ) {\n            dispatch( simpleEdit( id_pregunta, question, category, tSimple ) );\n        }\n        Swal.fire(':(','Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n        \n        setState( questionsSimple );\n        setCategoryData( data );\n        \n        return(()=>{\n            setState([]);\n            setCategoryData([]);    \n        })\n        \n    }, [ questionsSimple, data ]);\n\n    \n    useEffect(() => {\n        \n        setNameCategory( data.find( e => e.id_categoria.toString() === category ) );\n        setTestName( questionsSimple.find( e => e.id_test.toString() === tSimple ) );\n\n        return(()=>{\n            setNameCategory([]);\n            setTestName([]);\n        })\n\n    }, [ category, tSimple, data, questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBA SIMPLE\n                    </header>\n                \n                        <div className=\"panel-body\">\n                            <div className=\"position-center\">\n                                <form onSubmit={ handleModified }>\n                                <div className=\"form-group\">\n                                    <label>Pregunta</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"InputQuestion\" \n                                        name=\"question\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        value={ question }\n                                        placeholder=\"Ingrese la pregunta\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <p>Prueba seleccionada : `{ ( testName !== undefined || '' ? testName.nombre_test : '') }`</p>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ tSimple  }\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Categoria</label>\n                                    <p>Categoria seleccionada : `{ ( nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '') }`</p>\n                                    <select \n                                        formcontrolname=\"curso\" \n                                        name=\"category\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ category  }\n                                        >\n                                        {\n                                            categoryData.map(( e )=>(\n                                                <option \n                                                    key={ e.id_categoria } \n                                                    value={ e.id_categoria } \n                                                >{ e.nombre_categoria }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                <button type=\"submit\" className=\"btn btn-success\">Modificar</button>\n                            </form>\n                            </div>\n\n                        </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { FormUpdatedQuestion } from './FormUpdatedQuestion';\n\n\nexport const FormQuestionSimple = ({ id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  }) => {\n\n    return (\n       <FormUpdatedQuestion\n            id_pregunta={ id_pregunta }\n            pregunta={ pregunta }\n            id_categoria={ id_categoria }\n            id_test={ id_test }\n       />\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionSimple } from './FormQuestionSimple';\n\nexport const UpdatedScreen = () => {\n\n    const { id_pregunta, pregunta, id_categoria, id_test } = useSelector( state => state.qSimple.questionActive );\n\n    const history = useHistory();\n\n    const ChangeLocation = ( e ) => {\n        e.preventDefault();\n        history.push('/test-simple');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                        {\n                            ( id_pregunta === undefined ) &&\n                            <header className=\"panel-heading\">\n                                MODIFICAR PRUEBA SIMPLE\n                            </header>\n                        }\n                        {\n                        ( id_pregunta !== undefined )\n                        ?\n                            <FormQuestionSimple\n                                id_pregunta={ id_pregunta }\n                                pregunta={ pregunta }\n                                id_categoria={ id_categoria }\n                                id_test={ id_test }\n\n                            /> \n                        :\n                        <div className=\"panel-body row align-items-end\">\n                            <div className=\"col-sm-12\"> \n                                <div className=\"text-center\">\n                                    <br/>\n                                    <button onClick={ ChangeLocation } className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { CategoryScreen } from '../../components/test/simple/category/CategoryScreen';\nimport { SimpleScreen } from '../../components/test/simple/SimpleScreen';\nimport { SimpleScreenRegister } from '../../components/test/simple/SimpleScreenRegister';\nimport { TestScreenSimple } from '../../components/test/simple/test/TestScreenSimple';\nimport { UpdatedScreen } from '../../components/test/simple/UpdatedScreen';\n\nexport const TestSimpleRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-simple\"\n                    component={ SimpleScreen }\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/question\"\n                    component={ SimpleScreenRegister }\n                />\n                 <Route\n                    exact\n                    path=\"/test-simple/question/edit\"\n                    component={ UpdatedScreen }\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/category\"\n                    component={ CategoryScreen }\n                />\n                 <Route\n                    exact\n                    path=\"/test-simple/tsimple\"\n                    component={ TestScreenSimple }\n                />\n            </Switch>\n        </Layout>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersShapeActive } from '../../../actions/answersShape';\nimport { useFetchTestShape } from '../../../hooks/Answers/Shape/useFetchTestShape';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const ShapeScreeAnswers = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [ state, setState ] = useState([]);\n\n\n    const { dataShape } = useFetchTestShape();\n\n    const [ selectionDefault, setSelectionDefault ] = useState('');\n\n    const [ formSelectionInputValues, handleSelectionInputValueChange ] = useForm({\n        tShape: selectionDefault\n    });\n\n    const { tShape } = formSelectionInputValues;\n\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        if ( tShape === '' ) {\n            return (\n                dispatch( answersShapeActive( selectionDefault.toString() ) ),\n                history.push('/test-shape/questions')\n            )\n        }\n        return (\n            dispatch( answersShapeActive( tShape ) ),\n            history.push('/test-shape/questions')\n        )\n\n    }\n\n   useEffect(() => {\n    \n        if ( dataShape !== [] ) {\n            if ( dataShape[0] !== undefined ) {   \n                \n                const DEFAULTVALUE = dataShape[0].id_test;\n                setSelectionDefault( DEFAULTVALUE );\n\n            }\n        }\n        setState( dataShape );\n\n   }, [ dataShape ]);\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA DE FORMA\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form \n                                onSubmit={ handleSubmitForm } \n                            >\n                                <div className=\"form-group\">\n                                    <label>Prueba forma</label>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tShape\"\n                                        value={ tShape }\n                                        onChange={ handleSelectionInputValueChange }   \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchTestShape = () => {\n    \n    const [ data, setData ] = useState({\n        dataShape:[]\n    });\n    \n    useEffect(() => {\n        \n        shapeLoading();\n\n    }, []);\n\n    const shapeLoading = async () => {\n\n        const resp = await fetchConToken(`test-formas/tformas`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { testFormas } = body;\n\n                const dataMap = testFormas;    \n\n                setData({\n                    dataShape: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport * as moment from 'moment';\nimport Swal from \"sweetalert2\";\n\n\nexport const answersSimpleActive = ( answerSimple ) => ({ \n    type:types.answersSimpleActive,\n    payload: answerSimple\n});\n\nexport const answersSimpleClear = () => ({ \n    type:types.answersSimpleClear\n});\n\nexport const answersfilter = ( answer ) =>({\n    type:types.answersfilter,\n    payload: answer\n});\nexport const answersfilterActive = ( answersActive, position ) =>({\n    type:types.answersfilterActive,\n    payload: { answersActive, position }\n});\n\nexport const answersRegister = ( uid, answers ) => {\n    \n    return async () => {\n        \n        const now = moment().format();\n\n        try {\n\n            answers.map( async ( e ) => {\n\n                if ( e.answers.toString() === 'yes' ) {\n\n                        const resp = await fetchConToken( 'respuesta-simple/new',{ \n                            id_pregunta:e.id, \n                            persona_id: uid,  \n                            fecha_hora: now,\n                            si:1,\n                            nose:0,\n                            no:0\n                        }, 'POST');    \n                        \n                        const body = await resp.json();\n        \n                        if ( body.ok ) {\n                            \n                            return Swal.fire(':)','Respuestas Registradas', 'success');            \n                        }{\n                            \n                            return Swal.fire(':(','Las respuestas ya fueron registradas', 'error');            \n                        }\n                    \n                }\n                if ( e.answers.toString() === 'no-know' ) {\n\n                        const resp = await fetchConToken( 'respuesta-simple/new',{ \n                            id_pregunta:e.id, \n                            persona_id: uid,  \n                            fecha_hora: now,\n                            si:0,\n                            nose:1,\n                            no:0\n                        }, 'POST');    \n                        \n                        const body = await resp.json();\n        \n                        if ( body.ok ) {\n                            \n                            return Swal.fire(':)','Respuestas Registradas', 'success');            \n                        }{\n                            \n                            return Swal.fire(':(','Las respuestas ya fueron registradas', 'error');            \n                        }\n                    \n                    \n                }\n                if ( e.answers.toString() === 'no' ) {\n                    \n\n                        const resp = await fetchConToken( 'respuesta-simple/new',{ \n                            id_pregunta:e.id, \n                            persona_id: uid,  \n                            fecha_hora: now,\n                            si:0,\n                            nose:0,\n                            no:1\n                        }, 'POST');    \n                        \n                        const body = await resp.json();\n        \n                        if ( body.ok ) {\n                            \n                            return Swal.fire(':)','Respuestas Registradas', 'success');            \n                        }{\n                            \n                            return Swal.fire(':(','Las respuestas ya fueron registradas', 'error');            \n                        }\n                    \n                }\n    \n               \n            });\n\n        } catch (err) {\n          return Swal.fire('Error', \"Hable con el administrador\", 'error')           \n        }\n    }\n\n};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answersfilter, answersfilterActive, answersRegister } from '../../../actions/answersSimple';\nimport '../styles/simples/FormWinzard.css'\n\nexport const FormWinzard = ( props ) => {  \n\n    const dispatch = useDispatch();\n    const { answers } = useSelector( state => state.answerSimple );\n    const { uid } = useSelector(state => state.auth);\n\n    const array = new Array( props.length );\n\n    const arrayLength = () => {\n        \n        let elements = [ props.current ];\n\n        for ( let index = 0; index < array.length; index++ ) {\n            \n            elements[ index ] = { id: null, answers: '' };\n        }\n\n        return elements\n    \n    }\n\n    const handleClick = ( e ) => {\n        \n        if ( answers === null ) {\n\n            return (\n                dispatch(  answersfilter( arrayLength() ) ),\n                dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n            )\n        }\n\n        return (\n            dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n        )\n\n    }\n\n    const handleSendAnswers = () => {\n        \n        dispatch( answersRegister( uid, answers ) );\n    }\n\n    return (\n         <div className=\"panel-body\">\n            <div className=\"position-center\" style={{ textAlign:\"center\" }}>\n                <h3>Pregunta</h3>\n                {\n                    props.data\n                }\n                <br/>\n                <br/>\n           \n                <div className=\"row\" style={{ paddingTop:\"10px\" }} >\n                    <div className=\"switch-toggle switch-3 switch-candy\">\n                        <input id=\"yes\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick }\n                            />\n                            <label htmlFor=\"yes\" >Si</label>\n                        \n                        <input id=\"no-know\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            defaultChecked/>\n                            <label htmlFor=\"no-know\" >No se</label>\n\n                        <input id=\"no\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            />\n                            <label htmlFor=\"no\" >No</label>\n                        <a href=\"/\"> </a> \n                    </div>\n                    <br/>\n                    <br/>\n                    <div className=\"col-sm-6\" style={{ paddingBottom:\"10px\", textAlign:\"center\" }} >\n                        <button className=\"btn btn-primary\" disabled={props.isFirst()} onClick={props.prev}>\n                            Anterior\n                        </button> \n                    </div>\n                    <div className=\"col-sm-6\" style={{ textAlign:\"center\" }} >\n                        <button className=\"btn btn-success\" disabled={props.isLast()} onClick={props.next}>\n                            Siguiente\n                        </button>\n                    </div>\n                    <br/>\n                    {\n                        ( props.length === ( props.current ) )\n                        &&\n                        <button className=\"btn btn-info btn-lg btn-block\" onClick={ handleSendAnswers }>\n                            Enviar\n                        </button> \n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Steps, Step } from \"react-step-builder\"\nimport { FormWinzard } from './FormWinzard';\n\n\nexport const MapOfFormWinzard = ({ dataAnswers = []}) => {\n\n    const config = {\n        navigation: {\n          location: \"before\",\n        }\n    };\n    \n    return (\n        <div>\n            <Steps config={ config } >\n                {\n                     dataAnswers.map( ( e, key ) =>{\n                         return (\n                             <Step \n                                length={ dataAnswers.length }\n                                key={ key }\n                                component={ FormWinzard }\n                                data={ e.pregunta } \n                                id={ e.id_pregunta } \n                             />\n                         )\n                     })\n                }\n            </Steps>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useFetchAnswerSimple } from '../../../hooks/Answers/Simple/useFetchAnswerSimple';\nimport { MapOfFormWinzard } from './MapOfFormWinzard';\n\nexport const SimpleScreenAnswers = () => {\n \n    const history = useHistory();\n\n    const { answersSimpleActive } = useSelector( state => state.answerSimple );\n\n    const { data_answer } = useFetchAnswerSimple( answersSimpleActive );\n\n    useEffect( () =>{\n\n        if ( answersSimpleActive === null ) {\n            history.push('/answers/selection');\n        }\n\n    },[ answersSimpleActive, history ]);\n\n    return (\n        <>\n            {\n                ( data_answer !== [])\n                &&\n                ( \n                    <div className=\"col-lg-12 animated fadeIn\">\n                        <section className=\"panel\">\n                            <header className=\"panel-heading\">\n                              PRUEBAS\n                            </header>\n                             <MapOfFormWinzard dataAnswers={ data_answer } />\n                        </section>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchAnswerSimple = ( id_test ) => {\n    \n    const [ data, setData ] = useState({\n        data_answer:[]\n    });\n\n    useEffect(() => {\n        \n        answersSimpleLoading( id_test );\n\n    }, [ id_test ]);\n\n    const answersSimpleLoading = async ( id_test = '') => {\n\n        const resp = await fetchConToken(`pregunta-simple/psimples-test?id_test=${ id_test }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { simples_preguntas } = body;\n\n                const dataMap = simples_preguntas;    \n\n                setData({\n                    data_answer: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\nexport const AnswersScreen = () => {\n    return (\n        <>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={ faThermometerQuarter } />\n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>31</span>\n                                Cantidad de Pruebas simples \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={ faThermometerThreeQuarters } />\n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>60</span>\n                                Cantidad total de pruebas \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={ faThermometerQuarter } />                            \n                        </span>\n                        <div  className=\"mini-stat-info\">\n                            <span>29</span>\n                                Cantidad de Pruebas de formas \n                        </div>\n                    </div>\n                </div>\n            </div>   \n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" > \n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={ faBong } />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <Link to=\"/answers/selection\" className=\"btn btn-primary btn-lg btn-block\" >Elegir</Link>\n                </div>\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={ faCubes } />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <Link to=\"/answers/shape\" className=\"btn btn-info btn-lg btn-block\" >Elegir</Link>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersSimpleActive } from '../../../actions/answersSimple';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SelectionTestScreen = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [ state, setState ] = useState([]);\n\n    const { questionsSimple } = useFetchTestSimple();\n\n    const [ selectionDefault, setSelectionDefault ] = useState('');\n\n    const [ formSelectionInputValues, handleSelectionInputValueChange ] = useForm({\n        tSimple: selectionDefault\n    });\n\n    const  { tSimple } = formSelectionInputValues;\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        if ( tSimple === '' ) {\n            return (\n                dispatch( answersSimpleActive( selectionDefault.toString() ) ),\n                history.push('/answers/simple')\n            )\n        }\n        return (\n            dispatch( answersSimpleActive( tSimple ) ),\n            history.push('/answers/simple')\n        )\n    }\n\n    useEffect(() => {\n        \n        if ( questionsSimple !== [] ) {\n            if ( questionsSimple[0] !== undefined ) {   \n                \n                const DEFAULTVALUE = questionsSimple[0].id_test;\n                setSelectionDefault( DEFAULTVALUE );\n\n            }\n        }\n        \n        setState( questionsSimple );\n        \n    }, [ questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA SIMPLE\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form onSubmit={ handleSubmitForm } >\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        value={ tSimple }\n                                        onChange={ handleSelectionInputValueChange }   \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreeAnswers } from '../../components/answers/shapes/ShapeScreeAnswers';\nimport { SimpleScreenAnswers } from '../../components/answers/simples/SimpleScreenAnswers';\nimport { AnswersScreen } from '../../components/answers/AnswersScreen';\nimport { Layout } from '../../components/main/Layout';\nimport { SelectionTestScreen } from '../../components/answers/simples/SelectionTestScreen';\n\nexport const AnswersRouter = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/answers\"\n                    component={ AnswersScreen }\n                />\n                <Route\n                    exact\n                    path=\"/answers/shape\"\n                    component={ ShapeScreeAnswers }\n                />\n                <Route\n                    exact\n                    path=\"/answers/simple\"\n                    component={ SimpleScreenAnswers }\n                />\n                <Route \n                    exact\n                    path=\"/answers/selection\"\n                    component={ SelectionTestScreen }\n                />\n                <Redirect to=\"/answers\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { AccountRouter } from './private/AccountRouter';\nimport { AuthRouter } from './public/AuthRouter';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRouter';\nimport { InstitutionRouter } from './private/InstitutionRouter';\nimport { TestsRouter } from './private/TestsRouter';\nimport { TestShapeRouter } from './private/TestShapeRouter';\nimport { TestSimpleRouter } from './private/TestSimpleRouter';\nimport { AnswersRouter } from './private/AnswersRouter';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n       \n        dispatch( startChecking() );\n       \n    }, [dispatch]);\n\n    if ( checking ) {\n        return ( \n            <div className=\"loader-wrapper\" style={{ display:\"block\" }} >\n                <div  className=\"loader\"/>\n            </div>\n        );\n    }\n    \n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute  \n                        path=\"/auth\" \n                        component={ AuthRouter } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    {/* \n                        Rutas privadas \n                    */}\n                    \n                    <PrivateRoute \n                        path=\"/user\"      \n                        component={ AccountRouter }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute \n                        path=\"/institution\"      \n                        component={ InstitutionRouter }\n                        isAuthenticated={ !!uid }\n                    />\n                     <PrivateRoute \n                        path=\"/test/register\"      \n                        component={ TestsRouter }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute \n                        path=\"/test-shape\"      \n                        component={ TestShapeRouter }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute\n                        path=\"/test-simple\"\n                        component={ TestSimpleRouter }\n                        isAuthenticated= { !!uid }\n                    />\n                    <PrivateRoute\n                        path=\"/answers\"\n                        component={ AnswersRouter }\n                        isAuthenticated={ !!uid  }\n                    />\n                    <Redirect to=\"/auth/login\" /> \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const PsicologiaApp = () => {\n  return (\n    <Provider store={ store }> \n      <AppRouter  />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PsicologiaApp  } from './PsicologiaApp'; \n\nReactDOM.render(\n    <PsicologiaApp />,\n  document.getElementById('root')\n);\n\n","import { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\n\nexport const shapeRegister = ( pregunta, op1, op2, op3, op4, op5, op6, respuesta_correcta, name, testShape ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/new', {\n                nombre:name,\n                pregunta:pregunta,\n                op1:op1,\n                op2:op2,\n                op3:op3,\n                op4:op4,\n                op5:op5,\n                op6:op6,\n                respuesta_correcta:respuesta_correcta,\n                id_test:testShape\n            },'POST');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta registrada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\n\nexport const shapeEdit = ( id_pregunta, pregunta, op1, op2, op3, op4, op5, op6, respuesta_correcta, name, testShape ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/update', {\n                id_pregunta,\n                nombre:name,\n                pregunta:pregunta,\n                op1:op1,\n                op2:op2,\n                op3:op3,\n                op4:op4,\n                op5:op5,\n                op6:op6,\n                respuesta_correcta:respuesta_correcta,\n                id_test:testShape\n            },'PUT');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Modificada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\nexport const questionDeleteShape = ( id_pregunta ) => {\n\n    return async () => {\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/delete', {\n                id_pregunta\n            },'DELETE');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Eliminada', 'success');\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log( error);\n        }\n\n    }\n\n}\n\nexport const questionSetShape = ( question, nombre, id_test, id_resp ) => ( questionShape( { question, nombre, id_test, id_resp }  ) )\n\nconst questionShape = ( questionActive ) => ({ \n    type: types.questionSetActive,\n    payload: questionActive\n});\n\nexport const questionClearShape = ()  =>({ type: types.questionClearActive });","export const types = {\n\n    uiOpenSidebar:'[ui] Open Sidebar',\n    uiCloseSidebar:'[ui] Close Sidebar',\n\n    \n\n    uiTrueDisabledButton:'[ui] Disabled true',\n    uiFalseDisabledButton:'[ui] Disabled false',\n    \n    uiOpenSection:'[ui] Open Section',\n    uiCloseSection:'[ui] Close Section',\n\n    uiOpenLoadingButton:'[ui] Open Loading Button',\n    uiCloseLoadingButton:'[ui] CloseLoading Button',\n\n    uiOpenLoadingSaveButton:'[ui] Open Loading Save Button',\n    uiCloseLoadingSaveButton:'[ui] CloseLoading Save Button',\n    uiModalTrue:'[ui] Modal true',\n    uiModalFalse:'[ui] Modal false',\n\n\n    uiOpenDrowp:'[ui] Open drowp',\n    uiCloseDrowp:'[ui] Close drowp',\n    uieventLogout:'[ui] Logout',\n\n    accountUpdate:'[ui] Account update',\n\n    institutionSetActive:'[institution] Institution active',\n    institutionSetActiveClear:'[institution] Institution clear',\n    \n    institutionAcordionSelect:'[institution] Institution acordion select',\n    institutionAcordionDeselect:'[institution] Institution acordion deselect',\n\n    institutionLoaded:'[institution] Loaded institution',\n    institutionSelectRegister:'[institution] Select register institution',\n    institutionDeselectRegister:'[institution] Deselect register institution',\n\n    institutionSelectShow:'[institution] Select show institution',\n    institutionDeselectShow:'[institution] Deselect show institution',\n\n    institutionIconClose:'[institution] Close icon institution',\n    institutionOpenAcordion:'[institution] Open acordion institution',\n    institutionCloseAcordion:'[institution] Cloase acordion instituion',\n\n    testShapeActive:'[tShape] Active test shape',\n    testShapeClear:'[tShape] Clear test shape',\n    testShapeLoaded:'[tShape] Loaded test Shape',\n\n    testSimpleActive:'[tSimpleActive] Active test simple',\n    testSimpleClear:'[tSimpleClear] Clear test simple',\n    testSimpleLoaded:'[tSimpleLoaded] Loaded test simple',\n\n    testSimpleCategoryActive:'[tSimpleCategoryActive] Active category test simple ',\n    testSimpleCategoryClear:'[tSimpleCategoryClear] Clear category test simple ',\n    testSimpleCategoryLoaded:'[tSimpleCategoryLoaded] Loaded category test simple ',\n\n    //Question Shape\n    shapeLoaded:'[Shape] Loaded Shape',\n    questionSetActive:'[QuestionS] Question shape active',\n    questionClearActive:'[QuestionS] Question shape clear', \n\n    //Question Simple\n    questionSimpleSetActive:'[QSimple] Question simple active',\n    questionSimpleClearActive:'[QSimple] Quesiton simple clear',\n\n    answersSimpleActive:'[Answers] Answer simple active',\n    answersSimpleClear:'[Answers] Answer simple clear',\n    answersfilter:'[Answers] Answer simple filter',\n    answersfilterActive:'[Answers] Answer simple filter active',\n\n    answersShapeActive :'[Answers Shape] Answer shape active',\n    answersSimpleClear :'[Answers Shape] Answer shape clear',\n\n\n    \n    authUserUpdate:'[auth] User update',\n    authUserUpdatePassword:\"[auth] User update password\",\n    authChecking:'[auth] Checking login state ',\n    authCheckingFinish:'[auth] Finish cheking login state ',\n    authStartLogin:'[auth] Start Login',\n    authLogin:'[auth] Login',\n    authStartRegister:'[auth] Login Register',\n    authStartStartTokenRenew:'[auth] start token renew',\n\n    shapeAnswersActive:'[shapeAnswersActive] Loaded shape answers',\n\n    authLogout:'[auth] Logout',\n\n}","import moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const answersShapeActive = ( answerShape ) => ({ \n    type:types.shapeAnswersActive,\n    payload: answerShape\n});\n\n// AnwersShape Response\n\n\nexport const answersShapeFindAll = ( answerShape ) => ({ \n    type:types.answersShapeActive,\n    payload: answerShape\n});\n\nexport const answersShapeRegister = ( uid, answers ) => {\n    \n    return async () => {\n\n        const now = moment().format();\n        \n        try {\n            answers.map( async ( e ) => {\n\n                const resp = await fetchConToken( 'respuesta-formas/new',{ \n                    id_pregunta:e.id, \n                    persona_id: uid,  \n                    fecha_hora: now,\n                    bien_mal: e.bien_mal\n                }, 'POST');    \n                \n                const body = await resp.json();\n\n                if ( body.ok ) {\n                    \n                    return Swal.fire(':)','Respuestas Registradas', 'success');            \n                }{\n                    \n                    return Swal.fire(':(','Las respuestas ya fueron registradas', 'error');            \n                }\n\n            });\n\n        } catch (err) {\n\n          return Swal.fire('Error', \"Hable con el administrador\", 'error');\n\n        }\n    }\n\n};"],"sourceRoot":""}