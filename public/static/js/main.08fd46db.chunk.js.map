{"version":3,"sources":["helpers/fetch.js","hooks/QuestionShape/useFetchDestructureValue.js","hooks/QuestionShape/useFetchOptionsDestructure.js","components/test/shapes/ProfileShape/TestShapeCard.js","components/test/shapes/ProfileShape/PanelBody.js","hooks/QuestionShape/useConvertImage.js","reducers/authReducer.js","reducers/institutionReducer.js","reducers/questionShape.js","reducers/shapeReducer.js","reducers/testShapeReducer.js","reducers/uiReducer.js","reducers/testSimpleReducer.js","reducers/testSimpleCategoryReducer.js","reducers/questionSimpleReducer.js","reducers/answersSimpleReducer.js","reducers/shapeAnswersReducer.js","reducers/answersShapeReducer.js","reducers/rootReducer.js","store/store.js","actions/auth.js","hooks/useForm.js","components/Accounts/AccountScreen.js","components/Accounts/ChangePasswordScreen.js","components/Accounts/UserScreen.js","actions/answersShape.js","components/main/Aside.js","utils/Image.js","components/main/Header.js","components/main/Layout.js","router/private/AccountRouter.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/public/AuthRouter.js","router/PrivateRoute.js","router/PublicRouter.js","actions/institution.js","hooks/useFetchInstitutions.js","components/institution/InstitutionScreen.js","hooks/useFormPhone.js","components/institution/RegisterScreen.js","components/institution/FormUpdate.js","components/institution/UpdateScreen.js","router/private/InstitutionRouter.js","components/test/RegisterScreen.js","actions/shape.js","styles/animation.js","components/test/shapes/styles/style.js","components/test/shapes/GetImage.js","components/test/shapes/GetImageOne.js","components/test/shapes/Form.js","components/test/shapes/FormQuestionShape.js","hooks/QuestionShape/useFetchQuestionShapeOne.js","components/test/shapes/Register.js","hooks/useNeerScreen.js","components/test/shapes/ProfileShape/TestBodyProfile.js","components/test/shapes/ShapeScreen.js","hooks/QuestionShape/useFetchQuestionShape.js","components/test/shapes/UpdatedScreen.js","router/private/TestsRouter.js","hooks/QuestionShape/useFetchQuestionShapeFindAll.js","components/answers/shapes/ShapeScreenQuestion.js","hooks/QuestionShape/useFetchImage.js","actions/testShape.js","hooks/useFetchTestShape.js","components/test/test-shape/ModalRegister.js","components/test/test-shape/TestShapeScreen.js","router/private/TestShapeRouter.js","actions/category.js","hooks/useFetchCategory.js","components/test/simple/category/ModalCategory.js","components/test/simple/category/CategoryScreen.js","actions/questionSimple.js","components/test/simple/ProfileSimple/PanelBody.js","components/test/simple/ProfileSimple/QuestionSimpleCard.js","components/test/simple/ProfileSimple/QuestionBodyProfile.js","components/test/simple/SimpleScreen.js","hooks/QuestionSimple/useFetchQuestionSimple.js","hooks/QuestionSimple/useFetchCategory.js","hooks/QuestionSimple/useFetchTestSimple.js","components/test/simple/SimpleScreenRegister.js","actions/testSimple.js","components/test/simple/test/ModalRegisterSimple.js","hooks/useFetchTestSimple.js","components/test/simple/test/TestScreenSimple.js","components/test/simple/FormUpdatedQuestion.js","components/test/simple/FormQuestionSimple.js","components/test/simple/UpdatedScreen.js","router/private/TestSimpleRouter.js","components/answers/shapes/ShapeScreeAnswers.js","hooks/Answers/Shape/useFetchTestShape.js","actions/answersSimple.js","components/answers/simples/FormWinzard.js","components/answers/simples/MapOfFormWinzard.js","components/answers/simples/SimpleScreenAnswers.js","hooks/Answers/Simple/useFetchAnswerSimple.js","components/answers/AnswersScreen.js","components/answers/simples/SelectionTestScreen.js","router/private/AnswersRouter.js","router/AppRouter.js","PsicologiaApp.js","index.js","actions/questionShape.js","actions/ui.js","types/types.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","tokenStart","token","localStorage","getItem","useFetchDestructureValue","pregunta","useState","image","setData","question","Buffer","from","toString","useEffect","useFetchOptionsDestructure","op1","op2","op3","op4","op5","op6","optionOne","optionTwo","optionThree","optionFour","optionFive","optionSix","option1","option2","option3","option4","option5","option6","TestShapeCard","questionData","option","dataOption","setDataOption","id_pregunta","nombre","id_test","respuesta_correcta","createdAt","updatedAt","nombreTest","test_formas","questions","Options","className","filterData","setFilterData","id","map","e","src","alt","moment","locale","PanelBody","dispatch","useDispatch","history","useHistory","Fragment","format","onClick","id_resp","questionClearShape","questionSetShape","push","handleActiveQuestions","questionDeleteShape","filter","handleDeleteQuestion","useConvertImage","state","images","useMemo","convertImage","convertToBase64","options","blob","undefined","initialState","checking","institutions","activeInstitution","questionActive","name","shape","testShape","testShapeActive","uiDrowp","uiSidebar","uiSection","uiLoadingButton","uiLoadingSaveButton","uiDisabled","uiSelection","uiRegisterSelectAcordion","uiShowSelectInstitution","uiIconClose","uiModal","initState","testSimple","testActiveSimple","category","categoryActive","answersSimpleActive","answers","answersShape","rootReducer","combineReducers","ui","action","type","types","uiOpenSidebar","uiCloseSidebar","uiTrueDisabledButton","uiFalseDisabledButton","uiOpenSection","uiCloseSection","uiOpenDrowp","uiCloseDrowp","uiOpenLoadingButton","uiCloseLoadingButton","uiOpenLoadingSaveButton","uiCloseLoadingSaveButton","uieventLogout","institutionAcordionSelect","payload","institutionAcordionDeselect","institutionSelectRegister","institutionDeselectRegister","institutionSelectShow","institutionDeselectShow","institutionOpenAcordion","institutionCloseAcordion","institutionIconClose","cheking","uiModalTrue","uiModalFalse","auth","authLogin","authUserUpdate","authUserUpdatePassword","persona","authCheckingFinish","accountUpdate","authLogout","institution","institutionSetActive","find","id_institucion","institutionLoaded","institutionSetActiveClear","shapeLoaded","questionShape","questionSetActive","questionClearActive","tShape","testShapeClear","testShapeLoaded","tSimple","testSimpleActive","testSimpleClear","testSimpleLoaded","testSimpleCategoryActive","id_categoria","testSimpleCategoryClear","testSimpleCategoryLoaded","qSimple","questionSimpleSetActive","questionSimpleClearActive","answerSimple","answersSimpleClear","answersfilter","answersfilterActive","array","position","answersActive","answerShape","shapeAnswersActive","shapeAnswersClear","shapeAnswer","answersShapeActive","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","startLoginAddAccount","username","password","a","resp","json","persona_id","uid","respPersona","ok","setItem","Date","getTime","login","Swal","fire","msg","accountUpdated","checkingFinish","user","startLogout","clear","logout","useForm","values","setValues","reset","handleInputChange","target","value","AccountScreen","useSelector","formAccountValues","handleAccountInputChange","primer_apellido","segundo_apellido","celular","imei","edad","dni","direccion","email","onSubmit","preventDefault","console","log","startUpdateAccount","placeholder","onChange","disabled","ChangePasswordScreen","passwordCurrent","passwordNew","passwordAgain","formPasswordValues","handlePasswordInputChange","inputStylePassword","color","trim","length","startUpdateUserPassword","style","marginRight","to","UserScreen","usuarios","formUserValues","handleUserInputChange","startUpdateUser","answerShapeClear","Aside","activeClassName","cursor","icon","faUniversity","display","faVial","exact","faVials","Image","Header","width","height","Layout","children","AccountRouter","document","backgroundColor","path","component","LoginScreen","lUsername","lPassword","formLoginValues","handleLoginInputChange","autoFocus","autoComplete","href","role","tabIndex","RegisterScreen","cryptoRandomString","genero","padres_responsables","password2","formRegisterValues","handleRegisterInputChange","startRegister","AuthRouter","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","useFetchInstituions","setUiDisabled","data_institutions","setInstitutions","handleSwitchChange","useCallback","fetchInstitution","then","res","rows","instituciones","forEach","item","telefono","nit","nombre_contacto","modified","deleted","institutionDelete","catch","err","error","InstitutionScreen","columns","label","field","sort","noRecordsFoundLabel","scrollX","autoWidth","maxHeight","striped","bordered","small","useFormPhone","mobile","address","phone","emei","contact_name","formInstitutionValues","handleInstitutionInputChange","formInstitutionPhoneValues","handleInstitutionPhoneInputChange","startRegisterInstitution","inputExtraProps","required","dropdownClass","inputStyle","country","mask","maskChar","FormUpdate","newNit","updatedInstitution","UpdateScreen","i","InstitutionRouter","faThermometerQuarter","faThermometerThreeQuarters","faBong","paddingTop","paddingBottom","faCubes","fadeInKeyFrames","keyframes","Img","styled","img","time","css","fadeIn","ImgDefault","GetImage","onImageUpdate","onImageRemove","index","justifyContent","data_url","GetImageOne","alignItems","Form","questionImage","optionsImage","dataQuestionShape","setDataQuestionShape","respCorrect","formShapeInputValues","handleShapeInputValueChange","imagesQuestion","setImagesQuestion","setImages","paddingLeft","paddingRight","size","multiple","imageList","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","formcontrolname","shapeEdit","shapeRegister","FormQuestionShape","data_questions_shape","questionsShape","setQuestionsShape","testShapeLoading","preguntaFormas","useFetchQuestionShapeOne","setQuestion","questionsImage","setQuestionsImage","imageOptions","setImageOptions","DestructureValue","testFormas","Register","useNearScreen","distance","externalRef","once","isNearScreen","setShow","fromRef","useRef","observer","element","current","entries","isIntersecting","disconnect","Promise","resolve","IntersectionObserver","rootMargin","observe","TestBodyProfile","key","ShapeScreen","loading","setLoading","skip","setSkip","concat","useFetchQuestionShape","debounceHandleNextPage","debounce","preveSkip","ref","UpdatedScreen","TestsRouter","ShapeScreenQuestion","limit","setLimit","INITIAL_LIMIT","useFetchQuestionShapeFindAll","disabledFinish","setDisabledFinish","disabledStart","setDisabledStart","imagesToConvert","dataToQuestions","destructuringQuestion","useFetchImage","limitAnswers","setLimitAnswers","setAnswersShape","handlePrevQuestion","handleSelect","handleOfChangeTheValue","questionCorrect","findIndex","filterDataAnswers","correctAnswer","newData","bien_mal","dataFilter","dato","now","fecha_hora","answersShapeRegister","textAlign","TestShapeSetActiveClear","useFetcheTestShape","data_Tformas","fetchTFormas","testShapeSetActive","testShapeDelete","ModalRegister","Modal","setAppElement","formValues","setFormValues","closeModal","isOpen","onRequestClose","content","top","left","right","bottom","transform","closeTimeoutMS","ariaHideApp","updatedTestShape","TestShapeScreen","TestShape","TestShapeRouter","testSimpleCategory","TestSimpleCategorySetActiveClear","useFetchCategory","data_category","fetchTSimpleCategory","categorias","nombre_categoria","testSimpleCategoryDelete","ModalCategory","startRegisterCategory","CategoryScreen","questionSimple","setDataQuestion","setFilter","test_simples","nombre_test","handleActiveQuestionsSimple","questionSetSimple","handleDeleteQuestionSimple","questionDeleteSimple","QuestionSimpleCard","setState","QuestionBodyProfile","SimpleScreen","QuestionsSimple","setQuestionsSimple","simples_preguntas","useFetchQuestionSimple","debounceHandleNextPageSimple","categoryLoading","useFetchTestSimple","questionsSimple","testSimpleLoading","SimpleScreenRegister","categoryData","setCategoryData","testName","setTestName","nameCategory","setNameCategory","formQuestionSimpleInputValues","handleQuestionSimpleInputValueChange","id_category","TestSimpleSetActiveClear","ModalRegisterSimple","nombre_test_test","updatedTestSimple","data_simple","fetchTSimple","testSimpleDelete","TestScreenSimple","TestSimple","FormUpdatedQuestion","simpleEdit","FormQuestionSimple","TestSimpleRouter","ShapeScreeAnswers","dataShape","shapeLoading","useFetchTestShape","selectionDefault","setSelectionDefault","formSelectionInputValues","handleSelectionInputValueChange","DEFAULTVALUE","FormWinzard","Array","handleClick","answer","elements","arrayLength","htmlFor","defaultChecked","isFirst","prev","isLast","next","si","nose","no","answersRegister","MapOfFormWinzard","dataAnswers","config","navigation","location","SimpleScreenAnswers","data_answer","answersSimpleLoading","useFetchAnswerSimple","AnswersScreen","SelectionTestScreen","AnswersRouter","AppRouter","PsicologiaApp","ReactDOM","render","getElementById","authChecking","authStartLogin","authStartRegister","authStartStartTokenRenew"],"mappings":"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","file":"static/js/main.08fd46db.chunk.js","sourcesContent":["\nconst baseURL = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseURL}/${endpoint}`; // localhost:4000/api/\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n\n}\nconst fetchConToken = (endpoint, data, method = 'GET', tokenStart = '') => {\n\n    const url = `${baseURL}/${endpoint}`; // localhost:4000/api/\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            },\n        });\n    }\n    else if (tokenStart !== '') {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': tokenStart\n            },\n            body: JSON.stringify(data)\n        });\n    }\n    else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import { useEffect, useState } from \"react\";\n\nexport const useFetchDestructureValue = (pregunta = \"\") => {\n  const [data, setData] = useState({ image: \"\" });\n\n  const question = new Buffer.from(pregunta).toString(\"ascii\");\n\n  useEffect(() => {\n    setData({\n      image: question,\n    });\n  }, [pregunta, question]);\n\n  return data;\n};\n","import { useEffect, useState } from \"react\";\n\n\nexport const useFetchOptionsDestructure = ( op1 = '', op2 = '', op3 = '', op4 = '', op5 = '', op6 = '' ) => {\n\n    const [ data, setData ] = useState([]);  \n    \n    const optionOne   = new Buffer.from( op1 ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2).toString('ascii');\n    const optionThree = new Buffer.from( op3 ).toString('ascii');\n    const optionFour  = new Buffer.from( op4 ).toString('ascii');\n    const optionFive  = new Buffer.from( op5 ).toString('ascii');\n    const optionSix   = new Buffer.from( op6 ).toString('ascii');\n\n    useEffect(() => {\n\n        setData({ \n            option1 : optionOne,\n            option2 : optionTwo,\n            option3 : optionThree,\n            option4 : optionFour,\n            option5 : optionFive,\n            option6 : optionSix })\n       \n    }, [ optionOne, optionTwo, optionThree, optionFour, optionFive, optionSix ]);\n\n    return data;\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { PanelBody } from './PanelBody';\n\nexport const TestShapeCard = ({ questionData, option }) => {\n\n    const [ dataOption, setDataOption ] = useState([])\n    const  { id_pregunta, pregunta, nombre, id_test, op1, op2, op3, op4, op5, op6, respuesta_correcta, createdAt, updatedAt, test_formas } = questionData;\n    const { nombre: nombreTest } = test_formas;\n    \n    const questions   = new Buffer.from( pregunta.data ).toString(\"ascii\");\n\n    const optionOne   = new Buffer.from( op1.data ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2.data ).toString('ascii');\n    const optionThree = new Buffer.from( op3.data ).toString('ascii');\n    const optionFour  = new Buffer.from( op4.data ).toString('ascii');\n    const optionFive  = new Buffer.from( op5.data ).toString('ascii');\n    const optionSix   = new Buffer.from( op6.data ).toString('ascii');\n\n    const Options = [\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            optionFive,\n            optionSix\n    ];\n\n    useEffect(() => {\n        \n        setDataOption( option );\n        \n    }, [ option ]);\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n               <PanelBody \n                   questions = { questions }\n                   nombre = { nombre }\n                   createdAt = { createdAt }\n                   updatedAt = { updatedAt }\n                   respuesta_correcta = { respuesta_correcta }\n                   nombreTest = { nombreTest }\n                   id_pregunta = { id_pregunta }\n                   id_test = { id_test }\n                   filterData = { dataOption }\n                   setFilterData = { setDataOption }\n               />\n            </div>\n            <div className=\"panel-body\">\n                <div id=\"gallery\" className=\"media-gal isotope\" >\n                    {\n                        Options.map( ( e, id )=>(\n                            <div className=\"images item  isotope-item\" key={ id }>\n                                <img \n                                    \n                                    src={ e } \n                                    alt=\"Option1\" />\n                                <p>Opción { id + 1 } </p>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <hr/>\n        </div >\n    );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { questionClearShape, questionDeleteShape, questionSetShape } from '../../../../actions/questionShape';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ id_pregunta = '', id_test = '', questions = [], nombre = [], createdAt = '', updatedAt = '', respuesta_correcta = '', nombreTest = '', filterData, setFilterData }) => {\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const handleActiveQuestions = (id_pregunta, nombre, id_test, id_resp) => {\n\n        dispatch(questionClearShape());\n        dispatch(questionSetShape(id_pregunta, nombre, id_test, id_resp));\n        history.push('/test/register/updated/shapes');\n\n    }\n    const handleDeleteQuestion = (id_pregunta) => {\n        dispatch(questionDeleteShape(id_pregunta));\n        setFilterData(\n            filterData.filter(\n                e => (e.id_pregunta !== id_pregunta)\n            ));\n\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-3\">\n                <div className=\"profile-pic text-center\">\n                    <img src={questions} alt=\"question\" />\n                </div>\n            </div>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Nombre</h1>\n                    <br />\n                    <span className=\"text-muted\">{nombre}</span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : {moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : {moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestions(id_pregunta, nombre, id_test, respuesta_correcta) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp;\n                    <button onClick={() => { handleDeleteQuestion(id_pregunta) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Nombre</h1>\n                    <p>{nombre} </p>\n                    <h1>Respuesta Correcta</h1>\n                    <p>Imagen : {respuesta_correcta}</p>\n                    <h1>Nombre de Prueba </h1>\n                    <p>{nombreTest}</p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import { useMemo } from \"react\";\n\nexport const useConvertImage = (state = []) => {\n  const images = useMemo(() => convertImage(state), [state]);\n\n  function convertImage(data) {\n    const question = convertToBase64(data.pregunta);\n    const optionOne = convertToBase64(data.op1);\n    const optionTwo = convertToBase64(data.op2);\n    const optionThree = convertToBase64(data.op3);\n    const optionFour = convertToBase64(data.op4);\n    const optionFive = convertToBase64(data.op5);\n    const optionSix = convertToBase64(data.op6);\n\n    return {\n      question: question,\n      options: [\n        optionOne,\n        optionTwo,\n        optionThree,\n        optionFour,\n        optionFive,\n        optionSix,\n      ],\n    };\n  }\n\n  function convertToBase64(blob) {\n    if (blob !== undefined) {\n      const data = new Buffer.from(blob).toString(\"ascii\");\n\n      return data;\n    }\n  }\n\n  return images;\n};\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking:true,\n    // uid:null,\n    // name:null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch( action.type ){\n\n        case types.authLogin:\n                return{\n                    ...state,\n                    ...action.payload,\n                    checking: false\n                }\n        case types.authUserUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authUserUpdatePassword:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authCheckingFinish:\n            return{\n                ...state,\n                checking:false\n            }\n        case types.accountUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default: \n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    institutions:[],\n    activeInstitution:null\n}\n\nexport const institutionReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n\n        case types.institutionSetActive:\n            return {\n                ...state,\n                activeInstitution: state.institutions.find(  institution => institution.id_institucion.toString() === action.payload.id )\n            }\n        case types.institutionLoaded:\n            return {\n                ...state,\n                institutions: [ ...action.payload]\n            }\n        case types.institutionSetActiveClear:\n            return { \n                ...state,\n                activeInstitution:null\n            }\n        \n        default:\n            return state\n    }\n    \n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    questionActive: {\n        question: null,\n        name: '',\n        id_test: null,\n        id_resp: null\n    }\n}\n\nexport const questionShape = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSetActive:\n            return {\n                ...state,\n                questionActive: action.payload\n            }\n        case types.questionClearActive:\n            return { \n                ...state,\n                questionActive: null\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape:[]\n}\n\nexport const shapeReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.shapeLoaded:\n            return {\n                ...state,\n                shape:[ ...action.payload ]\n            }\n        default:\n            return state\n    }\n    \n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    testShape: [],\n    testShapeActive: null\n}\n\nexport const testShapeReducer = ( state = initialState, action  ) => {\n\n    switch ( action.type ) {\n\n        case types.testShapeActive:\n            return {\n                ...state,\n                testShapeActive: state.testShape.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testShapeClear:\n            return {\n                ...state,\n                testShapeActive: null\n            }\n        case types.testShapeLoaded:\n            return {\n                ...state,\n                testShape: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    uiDrowp:'dropdown',\n    uiSidebar:'nav-collapse',\n    uiSection:'',\n    uiLoadingButton:'fa fa-lock',\n    uiLoadingSaveButton:'fa fa-save',\n    uiDisabled:false,\n\n    uiSelection:'none',\n    uiRegisterSelectAcordion:'',\n    uiShowSelectInstitution:'',\n\n    uiIconClose:'dcjq-icon',\n\n    uiModal: false\n\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n    switch ( action.type ) {\n        case types.uiOpenSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse'\n            }\n        case types.uiCloseSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse hide-left-bar'\n            }\n        case types.uiTrueDisabledButton:\n            return {\n                ...state,\n                uiDisabled:true\n            }\n        case types.uiFalseDisabledButton:\n            return {\n                ...state,\n                uiDisabled:false\n            }\n        case types.uiOpenSection:\n            return {\n                ...state,\n                uiSection:''\n            }\n        case types.uiCloseSection:\n            return {\n                ...state,\n                uiSection:'merge-left'\n            }\n        case types.uiOpenDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown open'\n            }\n        case types.uiCloseDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown'\n            }\n\n        case types.uiOpenLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-lock'\n            }\n        case types.uiCloseLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-spin fa-refresh'\n            }\n            \n        case types.uiOpenLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-save'\n            }\n        case types.uiCloseLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-spin fa-refresh'\n            }\n        \n        case types.uieventLogout:\n            return {\n                ...initialState\n            }\n        \n        // Events Screen Institution\n\n        case types.institutionAcordionSelect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'block',\n                checking:false\n            }\n        case types.institutionAcordionDeselect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'none',\n                checking:false\n            }\n        case types.institutionSelectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'active',\n                checking:false\n            }\n        case types.institutionDeselectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'',\n                checking:false\n            }\n\n        case types.institutionSelectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:'active'\n            }\n        case types.institutionDeselectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:''\n            }\n        case types.institutionOpenAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionCloseAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionIconClose:\n            return{\n                ...state,\n                ...action.payload,\n                uiIconClose:'dcjq-icon',\n                cheking:false\n            }\n        case types.uiModalTrue:\n            return {\n                ...state,\n                uiModal: true\n            }\n        case types.uiModalFalse:\n            return {\n                ...state,\n                uiModal: false\n            }\n                \n    \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initState = {\n    testSimple: [],\n    testActiveSimple: null\n}\n\nexport const testSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleActive:\n            return {\n                ...state,\n                testActiveSimple: state.testSimple.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testSimpleClear:\n            return {\n                ...state,\n                testActiveSimple: null\n            }\n        case types.testSimpleLoaded:\n            return { \n                ...state,\n                testSimple: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    category:[],\n    categoryActive: null\n}\n\nexport const testSimpleCategoryReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleCategoryActive:\n            return { \n                ...state,\n                categoryActive: state.category.find(  e => e.id_categoria.toString() === action.payload.id )\n            }\n        case types.testSimpleCategoryClear:\n            return {\n                ...state,\n                categoryActive: null\n            }\n        case types.testSimpleCategoryLoaded:\n            return {\n                ...state,\n                category:[ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initState = { \n    questionActive: [],\n}\n\nexport const questionSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSimpleSetActive:\n            return {\n                ...state,\n                questionActive:  action.payload \n            }\n        case types.questionSimpleClearActive:\n            return { \n                ...state,\n                questionActive: [],\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersSimpleActive: null,\n    answers: null\n}\n\nexport const answersSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersSimpleActive:\n            return{\n                ...state,\n                answersSimpleActive: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersSimpleActive: null\n            }\n        case types.answersfilter:\n                return{\n                    ...state,\n                    answers: action.payload\n                }\n        case types.answersfilterActive:\n            let array = state.answers;\n            array[ action.payload.position ] = action.payload.answersActive \n            return{\n                ...state,\n                answers: array\n            }      \n        default:\n            return  state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape: []\n}\n\nexport const shapeAnswersReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case types.shapeAnswersActive:\n            return {\n                ...state,\n                shape: action.payload\n            }\n        case types.shapeAnswersClear:\n            return {\n                ...state,\n                shape: []\n            }\n        default:\n            return state\n    }\n\n}\n","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersShape: [],\n}\n\nexport const answersShapeReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersShapeActive:\n            return{\n                ...state,\n                answersShape: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersShape: []\n            }\n        // case types.answersfilter:\n        //         return{\n        //             ...state,\n        //             answers: action.payload\n        //         }\n        // case types.answersfilterActive:\n        //     let array = state.answers;\n        //     array[ action.payload.position ] = action.payload.answersActive \n        //     return{\n        //         ...state,\n        //         answers: array\n        //     }      \n        default:\n            return  state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { institutionReducer } from \"./institutionReducer\";\nimport { questionShape } from \"./questionShape\";\nimport { shapeReducer } from \"./shapeReducer\";\nimport { testShapeReducer } from \"./testShapeReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { testSimpleReducer } from \"./testSimpleReducer\";\nimport { testSimpleCategoryReducer } from \"./testSimpleCategoryReducer\";\nimport { questionSimpleReducer } from \"./questionSimpleReducer\";\nimport { answersSimpleReducer } from \"./answersSimpleReducer\";\nimport { shapeAnswersReducer } from \"./shapeAnswersReducer\";\nimport { answersShapeReducer } from \"./answersShapeReducer\";\n\nexport const rootReducer = combineReducers({\n       ui:uiReducer,\n       auth: authReducer,\n       institution:institutionReducer,\n       shape:shapeReducer,\n       questionShape:questionShape,\n       tShape:testShapeReducer,\n       tSimple:testSimpleReducer,\n       category:testSimpleCategoryReducer,\n       qSimple:questionSimpleReducer,\n       answerSimple:answersSimpleReducer,\n       answerShape:shapeAnswersReducer,\n       shapeAnswer:answersShapeReducer\n\n});","import { createStore , compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n)","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport {\n  uiCloseLoadingButton,\n  uiCloseLoadingSaveButton,\n  uieventLogout,\n  uiFalseDisabledButton,\n  uiOpenLoadingButton,\n  uiOpenLoadingSaveButton,\n  uiTrueDisabledButton,\n} from \"./ui\";\n// import { eventLogout } from \"./events\";\n\nexport const startLogin = (username, password) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startLoginAddAccount = (username, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startRegister = (\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  genero,\n  edad,\n  direccion,\n  padres_responsables,\n  dni,\n  email,\n  username,\n  password,\n  password2,\n  id_institucion\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    if (password !== password2) {\n      return (\n        Swal.fire(\":(\", \"Las contraseñas no coinciden\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    } else if (\n      password.trim().length <= 5 ||\n      \"\" ||\n      password2.trim().length <= 5 ||\n      \"\" ||\n      username === \"\"\n    ) {\n      return (\n        Swal.fire(\":(\", \"El username o password no son validos\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    }\n\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      {\n        nombre,\n        primer_apellido,\n        segundo_apellido,\n        celular,\n        imei,\n        genero,\n        edad,\n        direccion,\n        padres_responsables,\n        dni,\n        email,\n        username,\n        password,\n        id_institucion,\n      },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      dispatch(startLoginAddAccount(username, password));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        }),\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startUpdateAccount = (\n  persona_id,\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  edad,\n  dni,\n  direccion,\n  email\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      const resp = await fetchConToken(\n        \"users/update\",\n        {\n          persona_id,\n          nombre,\n          primer_apellido,\n          segundo_apellido,\n          celular,\n          imei,\n          edad,\n          dni,\n          direccion,\n          email,\n        },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(accountUpdated(persona));\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(uiOpenLoadingSaveButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startUpdateUser = (persona_id, username) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (username.trim() === \"\") {\n        return (\n          Swal.fire(\"Error\", \"El username esta vacio\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-user\",\n        { persona_id, username },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(\n          login({\n            uid: body.uid,\n            username: body.username,\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const startUpdateUserPassword = (\n  persona_id,\n  passwordCurrent,\n  passwordNew,\n  passwordAgain\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (passwordNew.trim() === \"\" || passwordNew.trim().length <= 5) {\n        return (\n          Swal.fire(\"Error\", \"La contraseña es menor a 6\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      } else if (passwordNew !== passwordAgain) {\n        return (\n          Swal.fire(\"Error\", \"Las contraseñas no coinciden\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-userp\",\n        { persona_id, passwordCurrent, passwordNew },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      console.log(body);\n\n      if (body.ok) {\n        dispatch(\n          login({\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst accountUpdated = (persona) => ({\n  type: types.accountUpdate,\n  payload: persona,\n});\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(uieventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });\n","\nimport { useState } from \"react\"\n\nexport const useForm = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ( { target } ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n\n        setValues({\n            ...values,\n           [target.name] : target.value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdateAccount } from '../../actions/auth';\nimport { uiFalseDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const AccountScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { persona } = useSelector(state => state.auth);\n    \n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui)\n\n    const [ formAccountValues, handleAccountInputChange ] = useForm( persona );\n    \n    const { persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email } = formAccountValues;\n\n    const handleUpdate = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startUpdateAccount( persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email ) );\n\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ dispatch ])\n\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>  INFORMACIÓN PERSONAL</h2>\n                                </div>\n                                <form alt=\"formulario\" className=\"form-horizontal\" onSubmit={ handleUpdate } >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">\n                                            Foto principal\n                                        </label>\n                                        <div className=\"col-sm-6\">\n                                            <img\n                                                className=\"w150 img-thumbnail\"\n                                                src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" \n                                                alt=\"perfil\"\n                                            />\n                                            <br />\n                                            <br />\n                                            <input type=\"file\" className=\"form-control\"></input>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nombre</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"nombre\"\n                                                value={ nombre }\n                                                onChange= { handleAccountInputChange }\n                                                id=\"nombre\"\n                                                name=\"nombre\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Primer Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"Primer Apellido\"\n                                                id=\"primer_apellido\"\n                                                name=\"primer_apellido\"\n                                                value={ primer_apellido }\n                                                onChange= { handleAccountInputChange }\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Segundo Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"segundo_apellido\"\n                                                name=\"segundo_apellido\"\n                                                className=\"form-control\"\n                                                value={ segundo_apellido }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Numero Celular</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"celular\"\n                                                name=\"celular\"\n                                                className=\"form-control\"\n                                                value={ celular }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Imei</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"imei\"\n                                                name=\"imei\"\n                                                className=\"form-control\"\n                                                value={ imei }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dni</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"dni\"\n                                                name=\"dni\"\n                                                className=\"form-control\"\n                                                value={ dni }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Edad</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"edad\"\n                                                name=\"edad\"\n                                                className=\"form-control\"\n                                                value={ edad }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Email</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"email\"\n                                                name=\"email\"\n                                                className=\"form-control\"\n                                                value={ email }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dirección</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"direccion\"\n                                                name=\"direccion\"\n                                                className=\"form-control\"\n                                                value={ direccion }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">&nbsp;</label>\n                                        <div className=\"col-sm-6\">\n                                            <button type=\"submit\" className=\"btn btn-primary btn-round btn-block\" disabled={ uiDisabled } >\n                                                <i className={ uiLoadingSaveButton } ></i>  Guardar\n                                        </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startUpdateUserPassword } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const ChangePasswordScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n    const { persona_id } = useSelector(state => state.auth.persona);\n    \n    const [ formPasswordValues, handlePasswordInputChange ] = useForm({\n\n        passwordCurrent:'',\n        passwordNew:'',\n        passwordAgain:''\n\n    });\n    const inputStylePassword = {\n        color:'#1D253E'\n    }\n    \n    const { passwordCurrent, passwordNew, passwordAgain } = formPasswordValues;\n\n    useEffect(() => {\n        if ( passwordNew.trim() === '' ||  passwordAgain.trim() === ''|| passwordCurrent.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( passwordCurrent.trim().length <= 5 || passwordNew.trim().length <= 5 || passwordAgain.trim().length <= 5 ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        \n          dispatch( uiFalseDisabledButton() );\n\n    }, [ passwordCurrent, passwordNew, passwordAgain, dispatch ])\n\n\n    const handleChangePassword = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUserPassword( persona_id, passwordCurrent, passwordNew, passwordAgain ) );\n    }\n    \n\n    return (\n        <div className=\"col-md-12\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>CAMBIAR CONTRASEÑA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleChangePassword } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Contraseña Actual</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Contraseña actual\"\n                                                value={ passwordCurrent }\n                                                onChange= { handlePasswordInputChange }\n                                                id=\"passwordCurrent\"\n                                                name=\"passwordCurrent\"\n                                                className=\"form-control\" \n                                                style={ inputStylePassword }\n                                                />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nueva Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                id=\"passwordNew\"\n                                                name=\"passwordNew\"\n                                                placeholder=\"Contraseña nueva\"\n                                                className=\"form-control\"\n                                                value={ passwordNew }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Repetir Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Confirme contraseña\"\n                                                id=\"passwordAgain\"\n                                                name=\"passwordAgain\"\n                                                className=\"form-control\"\n                                                value={ passwordAgain }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i \n                                            className={ uiLoadingSaveButton } \n                                            ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-warning col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/setting\"\n                                            ><i className=\"fa fa-times\" ></i> Cancelar</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport 'moment/locale/es';\nimport { startUpdateUser } from '../../actions/auth';\nimport { Link } from 'react-router-dom';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n// change Spanish\n\nmoment.locale('es');\n\nexport const UserScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { usuarios, persona_id } = useSelector(state => state.auth.persona);\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [ formUserValues, handleUserInputChange ] = useForm( usuarios[0] );\n\n    const { username, createdAt, updatedAt  } = formUserValues;\n\n    const handleUpdateUser = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUser( persona_id, username ) );\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n\n        if( username.trim() === '' ){\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ username, dispatch ]);\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>INFORMACIÓN CUENTA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleUpdateUser } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">User Name</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"User Name\"\n                                                value={ username }\n                                                onChange= { handleUserInputChange }\n                                                id=\"username\"\n                                                name=\"username\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Fecha de Creación</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"create\"\n                                                className=\"form-control\"\n                                                value={ moment(createdAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Ultima Actualización</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"update\"\n                                                className=\"form-control\"\n                                                value={ moment(updatedAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i className={ uiLoadingSaveButton } ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-success col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/settingp\"\n                                            >\n                                            <i className=\"fa fa-lock\" ></i> Cambiar Contraseña</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}","import moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const answersShapeActive = (answerShape) => ({\n    type: types.shapeAnswersActive,\n    payload: answerShape\n});\n\n// AnwersShape Response\n\n\nexport const answersShapeFindAll = (answerShape) => ({\n    type: types.answersShapeActive,\n    payload: answerShape\n});\nexport const answerShapeClear = () => ({\n    type: types.shapeAnswersClear,\n});\n\nexport const answersShapeRegister = (uid, answers) => {\n\n    return async () => {\n\n        const now = moment().format();\n\n        try {\n            answers.map(async (e) => {\n\n                const resp = await fetchConToken('respuesta-formas/new', {\n                    id_pregunta: e.id,\n                    persona_id: uid,\n                    fecha_hora: now,\n                    bien_mal: e.bien_mal\n                }, 'POST');\n\n                const body = await resp.json();\n\n                if (body.ok) {\n\n                    return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                } else {\n\n                    return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                }\n\n            });\n\n        } catch (err) {\n\n            return Swal.fire('Error', \"Hable con el administrador\", 'error');\n\n        }\n    }\n\n};","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUniversity, faVials, faVial } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport '../../styles/styles.css';\nimport { institutionAcordionDeselect, institutionAcordionSelect, institutionDeselectRegister, institutionDeselectShow, institutionSelectRegister, institutionSelectShow } from '../../actions/ui';\nimport { answerShapeClear } from '../../actions/answersShape';\n\n\nexport const Aside = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiSelection, uiRegisterSelectAcordion, uiShowSelectInstitution } = useSelector(state => state.ui);\n\n    const { uiSidebar } = useSelector(state => state.ui);\n\n    const handleChangeStylePerfil = (e) => {\n        e.preventDefault();\n\n        dispatch(institutionAcordionDeselect());\n        dispatch(institutionDeselectRegister());\n        dispatch(institutionDeselectShow());\n        dispatch(answerShapeClear())\n\n    }\n\n    const handleChangeStyle = (e) => {\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister()),\n                dispatch(institutionDeselectShow())\n            )\n        }\n        dispatch(institutionAcordionSelect());\n        dispatch(answerShapeClear())\n\n\n    }\n\n    const handleChangeStyleShow = (e) => {\n        e.preventDefault();\n        dispatch(institutionSelectShow());\n        dispatch(institutionDeselectRegister());\n        dispatch(answerShapeClear())\n\n    }\n    const handleChangeStyleRegister = (e) => {\n        e.preventDefault();\n        dispatch(institutionSelectRegister());\n        dispatch(institutionDeselectShow());\n        dispatch(answerShapeClear())\n    }\n\n    const handleChangeStyleTestRegister = (e) => {\n\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionDeselectShow()),\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister())\n            )\n        }\n        dispatch(answerShapeClear())\n\n    }\n\n    const handleChangeStyleTest = (e) => {\n\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionDeselectShow()),\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister())\n            )\n        }\n        dispatch(answerShapeClear());\n\n    }\n\n    const handleLogout = () => {\n        dispatch(answerShapeClear())\n        dispatch(startLogout());\n    }\n\n    return (\n        <aside>\n            <div\n                id=\"sidebar\"\n                className={uiSidebar}\n            >\n                <div className=\"leftside-navigation\">\n                    <ul className=\"sidebar-menu\" id=\"nav-accordion\">\n\n                        <li className=\"sub-menu\" onClick={handleChangeStylePerfil} >\n                            <NavLink to='/user' activeClassName=\"active\" >\n                                <i className=\"fa fa-user\"></i>\n                                <span>Perfil</span>\n                            </NavLink>\n                        </li>\n\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}  >\n                            <div onClick={handleChangeStyle}>\n                                <NavLink to=\"/institution\" activeClassName=\"active\">\n                                    <i>\n                                        <FontAwesomeIcon icon={faUniversity} />\n                                    </i>\n                                    <span>Institución</span>\n                                </NavLink>\n                            </div>\n                            <ul className=\"sub\" style={{ display: uiSelection }}>\n                                <li className={uiShowSelectInstitution} onClick={handleChangeStyleShow} >\n                                    <NavLink to=\"/institution/view\">\n                                        Ver Instituciónes\n                                    </NavLink>\n                                </li>\n                                <li className={uiRegisterSelectAcordion} onClick={handleChangeStyleRegister}>\n                                    <NavLink to=\"/institution\" >\n                                        Registrar\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </li>\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}>\n                            <div onClick={handleChangeStyleTestRegister}>\n\n                                <NavLink to=\"/test/register\" activeClassName=\"active\" >\n                                    <i>\n                                        <FontAwesomeIcon\n                                            icon={faVial}\n                                        />\n                                    </i>\n                                    <span>Registrar pruebas</span>\n                                </NavLink>\n                            </div>\n                        </li>\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}>\n                            <div onClick={handleChangeStyleTest} >\n                                <NavLink to=\"/answers\" activeClassName=\"active\" exact >\n                                    <i>\n                                        <FontAwesomeIcon icon={faVials} />\n                                    </i>\n                                    <span>Pruebas</span>\n                                </NavLink>\n                            </div>\n                        </li>\n                        <li onClick={handleLogout}  >\n                            <NavLink to=\"/auth/login\" className='hyper'>\n                                <i className=\"fa fa-sign-out\"></i>\n                                <span>Cerrar Sesión</span>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </aside>\n    )\n}\n","import React from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nconst Image = (image) => {\n  return <LazyLoadImage src={image.src} />;\n};\n\nexport default Image;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { startLogout } from \"../../actions/auth\";\nimport {\n  uiCloseDrowp,\n  uiCloseSection,\n  uiCloseSidebar,\n  uiOpenDrowp,\n  uiOpenSection,\n  uiOpenSidebar,\n} from \"../../actions/ui\";\nimport \"../../styles/styles.css\";\nimport Image from \"../../utils/Image\";\n\nexport const Header = () => {\n  const { uiDrowp, uiSidebar } = useSelector((state) => state.ui);\n\n  const dispatch = useDispatch();\n\n  const handleSidebar = (e) => {\n    e.preventDefault();\n\n    if (uiSidebar === \"nav-collapse\") {\n      dispatch(uiCloseSidebar());\n      dispatch(uiCloseSection());\n    }\n    dispatch(uiOpenSidebar());\n    dispatch(uiOpenSection());\n  };\n\n  const dropDownOpen = (e) => {\n    e.preventDefault();\n\n    if (uiDrowp === \"dropdown\") {\n      return dispatch(uiOpenDrowp());\n    }\n\n    dispatch(uiCloseDrowp());\n  };\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <header className=\"header fixed-top clearfix\">\n      <div className=\"brand\">\n        <Link className=\"logo\" to=\"index.html\">\n          <img\n            src=\"https://mauriciocartagena.github.io/my-perfil/static/media/Logo.2921d167.png\"\n            style={{ width: 168, height: 40 }}\n            alt=\"logo\"\n          />\n        </Link>\n        <div className=\"sidebar-toggle-box\" onClick={handleSidebar}>\n          <div className=\"fa fa-bars\"></div>\n        </div>\n      </div>\n\n      <div className=\"top-nav clearfix\">\n        <ul className=\"nav pull-right top-menu\">\n          <li className={uiDrowp}>\n            <Link\n              data-toggle=\"dropdown\"\n              className=\"dropdown-toggle\"\n              onClick={dropDownOpen}\n              style={{ cursor: \"pointer\" }}\n              to=\"/\"\n            >\n              <Image src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" />\n              <span className=\"username\"> &nbsp; Mauricio Cartagena </span>\n              <b className=\"caret\"></b>\n            </Link>\n            <ul className=\"dropdown-menu extended logout\">\n              <li>\n                <Link to=\"/user\">\n                  <i className=\" fa fa-suitcase\"></i>\n                  Perfil\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/user/setting\">\n                  <i className=\"fa fa-cog\"></i>\n                  Configuración\n                </Link>\n              </li>\n              <li className=\"hyper\" onClick={handleLogout}>\n                <Link to=\"/\">\n                  <i className=\"fa fa-key\"></i>Cerrar Sesión\n                </Link>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Aside } from './Aside';\nimport { Header } from './Header';\n\nexport const Layout = ({ children }) => {\n    \n    const { uiSection } = useSelector(state => state.ui)   \n\n    return (\n        \n        <section id=\"container\">\n            <Header />\n            <Aside />    \n           <section \n               id=\"main-content\"                 \n               className={ uiSection } \n               >\n               <section className=\"wrapper\">\n\n                { children }\n\n               </section>\n           </section>\n       </section>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AccountScreen } from '../../components/Accounts/AccountScreen';\nimport { ChangePasswordScreen } from '../../components/Accounts/ChangePasswordScreen';\nimport { UserScreen } from '../../components/Accounts/UserScreen';\nimport { Layout } from '../../components/main/Layout';\n\n\n\nexport const AccountRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/user\"\n                    component={ AccountScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/setting\"\n                    component={ UserScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/settingp\"\n                    component={ ChangePasswordScreen }\n                />\n                <Redirect to=\"/user\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startLogin } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const LoginScreen = () => {\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lUsername:'ad2min',\n        lPassword:'administrador'\n    });\n    \n    const { lUsername, lPassword } = formLoginValues;\n    \n    const handleLogin = ( e ) => {\n        e.preventDefault(); \n\n        if ( lUsername.trim() === '' || lPassword.trim() === '') {\n            return Swal.fire(':(', 'Username o contraseña esta vacia'  , 'error');\n        }\n        else if( lPassword.trim().length <= 5 ) {\n           return Swal.fire(':(', `La contraseña debe tener 6 a mas digitos y tiene ${ lPassword.trim().length }`  , 'error');\n        }\n        \n        dispatch( startLogin( lUsername, lPassword ) );  \n        \n    }\n\n    useEffect(() => {\n\n        if ( lUsername.trim() === '' ||  lPassword.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( lPassword.trim().length <= 5  ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n    \n    }, [ lUsername, lPassword, dispatch ]);\n\n    return (\n        <div className=\"container animate__animated animate__fadeIn\">\n            <form className=\"form-signin\" onSubmit={ handleLogin } >\n                <h2 className=\"form-signin-heading\">Sistema de Psicologia</h2>\n                <div className=\"login-wrap\">\n                    <div className=\"user-login-info\">\n                        <input \n                            type=\"text\" \n                            name=\"lUsername\"\n                            className=\"form-control\"  \n                            placeholder=\"Username\" \n                            autoFocus\n                            autoComplete=\"off\"\n                            value={ lUsername }\n                            onChange={ handleLoginInputChange }\n                            />\n                        <input \n                            type=\"password\"\n                            name=\"lPassword\" \n                            className=\"form-control\" \n                            placeholder=\"Password\" \n                            autoComplete=\"off\"\n                            value={ lPassword }\n                            onChange={ handleLoginInputChange }\n                            />\n                    </div>\n                    <label className=\"checkbox\">\n                        <span className=\"pull-right\">\n                            <a data-toggle=\"modal\" href=\"#myModal\"> ¿Olvidadeste tu Contraseña?</a>\n                        </span>\n                        <br/>\n                    </label>\n                    <button className='btn btn-lg btn-login btn-block'  disabled={ uiDisabled } type=\"submit\">\n                        <i _ngcontent-kod-c28=\"\" className={ uiLoadingButton }></i> Iniciar Sesión\n                    </button>\n\n                    <div className=\"registration\">\n                    ¿No tienes una cuenta?                   \n                        <Link \n                            to=\"/auth/register\"\n                        > Crear cuenta \n                        </Link>\n                    </div>\n                </div>\n                {/* Modal */}\n                <div aria-hidden=\"true\" aria-labelledby=\"myModalLabel\" role=\"dialog\" tabIndex=\"-1\" id=\"myModal\" className=\"modal fade in\" style={{ display:\"none\" }} >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                                <h4 className=\"modal-title\">¿Olvidaste tu Contraseña?</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p>Ingrese tu email para restablecer tu contraseña</p>\n                                <input type=\"text\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control placeholder-no-fix\" />\n\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button data-dismiss=\"modal\" className=\"btn btn-default\" type=\"button\">Cancel</button>\n                                <button className=\"btn btn-success\" type=\"button\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* End Modal */}\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport cryptoRandomString from 'crypto-random-string';\n\n\nimport { useForm } from '../../hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startRegister } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n\n        nombre: \"tu nombre\",\n        primer_apellido: \"tu primer apellido\",\n        segundo_apellido: \"tu segundo apellido\",\n        celular: `${cryptoRandomString({ length: 8, type: 'numeric' })}`,\n        imei: `${cryptoRandomString({ length: 12, type: 'numeric' })}`,\n        genero: \"Masculino\",\n        edad: \"15\",\n        direccion: \"Cochabamba\",\n        padres_responsables: \"padres\",\n        dni: `${cryptoRandomString({ length: 8, type: 'url-safe' })}`,\n        email: `${cryptoRandomString({ length: 8, type: 'distinguishable' })}@gmail.com`,\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        id_institucion: \"1\"\n\n    });\n\n    const { nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, id_institucion, password2 } = formRegisterValues;\n\n    const handleRegisterUser = (e) => {\n        e.preventDefault();\n\n        dispatch(startRegister(nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, password2, id_institucion));\n    }\n\n    useEffect(() => {\n\n        if (password.trim() === '' || password2.trim() === '' || username.trim() === '') {\n            return dispatch(uiTrueDisabledButton());\n        }\n        else if (password.trim().length <= 5 || password2.trim().length <= 5) {\n            return dispatch(uiTrueDisabledButton());\n        }\n        dispatch(uiFalseDisabledButton());\n\n    }, [password, password2, username, dispatch]);\n\n\n\n    return (\n        <div className=\"container\">\n            <form className=\"form-signin\" onSubmit={handleRegisterUser}>\n                <h2 className=\"form-signin-heading\">Crear Cuenta</h2>\n\n                <div className=\"login-wrap\">\n\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        className=\"form-control\"\n                        placeholder=\"User Name\"\n                        value={username}\n                        onChange={handleRegisterInputChange}\n\n                    />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Contraseña\"\n                        value={password}\n                        onChange={handleRegisterInputChange}\n                    />\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Confirmar Contraseña\"\n                        name=\"password2\"\n                        value={password2}\n                        onChange={handleRegisterInputChange}\n                    />\n\n                    <button className=\"btn btn-lg btn-login btn-block\" type=\"submit\" disabled={uiDisabled} >\n                        <i _ngcontent-kod-c28=\"\" className={uiLoadingButton}></i> Crear Cuenta\n                    </button>\n\n                    <div className=\"registration\">\n                        ¿Ya tienes una cuenta?\n                        <Link to=\"/auth/login\" >  Login\n                        </Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../../components/auth/LoginScreen';\nimport { RegisterScreen } from '../../components/auth/RegisterScreen';\n\n\nexport const AuthRouter = () => {\n\n    document.body.style.backgroundColor = \"#32323A\";\n\n    return (\n        <div>\n            <Switch>\n                    <Route\n                        exact\n                        path=\"/auth/login\"\n                        component= { LoginScreen }\n                    />\n                    <Route\n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" /> \n\n                </Switch>\n        </div>\n      \n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props)=>(\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n        component={ ( props )=>(\n            (isAuthenticated)\n            ? ( <Redirect to=\"/user\"/> )\n            : ( <Component { ...props } /> )\n\n        )}\n    />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterInstitution = ( name, address, phone, emei, nit, contact_name, mobile ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'institutos/new',{ \n                nombre:name, \n                direccion:address, \n                celular:mobile, \n                telefono:phone, \n                imei:emei, \n                nit:nit, \n                nombre_contacto:contact_name \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Institución registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const institutionSetActive = ( institutions, id ) => ({ \n    type:types.institutionSetActive,\n    payload: { institutions, id }\n});\n\nexport const updatedInstitution = ( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'institutos/update', { \n                nombre:name,\n                direccion:address,\n                celular:mobile,\n                telefono:phone,\n                imei:emei,\n                nit:newNit,\n                nombre_contacto:contact_name,\n                id_institucion:id_institucion\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Institución actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const institutionSetActiveClear = () => ({\n    type:types.institutionSetActiveClear\n});\n\n\nexport const institutionLoaded = ( institutions ) => ({\n    type: types.institutionLoaded,\n    payload: institutions \n});\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { institutionLoaded, institutionSetActive } from '../actions/institution';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport const useFetchInstituions = () => {\n\n    const dispatch = useDispatch();\n    const [uiDisabled, setUiDisabled] = useState(false)\n    const history = useHistory();\n\n    const [institutions, setInstitutions] = useState({\n        data_institutions: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchInstitution = () => {\n\n            fetchConToken('institutos/inst', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.instituciones.forEach(item => rows.push({\n                        id_institucion: item.id_institucion,\n                        nombre: item.nombre,\n                        direccion: item.direccion,\n                        celular: item.celular,\n                        telefono: item.telefono,\n                        imei: item.imei,\n                        nit: item.nit,\n                        nombre_contacto: item.nombre_contacto,\n                        modified: <button className=\"btn btn-primary\" id={item.id_institucion} onClick={(e) => {\n                            // It's a little more understandable\n                            return (\n                                dispatch(institutionLoaded(json.instituciones)),\n                                dispatch(institutionSetActive(json.instituciones, e.target.id)),\n                                history.push('/institution/update')\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_institucion}\n                            onClick={(e) => {\n                                return (\n                                    institutionDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n                    setInstitutions({ data_institutions: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const institutionDelete = (id_institucion) => {\n\n            handleSwitchChange();\n\n            fetchConToken('institutos/delete', {\n                id_institucion\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Institución Eliminada', 'success');\n                        fetchInstitution();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n        fetchInstitution();\n\n        // Clear useEffect\n        return () => {\n            setInstitutions({ data_institutions: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return institutions;\n\n}","import React, { useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetchInstituions } from '../../hooks/useFetchInstitutions';\nimport { useDispatch } from 'react-redux';\nimport { institutionSetActiveClear } from '../../actions/institution';\n\nexport const InstitutionScreen = () => {\n\n  const dispatch = useDispatch();\n  // Rename the name\n  const { data_institutions: institutions } = useFetchInstituions();\n\n  const data = {\n    columns: [\n      {\n        label: 'Nombre',\n        field: 'nombre',\n        sort: 'asc',\n        width: 200,\n      },\n      {\n        label: 'Direccion',\n        field: 'direccion',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Nit',\n        field: 'nit',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Telefono',\n        field: 'telefono',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Celular',\n        field: 'celular',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Imei',\n        field: 'imei',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Nombre de Contacto',\n        field: 'nombre_contacto',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Modificar',\n        field: 'modified',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Eliminar',\n        field: 'deleted',\n        sort: 'asc',\n        width: 200\n      },\n    ],\n    rows: institutions\n  };\n\n  useEffect(() => {\n\n    dispatch(institutionSetActiveClear());\n\n  }, [dispatch]);\n\n  return (\n\n    <div className=\"col-lg-12 animated fadeIn\">\n      <section className=\"panel\">\n        <header className=\"panel-heading\">\n          Institutos\n        </header>\n        {\n          (data.rows.length !== [])\n            ?\n            <div className=\"panel-body\">\n              <MDBDataTable\n                noRecordsFoundLabel=\"Cargando...\"\n                scrollX\n                autoWidth={true}\n                maxHeight=\"40vh\"\n                striped\n                bordered\n                small\n                data={data}\n              />\n            </div>\n            :\n            <div className=\"panel-body\">\n              <div>Aún no se registro ningun dato</div>\n            </div>\n        }\n      </section>\n    </div>\n  )\n}\n","\nimport { useState } from \"react\"\n\nexport const useFormPhone = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = (  value  ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n        setValues({\n            ...values,\n           mobile : value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react'\nimport InputMask from 'react-input-mask';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { institutionSetActiveClear, startRegisterInstitution } from '../../actions/institution';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\n\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n\n    const [formInstitutionValues, handleInstitutionInputChange] = useForm({\n        name: '',\n        address: '',\n        phone: '',\n        emei: '',\n        nit: '',\n        contact_name: ''\n    });\n    const [formInstitutionPhoneValues, handleInstitutionPhoneInputChange] = useFormPhone({\n        mobile: '',\n    });\n\n    const { name, address, phone, emei, nit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        dispatch(startRegisterInstitution(name, address, phone, emei, nit, contact_name, mobile));\n    }\n\n    useEffect(() => {\n\n        dispatch(institutionSetActiveClear());\n\n        if (name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [address, phone, emei, nit, contact_name, mobile, name, dispatch]);\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    REGISTRAR INSTITUCIÓN\n                </header>\n                <div className=\"panel-body\">\n                    <div className=\"position-center\">\n                        <form autoComplete=\"off\" onSubmit={handleRegister} >\n                            <div className=\"form-group\">\n                                <label>Nombre</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    placeholder=\"Ingrese nombre\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Dirección</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"address\"\n                                    placeholder=\"Ingrese dirección\"\n                                    name=\"address\"\n                                    value={address}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Celular</label>\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: mobile,\n                                        required: true,\n                                        autoFocus: true\n                                    }}\n                                    dropdownClass=\"col-lg-3\"\n                                    inputStyle={{ width: \"100%\" }}\n                                    placeholder=\"Enter phone number\"\n                                    value={mobile}\n                                    onChange={handleInstitutionPhoneInputChange}\n                                    country=\"bo\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Telefono</label>\n                                <InputMask\n                                    placeholder=\"Ingrese telefono\"\n                                    className=\"form-control\"\n                                    mask=\"999-99-999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    name=\"phone\"\n                                    id=\"phone\"\n                                    value={phone}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Imei</label>\n                                <InputMask\n                                    className=\"form-control\"\n                                    mask=\"999999999999999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    placeholder=\"Ingrese imei\"\n                                    id=\"emei\"\n                                    name=\"emei\"\n                                    value={emei}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nit</label>\n                                <InputMask\n                                    className=\"form-control\"\n                                    mask=\"9999999999999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    id=\"nit\"\n                                    placeholder=\"Ingrese Nit\"\n                                    name=\"nit\"\n                                    value={nit}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nombre de Contacto</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"contact_name\"\n                                    placeholder=\"Ingrese nombre de contacto\"\n                                    name=\"contact_name\"\n                                    value={contact_name}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-info\" disabled={uiDisabled} >\n                                <i className={uiLoadingSaveButton} /> Registrar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport PhoneInput from 'react-phone-input-2';\nimport InputMask from 'react-input-mask';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { updatedInstitution } from '../../actions/institution';\n\nexport const FormUpdate = ( { data = '' } ) => {\n\n    const dispatch = useDispatch();\n\n    const  { nombre = '', celular = '', direccion = '', telefono = '', imei = '', nit = '', nombre_contacto = '', id_institucion = '' } = data;\n\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n    \n    const [ formInstitutionValues, handleInstitutionInputChange ] = useForm({ \n        name: nombre,\n        address: direccion,\n        phone: telefono,\n        emei: imei,\n        newNit: nit,\n        contact_name: nombre_contacto\n    });\n    \n    const [ formInstitutionPhoneValues, handleInstitutionPhoneInputChange ] = useFormPhone({ \n        mobile: celular ,\n    });\n    \n    const { name, address, phone, emei, newNit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleUpdated = (e) => {\n        e.preventDefault();\n        dispatch( updatedInstitution( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) );\n    }\n\n    useEffect(() => {\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiTrueDisabledButton() )\n            )\n\n        }\n        dispatch( uiFalseDisabledButton() );\n       \n        \n    }, [ address ,phone ,emei ,newNit ,contact_name ,mobile ,name, dispatch ]);\n\n    return (\n        <div className=\"panel-body\">\n            <div className=\"position-center\">\n                <form autoComplete=\"off\" onSubmit={ handleUpdated } >\n                    <div className=\"form-group\">\n                        <label>Nombre</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name\" \n                            placeholder=\"Ingrese nombre\"  \n                            name=\"name\" \n                            value={ name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Dirección</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"address\" \n                            placeholder=\"Ingrese dirección\"  \n                            name=\"address\" \n                            value={ address } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Celular</label>\n                        <PhoneInput\n                            inputExtraProps={{\n                                name: \"444\",\n                                required: true,\n                                autoFocus: true\n                            }}\n                            dropdownClass=\"col-lg-3\"\n                            inputStyle={{ width:\"100%\" }}\n                            placeholder=\"Enter phone number\"\n                            value={ mobile }\n                            onChange={ handleInstitutionPhoneInputChange }\n                            country=\"bo\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Telefono</label>\n                    <InputMask \n                            placeholder=\"Ingrese telefono\"\n                            className=\"form-control\" \n                            mask=\"999-99-999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            name=\"phone\"\n                            id=\"phone\" \n                            value={ phone } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Imei</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"999999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            placeholder=\"Ingrese imei\"  \n                            id=\"emei\" \n                            name=\"emei\" \n                            value={ emei } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nit</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"9999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            id=\"newNit\" \n                            placeholder=\"Ingrese Nit\"  \n                            name=\"newNit\" \n                            value={ newNit } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nombre de Contacto</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"contact_name\" \n                            placeholder=\"Ingrese nombre de contacto\"  \n                            name=\"contact_name\" \n                            value={ contact_name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info\" \n                    disabled={ uiDisabled } \n                    > \n                        <i \n                        className={ uiLoadingSaveButton } \n                        /> Modificar\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormUpdate } from './FormUpdate';\n\nexport const UpdateScreen = () => {\n\n    const { activeInstitution } = useSelector(state => state.institution);\n    const history  = useHistory();\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    MODIFICAR INSTITUCIÓN\n                </header>\n                {\n                    (activeInstitution !== null)\n                    ?\n                        [activeInstitution].map(( e, i ) => (\n                            <FormUpdate key={ i } data={ e }  />\n                        ))\n                    :\n                        history.push('/institution/view')\n                }\n            </section>\n        </div>   \n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { InstitutionScreen } from '../../components/institution/InstitutionScreen';\nimport { RegisterScreen } from '../../components/institution/RegisterScreen';\nimport { UpdateScreen } from '../../components/institution/UpdateScreen';\nimport { Layout } from '../../components/main/Layout';\n\nexport const InstitutionRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route \n                    exact\n                    path=\"/institution\"\n                    component={ RegisterScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/view\"\n                    component={ InstitutionScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/update\"\n                    component={ UpdateScreen }\n                />\n                <Redirect to=\"/institution\" />\n            </Switch>\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterScreen = () => {\n\n    return (\n        <React.Fragment>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>31</span>\n                            Cantidad de Pruebas simples\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={faThermometerThreeQuarters} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>60</span>\n                            Cantidad total de pruebas\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>29</span>\n                            Cantidad de Pruebas de formas\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" >\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faBong} />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <NavLink className=\"btn btn-primary btn-lg btn-block\"\n                        to=\"/test-simple/question\"\n                    >\n                        Seleccionar\n                    </NavLink>\n\n                    <div className=\"row\" style={{ paddingTop: \"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom: \"10px\" }} >\n                            <NavLink className=\"btn btn-success btn-lg btn-block\"\n                                to=\"/test-simple\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-danger btn-lg btn-block\"\n                                to=\"/test-simple/category\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                    <NavLink className=\"btn btn-info btn-lg btn-block\"\n                        to=\"/test-simple/tsimple\"\n                    >\n                        Prueba Simple\n                    </NavLink>\n                </div>\n\n\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faCubes} />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <NavLink className=\"btn btn-success btn-lg btn-block\"\n                        to=\"/test/register/shapes\"\n                    >\n                        Seleccionar\n                    </NavLink>\n\n                    <div className=\"row\" style={{ paddingTop: \"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom: \"10px\" }} >\n                            <NavLink className=\"btn btn-warning btn-lg btn-block\"\n                                to=\"/test/register/shapes/screen\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-info btn-lg btn-block\"\n                                to=\"/test-shape\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport const shapeStartLoading = () => {\n    return async ( dispatch ) => { \n       try {\n           \n           const resp = await fetchConToken('test-formas/tformas');\n           const body = await resp.json();\n\n           const { testFormas } =  body;\n\n           dispatch( shapeLoaded( testFormas ) );\n\n       } catch (error) {\n           console.log(error);\n       }\n    }\n}\n\nexport const shapeLoaded = ( shape ) => ({\n    type: types.shapeLoaded,\n    payload: shape \n});","import { keyframes, css } from 'styled-components'\nconst fadeInKeyFrames = keyframes`\n  from{\n    filter:blur(5px);\n    opacity:0;\n  }\n  to{\n    filter:blur(0);\n    opacity:1;\n  }\n`\nexport const fadeIn = ({ time = '1s', type = 'ease' } = {}) =>\n  css`animation:${time} ${fadeInKeyFrames} ${type};`","import styled from 'styled-components';\nimport { fadeIn } from '../../../../styles/animation';\n\nexport const Img = styled.img`\n  ${fadeIn({ time: '2.5s' })}\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`\nexport const ImgDefault = styled.img`\n  box-shadow:0 10px 14px rgba(0,0,0, .2);\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`;\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImage = ({ data, onImageUpdate, onImageRemove }) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n\n    return (\n        <React.Fragment>\n            {\n                data.map((image, index) => (\n                    <div key={index} className=\"col-sm-4 form-group text-center\"\n                        style={{ justifyContent: 'center' }}\n                    >\n                        <br />\n                        {\n                            (image.data_url !== undefined)\n                                ?\n                                <Img src={image['data_url']} alt=\"images-shapes\" className=\"img-rounded\" />\n                                :\n                                <ImgDefault src={DEFAULT_IMAGE} alt=\"images-shapes\" className=\"img-rounded\" />\n                        }\n                        <br />\n                        <div className=\"image-item__btn-wrapper\">\n                            <br />\n                            <button className=\"btn btn-info\" style={{ marginRight: 5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight: 5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImageOne = ({ data, onImageUpdate, onImageRemove }) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n\n    return (\n        <React.Fragment>\n            {\n                data.map((image, index) => (\n                    <div key={index}\n                        style={{ justifyContent: 'center', alignItems: 'center' }}\n                    >\n                        <br />\n                        {\n                            (image.data_url !== '')\n                                ?\n                                <Img src={image['data_url']} alt=\"images-shapes\" className=\"img-rounded\" />\n                                :\n                                <ImgDefault src={DEFAULT_IMAGE} alt=\"images-shapes\" className=\"img-rounded\" />\n                        }\n                        <br />\n                        <div className=\"image-item__btn-wrapper\">\n                            <br />\n                            <button className=\"btn btn-info\" style={{ marginRight: 5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight: 5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport ImageUploading from \"react-images-uploading\";\nimport { shapeEdit, shapeRegister } from \"../../../actions/questionShape\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  uiFalseDisabledButton,\n  uiTrueDisabledButton,\n} from \"../../../actions/ui\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { GetImage } from \"./GetImage\";\nimport { GetImageOne } from \"./GetImageOne\";\nimport Swal from \"sweetalert2\";\n\nexport const Form = ({\n  id_pregunta = \"\",\n  nombre = \"\",\n  id_test = \"\",\n  respuesta_correcta = \"\",\n  questionImage,\n  optionsImage,\n}) => {\n  const dispatch = useDispatch();\n\n  const { shape } = useSelector((state) => state.shape);\n\n  const [dataQuestionShape, setDataQuestionShape] = useState([]);\n\n  const { uiLoadingSaveButton, uiDisabled } = useSelector((state) => state.ui);\n\n  const [formShapeInputValues, handleShapeInputValueChange] = useForm({\n    name: nombre,\n    respCorrect: respuesta_correcta,\n    testShape: id_test,\n  });\n\n  const { name, testShape, respCorrect } = formShapeInputValues;\n\n  const [imagesQuestion, setImagesQuestion] = useState([]);\n\n  const maxNumberQuestion = 1;\n  const maxNumber = 6;\n\n  const onChangeQuestion = (imageList) => {\n    setImagesQuestion(imageList);\n  };\n\n  const [images, setImages] = useState([]);\n\n  const onChange = (imageList) => {\n    setImages(imageList);\n  };\n\n  const handleRegisterTestShape = (e) => {\n    e.preventDefault();\n\n    if (respCorrect === \"\" || testShape === \"\") {\n      Swal.fire(\n        \"Error\",\n        \"Debe de seleccionar una respuesta y una prueba forma\",\n        \"error\"\n      );\n    } else if (nombre !== \"\") {\n      dispatch(\n        shapeEdit(\n          id_pregunta,\n          imagesQuestion[0].data_url,\n          images[0].data_url,\n          images[1].data_url,\n          images[2].data_url,\n          images[3].data_url,\n          images[4].data_url,\n          images[5].data_url,\n          respCorrect,\n          name,\n          testShape\n        )\n      );\n    } else {\n      dispatch(\n        shapeRegister(\n          imagesQuestion[0].data_url,\n          images[0].data_url,\n          images[1].data_url,\n          images[2].data_url,\n          images[3].data_url,\n          images[4].data_url,\n          images[5].data_url,\n          respCorrect,\n          name,\n          testShape\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      imagesQuestion.length !== 1 ||\n      images.length !== 6 ||\n      name === undefined ||\n      \"\" ||\n      0\n    ) {\n      return dispatch(uiTrueDisabledButton());\n    }\n    dispatch(uiFalseDisabledButton());\n  }, [imagesQuestion, images, name, dispatch]);\n\n  useEffect(() => {\n    if (nombre !== \"\" || undefined || null) {\n      setImagesQuestion(questionImage);\n      setImages(optionsImage);\n    }\n  }, [questionImage, optionsImage, nombre]);\n\n  useEffect(() => {\n    setDataQuestionShape(\n      shape.filter((e) => e.id_test.toString() === testShape.toString())\n    );\n  }, [testShape, shape]);\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"form-group alert alert-info\"\n        style={{ paddingLeft: \"25%\", paddingRight: \"25%\" }}\n      >\n        <div className=\"col-xs-14 text-center\">\n          <label>\n            <h3>Nombre</h3>\n          </label>\n          <input\n            className=\"text-center form-control round-input input-medium default-date-picker\"\n            placeholder=\"Ingrese Nombre\"\n            autoComplete=\"off\"\n            size=\"16\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleShapeInputValueChange}\n          />\n        </div>\n      </div>\n      <div className=\"form-group text-center alert alert-success\">\n        <label>\n          <h3>Pregunta</h3>\n        </label>\n        <ImageUploading\n          multiple\n          value={imagesQuestion}\n          onChange={onChangeQuestion}\n          maxNumber={maxNumberQuestion}\n          dataURLKey=\"data_url\"\n        >\n          {({\n            onImageUpload,\n            onImageRemoveAll,\n            onImageUpdate,\n            onImageRemove,\n          }) => (\n            <div className=\"upload__image-wrapper\">\n              <button\n                className=\"btn btn-round btn-success\"\n                style={{ marginRight: 5 }}\n                onClick={onImageUpload}\n              >\n                Subir Imagen\n              </button>\n              <button\n                className=\"btn btn-round btn-warning\"\n                style={{ marginRight: 5 }}\n                onClick={onImageRemoveAll}\n              >\n                Eliminar Todo\n              </button>\n              <div className=\"row\">\n                <GetImageOne\n                  data={imagesQuestion}\n                  onImageUpdate={onImageUpdate}\n                  onImageRemove={onImageRemove}\n                />\n              </div>\n            </div>\n          )}\n        </ImageUploading>\n      </div>\n      <div className=\"form-group text-center alert alert-warning\">\n        <label>\n          <h3>Opciones</h3>\n        </label>\n        <ImageUploading\n          multiple\n          value={images}\n          onChange={onChange}\n          maxNumber={maxNumber}\n          dataURLKey=\"data_url\"\n        >\n          {({\n            onImageUpload,\n            onImageRemoveAll,\n            onImageUpdate,\n            onImageRemove,\n          }) => (\n            <div className=\"upload__image-wrapper\">\n              <button\n                className=\"btn btn-round btn-success\"\n                style={{ marginRight: 5 }}\n                onClick={onImageUpload}\n              >\n                Subir Imagen\n              </button>\n              <button\n                className=\"btn btn-round btn-warning\"\n                style={{ marginRight: 5 }}\n                onClick={onImageRemoveAll}\n              >\n                Eliminar Todo\n              </button>\n              <div className=\"row\">\n                <GetImage\n                  data={images}\n                  onImageUpdate={onImageUpdate}\n                  onImageRemove={onImageRemove}\n                />\n              </div>\n            </div>\n          )}\n        </ImageUploading>\n      </div>\n      <div className=\"form-group text-center alert\">\n        <label>\n          <h3>Respuesta Correcta</h3>\n        </label>\n        <div className=\"form-group\">\n          <label className=\"col-sm-3 control-label\"></label>\n          <div className=\"col-sm-7\">\n            <p>Respuesta seleccionada : `{respCorrect}`</p>\n            <select\n              formcontrolname=\"curso\"\n              name=\"respCorrect\"\n              onChange={handleShapeInputValueChange}\n              className=\"form-control ng-valid ng-dirty ng-touched\"\n              value={respCorrect}\n            >\n              {images.map((e, i) => (\n                <option name=\"respCorrect\" key={i} value={i + 1}>\n                  {\" \"}\n                  Imagen {i + 1}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group text-center alert\">\n        <label>\n          <h3>Prueba Forma</h3>\n        </label>\n        <div className=\"form-group\">\n          <label className=\"col-sm-3 control-label\"></label>\n          <div className=\"col-sm-7\">\n            <p>\n              Forma seleccionada : `{dataQuestionShape.map((e) => e.nombre)}`\n            </p>\n            <select\n              formcontrolname=\"curso\"\n              name=\"testShape\"\n              onChange={handleShapeInputValueChange}\n              className=\"form-control ng-valid ng-dirty ng-touched\"\n              value={testShape}\n            >\n              {shape.map((e, i) => (\n                <option key={i} value={e.id_test}>\n                  {\" \"}\n                  {e.nombre}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"panel-body\">\n        <hr />\n        <button\n          type=\"submit\"\n          onClick={handleRegisterTestShape}\n          disabled={uiDisabled}\n          className=\"btn btn-primary btn-lg btn-block\"\n        >\n          <i className={uiLoadingSaveButton}></i>\n          {id_test === \"\" ? \" Registrar\" : \" Modificar\"}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shapeStartLoading } from \"../../../actions/shape\";\nimport { useFetchQuestionShapeOne } from \"../../../hooks/QuestionShape/useFetchQuestionShapeOne\";\nimport { useFetchDestructureValue } from \"../../../hooks/QuestionShape/useFetchDestructureValue\";\nimport { useFetchOptionsDestructure } from \"../../../hooks/QuestionShape/useFetchOptionsDestructure\";\nimport { Form } from \"./Form\";\n\nexport const FormQuestionShape = ({\n  id_pregunta = \"\",\n  nombre = \"\",\n  id_test = \"\",\n  respuesta_correcta = \"\",\n}) => {\n  const dispatch = useDispatch();\n\n  const { data_questions_shape } = useFetchQuestionShapeOne(id_pregunta);\n\n  const [question, setQuestion] = useState([]);\n\n  const { pregunta, op1, op2, op3, op4, op5, op6 } = question;\n\n  const [questionsImage, setQuestionsImage] = useState([]);\n\n  const [imageOptions, setImageOptions] = useState([]);\n\n  const DestructureValue = (data_questions_shape) => {\n    setQuestion(data_questions_shape);\n  };\n  useEffect(() => {\n    DestructureValue(data_questions_shape);\n  }, [data_questions_shape]);\n\n  const { image } = useFetchDestructureValue(pregunta);\n\n  const { option1, option2, option3, option4, option5, option6 } =\n    useFetchOptionsDestructure(op1, op2, op3, op4, op5, op6);\n\n  useEffect(() => {\n    dispatch(shapeStartLoading());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (\n      image !== \"\" ||\n      option1 !== \"\" ||\n      option2 !== \"\" ||\n      option3 !== \"\" ||\n      option4 !== \"\" ||\n      option5 !== \"\" ||\n      option6 !== \"\"\n    ) {\n      const options = [\n        {\n          data_url: option1,\n        },\n        {\n          data_url: option2,\n        },\n        {\n          data_url: option3,\n        },\n        {\n          data_url: option4,\n        },\n        {\n          data_url: option5,\n        },\n        {\n          data_url: option6,\n        },\n      ];\n      setQuestionsImage([{ data_url: image }]);\n      setImageOptions(options);\n    }\n  }, [image, option1, option2, option3, option4, option5, option6]);\n\n  return (\n    <div className=\"panel-body row align-items-end\">\n      <Form\n        id_pregunta={id_pregunta}\n        questionImage={questionsImage}\n        optionsImage={imageOptions}\n        nombre={nombre}\n        id_test={id_test}\n        respuesta_correcta={respuesta_correcta}\n      />\n    </div>\n  );\n};\n","\nimport { useEffect, useState } from 'react'\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchQuestionShapeOne = ( id_pregunta ) => {\n\n    const [ questionsShape, setQuestionsShape ] = useState({\n        data_questions_shape:[]\n    });\n\n    useEffect(() => {\n        testShapeLoading( id_pregunta );\n\n        return (()=>{\n            setQuestionsShape({ data_questions_shape:[] })\n        })\n\n    }, [ id_pregunta ])\n\n    const testShapeLoading = async ( id_pregunta ) => {\n\n        const resp = await fetchConToken('pregunta-formas/pforma', { id_pregunta },'POST');\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { preguntaFormas } = body;\n                setQuestionsShape({\n                    data_questions_shape:preguntaFormas\n                });\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return questionsShape;\n\n}","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { questionClearShape } from \"../../../actions/questionShape\";\nimport { FormQuestionShape } from \"./FormQuestionShape\";\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(questionClearShape());\n  }, [dispatch]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-12  animated fadeIn\">\n        <section className=\"panel\">\n          <header className=\"panel-heading\">REGISTRO DE PRUEBAS FORMAS</header>\n          <FormQuestionShape />\n        </section>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\n\n\nexport default function useNearScreen({ distance = '100px', externalRef, once = true } = {}) {\n  const [isNearScreen, setShow] = useState(false);\n  const fromRef = useRef()\n\n  useEffect(() => {\n    let observer\n\n    const element = externalRef ? externalRef.current : fromRef.current\n\n    const onChange = (entries, observer) => {\n      const el = entries[0]\n      if (el.isIntersecting) {\n        setShow(true)\n        once && observer.disconnect()\n      } else {\n        !once && setShow(false)\n      }\n    }\n\n    Promise.resolve(\n      IntersectionObserver\n\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance\n      })\n\n      if (element) observer.observe(element)\n    })\n\n    return () => observer && observer.disconnect()\n  })\n\n  return { isNearScreen, fromRef }\n}","import React, { useEffect, useState } from 'react'\nimport { TestShapeCard } from './TestShapeCard';\n\nexport const TestBodyProfile = ({ options }) => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n\n        setData(options);\n\n    }, [options]);\n\n    return (\n        <React.Fragment>\n            {\n                (data !== [])\n                &&\n                data.map((question, key) => (\n                    <TestShapeCard\n                        key={key}\n                        questionData={question}\n                        option={data}\n                    />\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionShape } from '../../../hooks/QuestionShape/useFetchQuestionShape';\nimport useNearScreen from '../../../hooks/useNeerScreen';\nimport { TestBodyProfile } from './ProfileShape/TestBodyProfile';\nimport './styles.css';\n\nexport const ShapeScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, questionsShape, setSkip } = useFetchQuestionShape();\n\n    const { isNearScreen } = useNearScreen({\n        externalRef: loading ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPage = useCallback(debounce(\n        () => setSkip(preveSkip => preveSkip + 1), 200\n    ), [setSkip]);\n\n    useEffect(() => {\n        if (isNearScreen) debounceHandleNextPage()\n    }, [isNearScreen, debounceHandleNextPage]);\n\n    return (\n        <React.Fragment>\n            <div className=\"animated fadeIn\">\n                <div className=\"profile-nav alt\">\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            ADMINISTRACION DE PREGUNTAS FORMAS\n                        </header>\n                        {\n                            (questionsShape !== []) ?\n                                <TestBodyProfile options={questionsShape} />\n                                :\n                                <div className='panel-body'>\n                                    Cargando ...\n                                </div>\n                        }\n                    </section>\n                </div>\n            </div>\n            <div id=\"visor\" ref={externalRef}></div>\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionShape = () => {\n\n    const [loading, setLoading] = useState(false);\n\n    const [skip, setSkip] = useState(INITIAL_LIMIT);\n\n    const [questionsShape, setQuestionsShape] = useState([]);\n\n    useEffect(() => {\n\n        if (skip === INITIAL_LIMIT) {\n            testShapeLoading(INITIAL_LIMIT)\n        } else {\n            testShapeLoading(skip);\n        }\n    }, [skip]);\n\n    useEffect(() => {\n\n        return () => {\n            setQuestionsShape([])\n        }\n    }, []);\n\n    const testShapeLoading = async (skip) => {\n\n        setLoading(true);\n        const resp = await fetchConToken(`pregunta-formas/pformas?limit=1&skip=${skip}`);\n        const body = await resp.json();\n\n        try {\n\n            if (body.ok) {\n\n                const { preguntaFormas } = body;\n\n                setQuestionsShape((questionsShape) => questionsShape.concat(preguntaFormas));\n                setLoading(false);\n\n            }\n            else {\n                Swal.fire(':(', body.msg, 'error');\n                setLoading(false);\n\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n\n    }\n    return { loading, questionsShape, setSkip };\n\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionShape } from './FormQuestionShape';\n\nexport const UpdatedScreen = () => {\n\n    const { question, nombre, id_test, id_resp } = useSelector(state => state.questionShape.questionActive);\n\n    const history = useHistory();\n\n    const ChangeLocation = (e) => {\n        e.preventDefault();\n        history.push('/test/register/shapes/screen');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBAS FORMAS\n                    </header>\n                    {\n                        (question !== null)\n                            ?\n                            <FormQuestionShape\n                                id_pregunta={question}\n                                nombre={nombre}\n                                id_test={id_test}\n                                respuesta_correcta={id_resp}\n\n                            />\n                            :\n                            <div className=\"panel-body row align-items-end\">\n                                <div className=\"col-sm-12\">\n                                    <div className=\"text-center\">\n                                        <br />\n                                        <button onClick={ChangeLocation} className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                    </div>\n                                </div>\n                            </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { RegisterScreen } from '../../components/test/RegisterScreen';\nimport { Register } from '../../components/test/shapes/Register';\nimport { ShapeScreen } from '../../components/test/shapes/ShapeScreen';\nimport { UpdatedScreen } from '../../components/test/shapes/UpdatedScreen';\n\nexport const TestsRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test/register\"\n                    component={RegisterScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes\"\n                    component={Register}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes/screen\"\n                    component={ShapeScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/updated/shapes\"\n                    component={UpdatedScreen}\n                />\n                <Redirect to=\"/test/register\" />\n            </Switch>\n        </Layout>\n\n    )\n}\n","// localhost:4000/api/test-formas//tformas/answers\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../helpers/fetch\";\n\nexport const useFetchQuestionShapeFindAll = (\n  shape,\n  INITIAL_LIMIT,\n  setLimit\n) => {\n  const history = useHistory();\n  const [questionsShape, setQuestionsShape] = useState([]);\n\n  useEffect(() => {\n    return () => {\n      setQuestionsShape([]);\n    };\n  }, []);\n\n  const testShapeLoading = async (id_test, skip) => {\n    if (skip === -1) {\n      setLimit(0);\n    } else {\n      const resp = await fetchConToken(\n        `test-formas/tformas/answers`,\n        {\n          limit: 1,\n          skip: skip,\n          id_test,\n        },\n        \"POST\"\n      );\n\n      const body = await resp.json();\n\n      try {\n        if (body.ok) {\n          const { preguntaFormas } = body;\n\n          return setQuestionsShape(preguntaFormas);\n        } else {\n          Swal.fire(\":(\", body.msg, \"error\");\n          history.push(\"/answers/shape\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return testShapeLoading(shape, INITIAL_LIMIT);\n  }, [shape, INITIAL_LIMIT, setLimit]);\n\n  return { questionsShape };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { answersShapeRegister } from \"../../../actions/answersShape\";\nimport useFetchImage from \"../../../hooks/QuestionShape/useFetchImage\";\nimport { useFetchQuestionShapeFindAll } from \"../../../hooks/QuestionShape/useFetchQuestionShapeFindAll\";\nimport Image from \"../../../utils/Image\";\n\nexport const ShapeScreenQuestion = () => {\n  const INITIAL_LIMIT = 0;\n  const VALUEDEFAULT = [];\n\n  const dispatch = useDispatch();\n\n  const { shape } = useSelector((state) => state.answerShape);\n\n  const { uid } = useSelector((state) => state.auth);\n\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\n\n  const { questionsShape } = useFetchQuestionShapeFindAll(\n    shape,\n    limit,\n    setLimit\n  );\n\n  const [disabledFinish, setDisabledFinish] = useState(false);\n\n  const [disabledStart, setDisabledStart] = useState(false);\n\n  const data = useFetchImage({ data: questionsShape });\n\n  const { question, options } = data;\n\n  const [limitAnswers, setLimitAnswers] = useState(0);\n\n  const [answersShape, setAnswersShape] = useState({\n    data: VALUEDEFAULT,\n  });\n\n  const handleNextQuestion = () => {\n    setLimit(limit + 1);\n    setLimitAnswers(limitAnswers + 1);\n  };\n  const handlePrevQuestion = () => {\n    setLimit(limit - 1);\n    setLimitAnswers(limitAnswers - 1);\n  };\n\n  const handleSelect = (e) => {\n    handleOfChangeTheValue(e.target.id);\n  };\n\n  useEffect(() => {\n    if (limit === 0) {\n      return setDisabledStart(true), setDisabledFinish(false);\n    } else if (questionsShape.length === 0) {\n      return setDisabledFinish(true), setDisabledStart(false);\n    }\n    return setDisabledFinish(false), setDisabledStart(false);\n  }, [questionsShape, limit]);\n\n  const handleOfChangeTheValue = (questionCorrect) => {\n    const answersData = answersShape.data;\n\n    const index = answersData.findIndex(\n      (answers) => answers.id === questionsShape[0].id_pregunta\n    );\n\n    const respuesta_correcta = questionsShape[0].respuesta_correcta;\n\n    if (questionCorrect !== null) {\n      return filterDataAnswers(index, respuesta_correcta, questionCorrect);\n    } else {\n      return filterDataAnswers(index, respuesta_correcta, questionCorrect);\n    }\n  };\n\n  const filterDataAnswers = (index, respuesta_correcta, questionCorrect) => {\n    if (respuesta_correcta !== null && questionCorrect !== null) {\n      if (respuesta_correcta.toString() === questionCorrect.toString()) {\n        correctAnswer(index, 1, respuesta_correcta, questionCorrect);\n      } else {\n        correctAnswer(index, 0, respuesta_correcta, questionCorrect);\n      }\n    } else {\n      if (respuesta_correcta === null || undefined || \"\") {\n        correctAnswer(index, 0, 1, 0);\n      } else if (questionCorrect === null || undefined || \"\") {\n        correctAnswer(index, 0, respuesta_correcta, 0);\n      }\n    }\n  };\n\n  const correctAnswer = (index, value, respuesta_correcta, questionCorrect) => {\n    if (index.toString() === \"-1\") {\n      if (respuesta_correcta.toString() === questionCorrect.toString()) {\n        const { data } = answersShape;\n\n        const newData = [\n          ...data,\n          {\n            id: questionsShape[0].id_pregunta,\n            bien_mal: value,\n          },\n        ];\n        setAnswersShape({ data: newData });\n      } else {\n        const { data } = answersShape;\n\n        const newData = [\n          ...data,\n          {\n            id: questionsShape[0].id_pregunta,\n            bien_mal: value,\n          },\n        ];\n        setAnswersShape({ data: newData });\n      }\n    } else {\n      const { data } = answersShape;\n\n      const dataFilter = data.map(function (dato) {\n        if (dato.id === questionsShape[0].id_pregunta) {\n          dato.bien_mal = value;\n        }\n\n        return dato;\n      });\n\n      setAnswersShape({ data: dataFilter });\n    }\n  };\n\n  // handleOfChangeTheValue(null);\n\n  const handleAnswersShapeRegister = () => {\n    dispatch(answersShapeRegister(uid, answersShape.data));\n  };\n\n  return (\n    <React.Fragment>\n      {questionsShape.length !== 1 && disabledFinish === true ? (\n        <div className=\"row animated fadeIn\">\n          <br />\n          <div className=\"col-sm-6\">\n            <button\n              className=\"btn btn-success btn-lg btn-block\"\n              onClick={handlePrevQuestion}\n            >\n              Atrás\n            </button>\n          </div>\n\n          <div className=\"col-sm-6\">\n            <button\n              className=\"btn btn-primary btn-lg btn-block\"\n              onClick={handleAnswersShapeRegister}\n            >\n              Enviar respuestas\n            </button>\n          </div>\n        </div>\n      ) : (\n        <section className=\"panel\">\n          <header className=\"panel-heading\">PRUEBAS FORMAS</header>\n\n          {questionsShape.length !== 1 ? (\n            <div>\n              <div className=\"col-sm-6\">Cargando ...</div>\n            </div>\n          ) : (\n            <div className=\"panel-body\" style={{ textAlign: \"center\" }}>\n              <div className=\"row\">\n                <div className=\"col-sm-12\" style={{ paddingLeft: \"5%\" }}>\n                  <div className=\"row\">\n                    <div className=\"col-sm-4 form-group text-center\" />\n                    <div className=\"col-sm-4 form-group text-center\">\n                      <section className=\"panel\">\n                        <div\n                          id=\"gallery\"\n                          className=\"media-gal isotope\"\n                          style={{ textAlign: \"center\" }}\n                        >\n                          <div className=\"images item  isotope-item\">\n                            <Image src={question} />\n\n                            <h2>Pregunta</h2>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-12\" style={{ paddingLeft: \"5%\" }}>\n                  <div className=\"row\">\n                    {options !== [] ? (\n                      options.map((e, key) => (\n                        <div\n                          className=\"col-sm-4 form-group text-center\"\n                          key={key}\n                        >\n                          <section className=\"panel\">\n                            <div\n                              id=\"gallery\"\n                              className=\"media-gal isotope\"\n                              style={{ textAlign: \"center\" }}\n                            >\n                              <div className=\"images item  isotope-item\">\n                                <Image src={e} />\n                                <h2>Opción {key + 1}</h2>\n                                <button\n                                  className=\"btn btn-info\"\n                                  onClick={handleSelect}\n                                  id={key + 1}\n                                >\n                                  Seleccionar\n                                </button>\n                              </div>\n                            </div>\n                          </section>\n                        </div>\n                      ))\n                    ) : (\n                      <div>Cargando...</div>\n                    )}\n                  </div>\n                  <div className=\"d-grid gap-2\">\n                    <div className=\"col-sm-6\">\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={handlePrevQuestion}\n                        disabled={disabledStart}\n                      >\n                        Anterior\n                      </button>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <button\n                        className=\"btn btn-success\"\n                        onClick={handleNextQuestion}\n                        disabled={disabledFinish}\n                      >\n                        Siguiente\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n      )}\n    </React.Fragment>\n  );\n};\n","import { useMemo } from \"react\";\nimport { useConvertImage } from \"./useConvertImage\";\n\nexport default function useFetchImage(questions) {\n  const data = useMemo(() => destructuringQuestion(questions), [questions]);\n\n  const value = useConvertImage(data);\n\n  function destructuringQuestion(imagesToConvert) {\n    const { data } = imagesToConvert;\n\n    let dataToQuestions;\n\n    data.map((e) => {\n      return (dataToQuestions = e);\n    });\n\n    return dataToQuestions;\n  }\n\n  return value;\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestShape = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-formas/new',{ \n                nombre:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba forma registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testShapeSetActive = ( testShape, id ) => ({ \n    type:types.testShapeActive,\n    payload: { testShape, id }\n});\n\nexport const updatedTestShape = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-formas/update', { \n                nombre:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba forma actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestShapeSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestShapeSetActiveClear = () => ({\n    type:types.testShapeClear\n});\n\n\nexport const testShapeLoaded = ( testShape ) => ({\n    type: types.testShapeLoaded,\n    payload: testShape \n});\n","import Swal from 'sweetalert2';\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { testShapeLoaded, testShapeSetActive } from '../actions/testShape';\nimport { uiModalTrue } from '../actions/ui';\n\n\nexport const useFetcheTestShape = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_Tformas: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTFormas = () => {\n\n            fetchConToken('test-formas/tformas', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.testFormas.forEach(item => rows.push({\n                        id_test: item.id_test,\n                        nombre: item.nombre,\n                        modified: <button className=\"btn btn-primary\" id={item.id_test} onClick={(e) => {\n\n                            // It's a little more understandable\n                            return (\n                                dispatch(testShapeLoaded(json.testFormas)),\n                                dispatch(testShapeSetActive(json.testFormas, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_test}\n                            onClick={(e) => {\n                                return (\n                                    testShapeDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_Tformas: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testShapeDelete = (id_test) => {\n\n            handleSwitchChange();\n\n            fetchConToken('test-formas/delete', {\n                id_test\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Prueba forma Eliminada', 'success');\n                        fetchTFormas();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTFormas();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_Tformas: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestShape, TestShapeSetActiveClear, updatedTestShape } from '../../../actions/testShape';\nimport { uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../../actions/ui';\n\nexport const ModalRegister = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testShapeActive } = useSelector(state => state.tShape);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n    //TODO README \n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (testShapeActive) {\n\n            dispatch(updatedTestShape(nombre, id_test));\n            history.push('/test-shape');\n\n        } else {\n\n            dispatch(startRegisterTestShape(nombre));\n            history.push('/test-shape');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(TestShapeSetActiveClear());\n    }\n\n    useEffect(() => {\n        if (testShapeActive) {\n            setFormValues(testShapeActive);\n        }\n        else {\n            setFormValues({ nombre: '' });\n        }\n\n    }, [testShapeActive, setFormValues]);\n\n    useEffect(() => {\n\n\n        if (nombre.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [nombre, dispatch]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(testShapeActive) ? 'Editar Prueba Forma' : 'Registrar Prueba Forma'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre\"\n                                placeholder=\"Ingrese nombre\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (testShapeActive) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetcheTestShape } from '../../../hooks/useFetchTestShape';\nimport { ModalRegister } from './ModalRegister';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../actions/ui';\n\nexport const TestShapeScreen = () => {\n\n    const { data_Tformas: TestShape } =  useFetcheTestShape();\n    const dispatch = useDispatch();\n\n    const data = {\n        columns: [\n            {\n              label: 'Nombre',\n              field: 'nombre',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Modificar',\n              field: 'modified',\n              sort: 'asc',\n              width: 200\n            },\n            {\n              label: 'Eliminar',\n              field: 'deleted',\n              sort: 'asc',\n              width: 200\n            },\n        ],\n        rows: TestShape\n      };\n    const handleChangeModal = () =>{\n        dispatch( uiModalTrue() );\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Pruebas Formas\n                </header>\n                {\n                    (data.rows !== [])\n                    ?\n                    <div className=\"panel-body\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"text-right\" id=\"nestable_list_menu\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={ handleChangeModal }>Registrar</button>\n                        </div>\n                        <br/>\n                    </div>\n\n                        <MDBDataTable\n                            noRecordsFoundLabel=\"Cargando...\"\n                            scrollX\n                            autoWidth={true}\n                            maxHeight=\"40vh\"\n                            striped\n                            bordered\n                            small\n                            data={ data }\n                        />\n                    </div>\n                    :\n                    <div className=\"panel-body\">\n                        <div>Cargando...</div>\n                    </div>\n                }\n            </section>\n            <ModalRegister />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreenQuestion } from '../../components/answers/shapes/ShapeScreenQuestion';\nimport { Layout } from '../../components/main/Layout';\nimport { TestShapeScreen } from '../../components/test/test-shape/TestShapeScreen';\n\nexport const TestShapeRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-shape\"\n                    component={TestShapeScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-shape/questions\"\n                    component={ShapeScreenQuestion}\n                />\n                <Redirect to=\"/test-shape\" />\n            </Switch>\n        </Layout >\n    );\n\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterCategory = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'categoria/new',{ \n                nombre_categoria:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Categoria registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleCategoryActive = ( testSimpleCategory, id ) => ({ \n    type:types.testSimpleCategoryActive,\n    payload: { testSimpleCategory, id }\n});\n\nexport const updatedTestSimpleCategory = ( name, id  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'categoria/update', { \n                nombre_categoria: name,\n                id_categoria: id\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Categoria actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleCategorySetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleCategorySetActiveClear = () => ({\n    type:types.testSimpleCategoryClear\n});\n\n\nexport const testSimpleCategoryLoaded = ( testSimpleCategory ) => ({\n    type: types.testSimpleCategoryLoaded,\n    payload: testSimpleCategory \n});\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleCategoryActive, testSimpleCategoryLoaded } from '../actions/category';\n\n\nexport const useFetchCategory = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_category: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTSimpleCategory = () => {\n\n            fetchConToken('categoria/categorias', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.categorias.forEach(item => rows.push({\n                        id_categoria: item.id_categoria,\n                        nombre_categoria: item.nombre_categoria,\n                        modified: <button className=\"btn btn-primary\" id={item.id_categoria} onClick={(e) => {\n                            // It's a little more understandable\n                            return (\n                                dispatch(testSimpleCategoryLoaded(json.categorias)),\n                                dispatch(testSimpleCategoryActive(json.categorias, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_categoria}\n                            onClick={(e) => {\n                                return (\n                                    testSimpleCategoryDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_category: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testSimpleCategoryDelete = (id_categoria) => {\n\n            handleSwitchChange();\n\n            fetchConToken('categoria/delete', {\n                id_categoria\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Categoria Eliminada', 'success');\n                        fetchTSimpleCategory();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTSimpleCategory();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_category: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterCategory, testSimpleCategoryActive, updatedTestSimpleCategory } from '../../../../actions/category';\nimport { uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../../../actions/ui';\n\nexport const ModalCategory = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { categoryActive } = useSelector(state => state.category);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n\n\n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_categoria: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre_categoria, id_categoria } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (categoryActive) {\n\n            dispatch(updatedTestSimpleCategory(nombre_categoria, id_categoria));\n            history.push('category');\n\n        } else {\n\n            dispatch(startRegisterCategory(nombre_categoria));\n            history.push('category');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(testSimpleCategoryActive());\n    }\n\n    useEffect(() => {\n        if (categoryActive) {\n            setFormValues(categoryActive);\n        }\n        else {\n            setFormValues({ nombre_categoria: '' });\n        }\n\n    }, [categoryActive, setFormValues]);\n\n    useEffect(() => {\n\n        if (nombre_categoria.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [nombre_categoria, dispatch]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(categoryActive) ? 'Editar Categoria' : 'Registrar Categoria'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre categoria</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre_categoria\"\n                                placeholder=\"Ingrese nombre categoria\"\n                                name=\"nombre_categoria\"\n                                value={nombre_categoria}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (categoryActive) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { MDBDataTable } from 'mdbreact';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../../actions/ui';\nimport { useFetchCategory } from '../../../../hooks/useFetchCategory';\nimport { ModalCategory } from './ModalCategory';\n\nexport const CategoryScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { data_category: category } = useFetchCategory();\n\n\n    const data = {\n        columns: [\n            {\n                label: 'Nombre Categoria',\n                field: 'nombre_categoria',\n                sort: 'asc',\n                width: 200,\n            },\n            {\n                label: 'Modificar',\n                field: 'modified',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'Eliminar',\n                field: 'deleted',\n                sort: 'asc',\n                width: 200\n            },\n        ],\n        rows: category\n    };\n    const handleChangeModal = () => {\n        return dispatch(uiModalTrue());\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Administración de Categoria\n                </header>\n                {\n                    (data.rows !== [])\n                        ?\n                        <div className=\"panel-body\">\n                            <div className=\"col-lg-12\">\n                                <div className=\"text-right\" id=\"nestable_list_menu\">\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={handleChangeModal}>Registrar</button>\n                                </div>\n                                <br />\n                            </div>\n\n                            <MDBDataTable\n                                noRecordsFoundLabel={category !== undefined || data.rows !== undefined ? \"Cargando...\" : \"Aún no se registro ningun dato\"}\n                                scrollX\n                                autoWidth={true}\n                                maxHeight=\"40vh\"\n                                striped\n                                bordered\n                                small\n                                data={data}\n                            />\n                        </div>\n                        :\n                        <div className=\"panel-body\">\n                            <div>Cargando</div>\n                        </div>\n                }\n            </section>\n            <ModalCategory />\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from '../types/types';\n\nexport const simpleRegister = (pregunta, id_category, id_test) => {\n\n    return async (dispatch) => {\n\n        dispatch(uiCloseLoadingSaveButton());\n        dispatch(uiTrueDisabledButton());\n        if (pregunta === '' || id_test === '' || id_category === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.', 'error'),\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiFalseDisabledButton())\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/new', {\n                pregunta: pregunta,\n                id_categoria: id_category,\n                id_test: id_test\n            }, 'POST');\n\n            const body = await resp.json();\n\n            if (body.ok) {\n                Swal.fire(':)', 'Pregunta registrada', 'success');\n                dispatch(uiOpenLoadingSaveButton());\n                dispatch(uiFalseDisabledButton());\n            } else {\n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch(uiOpenLoadingSaveButton());\n                dispatch(uiFalseDisabledButton());\n            }\n\n        } catch (error) {\n            console.log(error);\n            dispatch(uiOpenLoadingSaveButton());\n            dispatch(uiFalseDisabledButton());\n        }\n\n    }\n\n}\n\nexport const simpleEdit = (id_pregunta, pregunta, id_categoria, id_test) => {\n\n    return async (dispatch) => {\n\n        dispatch(uiCloseLoadingSaveButton());\n        dispatch(uiTrueDisabledButton());\n\n        if (id_pregunta === '' || pregunta === '' || id_test === '' || id_categoria === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.', 'error'),\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiFalseDisabledButton())\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/update', {\n                id_pregunta,\n                pregunta: pregunta,\n                id_test: id_test,\n                id_categoria: id_categoria\n            }, 'PUT');\n\n            const body = await resp.json();\n\n            if (body.ok) {\n                Swal.fire(':)', 'Pregunta Modificada', 'success');\n                dispatch(uiOpenLoadingSaveButton());\n                dispatch(uiFalseDisabledButton());\n            } else {\n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch(uiOpenLoadingSaveButton());\n                dispatch(uiFalseDisabledButton());\n            }\n\n        } catch (error) {\n            console.log(error);\n            dispatch(uiOpenLoadingSaveButton());\n            dispatch(uiFalseDisabledButton());\n        }\n\n\n    }\n}\n\nexport const questionDeleteSimple = (id_pregunta) => {\n\n    return async () => {\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/delete', {\n                id_pregunta\n            }, 'DELETE');\n\n            const body = await resp.json();\n\n            if (body.ok) {\n                Swal.fire(':)', 'Pregunta Eliminada', 'success');\n            } else {\n\n                Swal.fire(':(', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n}\n\nexport const questionSetSimple = (id_pregunta, pregunta, id_categoria, id_test) => (questionSimple({ id_pregunta, pregunta, id_categoria, id_test }));\n\nconst questionSimple = (questionActive) => ({\n    type: types.questionSimpleSetActive,\n    payload: questionActive\n});\n\nexport const questionClearSimple = () => ({ type: types.questionSimpleClearActive });","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { questionClearSimple, questionDeleteSimple, questionSetSimple } from '../../../../actions/questionSimple';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ setDataQuestion, setFilter = [], id_pregunta = '', id_categoria = '', id_test = '', pregunta = '', updatedAt = '', createdAt = '', categorias = '', test_simples = '' }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { nombre_categoria } = categorias;\n\n    const { nombre_test } = test_simples;\n\n    const handleActiveQuestionsSimple = (id_pregunta, pregunta, id_categoria, id_test) => {\n\n        dispatch(questionClearSimple());\n        dispatch(questionSetSimple(id_pregunta, pregunta, id_categoria, id_test));\n        history.push('/test-simple/question/edit');\n    }\n\n    const handleDeleteQuestionSimple = (id_pregunta) => {\n\n        dispatch(questionDeleteSimple(id_pregunta));\n        setDataQuestion(\n            setFilter.filter(\n                e => (e.id_pregunta !== id_pregunta)\n            ));\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Pregunta</h1>\n                    <br />\n                    {pregunta}\n                    <span className=\"text-muted\"></span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : {moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : {moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestionsSimple(id_pregunta, pregunta, id_categoria, id_test) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp;\n                    <button onClick={() => { handleDeleteQuestionSimple(id_pregunta) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Categoria</h1>\n                    <p>\n                        {\n                            nombre_categoria\n                        }\n                    </p>\n                    <h1>Prueba Simple</h1>\n                    <p>\n                        {\n                            nombre_test\n                        }\n                    </p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React,{ useState, useEffect } from 'react'\nimport { PanelBody } from './PanelBody'\n\nexport const QuestionSimpleCard = ( { setDataQuestion, option = [], setFilter = [] } ) => {\n\n    const [state, setState] = useState([]);\n\n    const { id_pregunta, id_categoria, id_test, pregunta, updatedAt, createdAt, categorias, test_simples } = state;\n\n    useEffect(() => {\n        setState( option );\n        return () => {\n            setState([]);\n        }\n    }, [ option ]);\n\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n                <PanelBody\n                    id_pregunta = { id_pregunta }\n                    id_categoria = { id_categoria } \n                    id_test = { id_test }\n                    pregunta={ pregunta }\n                    updatedAt={ updatedAt }\n                    createdAt ={ createdAt }\n                    categorias={ categorias }\n                    test_simples={ test_simples }\n                    setFilter= { setFilter }\n                    setDataQuestion={ setDataQuestion }\n               />\n            </div>\n            <hr/>\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { QuestionSimpleCard } from './QuestionSimpleCard';\n\nexport const QuestionBodyProfile = ({ options }) => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n\n        setData(options);\n\n        return (() => {\n            setData([])\n        });\n\n    }, [options]);\n\n    return (\n        <React.Fragment>\n            {\n                (data !== [])\n                &&\n                data.map((option, key) => (\n                    <QuestionSimpleCard\n                        option={option}\n                        setFilter={options}\n                        setDataQuestion={setData}\n                        key={key} />\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionSimple } from '../../../hooks/QuestionSimple/useFetchQuestionSimple';\nimport { QuestionBodyProfile } from './ProfileSimple/QuestionBodyProfile'\nimport useNearScreen from '../../../hooks/useNeerScreen';\n\nexport const SimpleScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, QuestionsSimple, setSkip } = useFetchQuestionSimple();\n\n    const { isNearScreen } = useNearScreen({\n        externalRef: loading ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPageSimple = useCallback(\n        debounce(\n            () => setSkip(preveSkip => preveSkip + 5), 1000\n        ), [setSkip]);\n\n    useEffect(() => {\n        if (isNearScreen) debounceHandleNextPageSimple();\n    }, [isNearScreen, debounceHandleNextPageSimple]);\n\n    return (\n        <React.Fragment>\n            <div className=\"animated fadeIn\">\n                <div className=\"profile-nav alt\">\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            ADMINISTRACION DE PREGUNTAS SIMPLES\n                        </header>\n                        <div>\n                            {\n                                (QuestionsSimple !== []) &&\n                                <QuestionBodyProfile options={QuestionsSimple} />\n                            }\n                        </div>\n                    </section>\n                </div>\n            </div>\n            <div id=\"visor-simple\" ref={externalRef}></div>\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../helpers/fetch\";\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionSimple = () => {\n  const [loading, setLoading] = useState(false);\n\n  const [skip, setSkip] = useState(INITIAL_LIMIT);\n\n  const [QuestionsSimple, setQuestionsSimple] = useState([]);\n\n  useEffect(() => {\n    return () => {\n      setQuestionsSimple([]);\n    };\n  }, []);\n\n  const testShapeLoading = async (skip) => {\n    setLoading(true);\n    const resp = await fetchConToken(\n      `pregunta-simple/psimples?limit=5&skip=${skip}`\n    );\n    const body = await resp.json();\n\n    try {\n      if (body.ok) {\n        const { simples_preguntas } = body;\n\n        setQuestionsSimple(QuestionsSimple.concat(simples_preguntas));\n        setLoading(false);\n      } else {\n        Swal.fire(\":(\", body.msg, \"error\");\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (skip === INITIAL_LIMIT) {\n      testShapeLoading(INITIAL_LIMIT);\n    } else {\n      testShapeLoading(skip);\n    }\n  }, [skip]);\n\n  return { loading, QuestionsSimple, setSkip };\n};\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchCategory = () => {\n\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        \n        categoryLoading()\n        \n    }, [])\n\n    const categoryLoading = async () => {\n\n        const resp = await fetchConToken(`categoria/categorias`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { categorias } = body;\n\n                setData( categorias );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return { data };\n\n\n}","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchTestSimple = () => {\n\n\n    const [questionsSimple, setQuestionsSimple] = useState([]);\n\n    useEffect(() => {\n\n        testSimpleLoading();\n\n    }, []);\n\n    const testSimpleLoading = async () => {\n\n        const resp = await fetchConToken(`test-simple/testsimples`);\n        const body = await resp.json();\n\n        try {\n\n            if (body.ok) {\n\n                const { testSimple } = body;\n\n                setQuestionsSimple(testSimple);\n\n            }\n            else {\n                Swal.fire(':(', body.msg, 'error');\n\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    return { questionsSimple };\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleRegister } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SimpleScreenRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n\n    const { data } = useFetchCategory();\n\n    const [state, setState] = useState([]);\n    const [categoryData, setCategoryData] = useState([]);\n    const [testName, setTestName] = useState([]);\n    const [nameCategory, setNameCategory] = useState([]);\n\n    const [formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange] = useForm({\n        question: '',\n        tSimple: '',\n        category: ''\n    });\n\n    const { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (question !== '' && tSimple !== '' && category !== '') {\n            dispatch(simpleRegister(question, tSimple, category));\n        }\n        Swal.fire(':(', 'Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n\n        setState(questionsSimple);\n        setCategoryData(data);\n\n    }, [questionsSimple, data]);\n\n\n    useEffect(() => {\n\n        setNameCategory(data.find(e => e.id_categoria.toString() === category));\n        setTestName(questionsSimple.find(e => e.id_test.toString() === tSimple));\n\n    }, [category, tSimple, data, questionsSimple]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        REGISTRO DE PRUEBAS SIMPLES\n                    </header>\n\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n\n                            {\n\n\n                                questionsSimple.length !== 0 ?\n\n\n\n                                    <form onSubmit={handleRegister}>\n                                        <div className=\"form-group\">\n                                            <label>Pregunta</label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                id=\"InputQuestion\"\n                                                name=\"question\"\n                                                onChange={handleQuestionSimpleInputValueChange}\n                                                value={question}\n                                                placeholder=\"Ingrese la pregunta\" />\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label>Prueba Simple</label>\n                                            <p>Prueba seleccionada : `{(testName !== undefined || '' ? testName.nombre_test : '')}`</p>\n\n                                            <select\n                                                formcontrolname=\"test-simple\"\n                                                name=\"tSimple\"\n                                                onChange={handleQuestionSimpleInputValueChange}\n                                                className=\"form-control ng-valid ng-dirty ng-touched\"\n                                                value={tSimple}\n                                            >\n                                                {\n\n                                                    state.map((e) => (\n                                                        <option\n                                                            key={e.id_test}\n                                                            value={e.id_test}\n                                                        >\n                                                            {\n                                                                e.nombre_test\n                                                            }\n                                                        </option>\n                                                    ))\n                                                }\n                                            </select>\n\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Categoria</label>\n                                            <p>Categoria seleccionada : `{(nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '')}`</p>\n                                            <select\n                                                formcontrolname=\"curso\"\n                                                name=\"category\"\n                                                onChange={handleQuestionSimpleInputValueChange}\n                                                className=\"form-control ng-valid ng-dirty ng-touched\"\n                                                value={category}\n                                            >\n                                                {\n                                                    categoryData.map((e) => (\n                                                        <option\n                                                            key={e.id_categoria}\n                                                            value={e.id_categoria}\n                                                        >{e.nombre_categoria}</option>\n                                                    ))\n                                                }\n                                            </select>\n                                        </div>\n                                        <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                        <button type=\"submit\" className=\"btn btn-success\">Registrar</button>\n                                    </form>\n\n                                    : <div>cargando ...</div>\n                            }\n\n                        </div>\n\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestSimple = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-simple/new',{ \n                nombre_test:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba simple registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleActive = ( testSimple, id ) => ({ \n    type:types.testSimpleActive,\n    payload: { testSimple, id }\n});\n\nexport const updatedTestSimple = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-simple/update', { \n                nombre_test:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba simple actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleSetActiveClear = () => ({\n    type:types.testSimpleClear\n});\n\n\nexport const testSimpleLoaded = ( testSimple ) => ({\n    type: types.testSimpleLoaded,\n    payload: testSimple \n});\n","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestSimple, TestSimpleSetActiveClear, updatedTestSimple } from '../../../../actions/testSimple';\nimport { uiModalFalse } from '../../../../actions/ui';\n\nexport const ModalRegisterSimple = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testActiveSimple } = useSelector(state => state.tSimple);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_test_test: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre_test, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (testActiveSimple) {\n\n            dispatch(updatedTestSimple(nombre_test, id_test));\n            history.push('tsimple');\n\n        } else {\n\n            dispatch(startRegisterTestSimple(nombre_test));\n            history.push('tsimple');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(TestSimpleSetActiveClear());\n    }\n\n    useEffect(() => {\n        if (testActiveSimple) {\n            setFormValues(testActiveSimple);\n        }\n        else {\n            setFormValues({ nombre_test: '' });\n        }\n\n    }, [testActiveSimple, setFormValues]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(testActiveSimple) ? 'Editar Prueba Simple' : 'Registrar Prueba Simple'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre_test\"\n                                placeholder=\"Ingrese nombre\"\n                                name=\"nombre_test\"\n                                value={nombre_test}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (testActiveSimple) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleActive, testSimpleLoaded } from '../actions/testSimple';\n\n\nexport const useFetchTestSimple = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_simple: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTSimple = () => {\n\n            fetchConToken('test-simple/testsimples', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.testSimple.forEach(item => rows.push({\n                        id_test: item.id_test,\n                        nombre: item.nombre_test,\n                        modified: <button className=\"btn btn-primary\" id={item.id_test} onClick={(e) => {\n\n                            // It's a little more understandable\n                            return (\n                                dispatch(testSimpleLoaded(json.testSimple)),\n                                dispatch(testSimpleActive(json.testSimple, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_test}\n                            onClick={(e) => {\n                                return (\n                                    testSimpleDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_simple: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testSimpleDelete = (id_test) => {\n\n            handleSwitchChange();\n\n            fetchConToken('test-simple/delete', {\n                id_test\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Prueba simple Eliminada', 'success');\n                        fetchTSimple();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTSimple();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_simple: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../../actions/ui';\n\nimport { MDBDataTable } from 'mdbreact';\nimport { ModalRegisterSimple } from './ModalRegisterSimple';\nimport { useFetchTestSimple } from '../../../../hooks/useFetchTestSimple';\n\nexport const TestScreenSimple = () => {\n\n    const dispatch = useDispatch();\n\n    const { data_simple: TestSimple } = useFetchTestSimple();\n\n    const data = {\n        columns: [\n            {\n                label: 'Nombre',\n                field: 'nombre',\n                sort: 'asc',\n                width: 200,\n            },\n            {\n                label: 'Modificar',\n                field: 'modified',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'Eliminar',\n                field: 'deleted',\n                sort: 'asc',\n                width: 200\n            },\n        ],\n        rows: TestSimple\n    };\n    const handleChangeModal = () => {\n        dispatch(uiModalTrue());\n    }\n\n\n    return (\n        <React.Fragment>\n            <div className=\"col-lg-12 animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        Pruebas Simple\n                    </header>\n                    {\n                        (data.rows !== [])\n                            ?\n                            <div className=\"panel-body\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"text-right\" id=\"nestable_list_menu\">\n                                        <button type=\"button\" className=\"btn btn-success\" onClick={handleChangeModal}>Registrar</button>\n                                    </div>\n                                    <br />\n                                </div>\n\n                                <MDBDataTable\n                                    noRecordsFoundLabel={(TestSimple !== undefined || data.rows !== undefined) ? \"Cargando...\" : \"Aún no se registro ningun dato\"}\n                                    scrollX\n                                    autoWidth={true}\n                                    maxHeight=\"40vh\"\n                                    striped\n                                    bordered\n                                    small\n                                    data={data}\n                                />\n                            </div>\n                            :\n                            <div className=\"panel-body\">\n                                <div>Cargando ...</div>\n                            </div>\n\n                    }\n                </section>\n                <ModalRegisterSimple />\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleEdit } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const FormUpdatedQuestion = ( { id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  } ) => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n    const { data } = useFetchCategory();\n\n    const [ state, setState ] = useState([]);\n    const [ categoryData, setCategoryData ] = useState([]);\n    const [ testName, setTestName ] = useState([]);\n    const [ nameCategory, setNameCategory ] = useState([]);\n\n    const [ formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange ] = useForm({\n        question: pregunta,\n        tSimple: id_test,\n        category: id_categoria\n    });\n\n    const  { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleModified = ( e ) =>{\n        e.preventDefault();\n        if ( question !== '' && tSimple !== '' && category !== '' && question.trim().length !== 0 ) {\n            dispatch( simpleEdit( id_pregunta, question, category, tSimple ) );\n        }\n        Swal.fire(':(','Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n        \n        setState( questionsSimple );\n        setCategoryData( data );\n        \n        return(()=>{\n            setState([]);\n            setCategoryData([]);    \n        })\n        \n    }, [ questionsSimple, data ]);\n\n    \n    useEffect(() => {\n        \n        setNameCategory( data.find( e => e.id_categoria.toString() === category ) );\n        setTestName( questionsSimple.find( e => e.id_test.toString() === tSimple ) );\n\n        return(()=>{\n            setNameCategory([]);\n            setTestName([]);\n        })\n\n    }, [ category, tSimple, data, questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBA SIMPLE\n                    </header>\n                \n                        <div className=\"panel-body\">\n                            <div className=\"position-center\">\n                                <form onSubmit={ handleModified }>\n                                <div className=\"form-group\">\n                                    <label>Pregunta</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"InputQuestion\" \n                                        name=\"question\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        value={ question }\n                                        placeholder=\"Ingrese la pregunta\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <p>Prueba seleccionada : `{ ( testName !== undefined || '' ? testName.nombre_test : '') }`</p>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ tSimple  }\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Categoria</label>\n                                    <p>Categoria seleccionada : `{ ( nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '') }`</p>\n                                    <select \n                                        formcontrolname=\"curso\" \n                                        name=\"category\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ category  }\n                                        >\n                                        {\n                                            categoryData.map(( e )=>(\n                                                <option \n                                                    key={ e.id_categoria } \n                                                    value={ e.id_categoria } \n                                                >{ e.nombre_categoria }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                <button type=\"submit\" className=\"btn btn-success\">Modificar</button>\n                            </form>\n                            </div>\n\n                        </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { FormUpdatedQuestion } from './FormUpdatedQuestion';\n\n\nexport const FormQuestionSimple = ({ id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  }) => {\n\n    return (\n       <FormUpdatedQuestion\n            id_pregunta={ id_pregunta }\n            pregunta={ pregunta }\n            id_categoria={ id_categoria }\n            id_test={ id_test }\n       />\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionSimple } from './FormQuestionSimple';\n\nexport const UpdatedScreen = () => {\n\n    const { id_pregunta, pregunta, id_categoria, id_test } = useSelector( state => state.qSimple.questionActive );\n\n    const history = useHistory();\n\n    const ChangeLocation = ( e ) => {\n        e.preventDefault();\n        history.push('/test-simple');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                        {\n                            ( id_pregunta === undefined ) &&\n                            <header className=\"panel-heading\">\n                                MODIFICAR PRUEBA SIMPLE\n                            </header>\n                        }\n                        {\n                        ( id_pregunta !== undefined )\n                        ?\n                            <FormQuestionSimple\n                                id_pregunta={ id_pregunta }\n                                pregunta={ pregunta }\n                                id_categoria={ id_categoria }\n                                id_test={ id_test }\n\n                            /> \n                        :\n                        <div className=\"panel-body row align-items-end\">\n                            <div className=\"col-sm-12\"> \n                                <div className=\"text-center\">\n                                    <br/>\n                                    <button onClick={ ChangeLocation } className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { CategoryScreen } from '../../components/test/simple/category/CategoryScreen';\nimport { SimpleScreen } from '../../components/test/simple/SimpleScreen';\nimport { SimpleScreenRegister } from '../../components/test/simple/SimpleScreenRegister';\nimport { TestScreenSimple } from '../../components/test/simple/test/TestScreenSimple';\nimport { UpdatedScreen } from '../../components/test/simple/UpdatedScreen';\n\nexport const TestSimpleRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-simple\"\n                    component={SimpleScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/question\"\n                    component={SimpleScreenRegister}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/question/edit\"\n                    component={UpdatedScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/category\"\n                    component={CategoryScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/tsimple\"\n                    component={TestScreenSimple}\n                />\n            </Switch>\n        </Layout>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersShapeActive } from '../../../actions/answersShape';\nimport { useFetchTestShape } from '../../../hooks/Answers/Shape/useFetchTestShape';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const ShapeScreeAnswers = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState([]);\n\n\n    const { dataShape } = useFetchTestShape();\n\n    const [selectionDefault, setSelectionDefault] = useState('');\n\n    const [formSelectionInputValues, handleSelectionInputValueChange] = useForm({\n        tShape: selectionDefault\n    });\n\n    const { tShape } = formSelectionInputValues;\n\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        if (tShape !== '') {\n\n            return (\n                dispatch(answersShapeActive(tShape)),\n                history.push('/test-shape/questions')\n            )\n\n        } else {\n            return (\n                dispatch(answersShapeActive(selectionDefault)),\n                history.push('/test-shape/questions')\n            )\n\n        }\n\n    }\n\n    useEffect(() => {\n\n        if (dataShape !== []) {\n            if (dataShape[0] !== undefined) {\n\n                const DEFAULTVALUE = dataShape[0].id_test;\n\n                setSelectionDefault(DEFAULTVALUE.toString());\n\n            }\n        }\n        setState(dataShape);\n\n    }, [dataShape]);\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA DE FORMA\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form\n                                onSubmit={handleSubmitForm}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Prueba forma</label>\n                                    <select\n                                        formcontrolname=\"test-simple\"\n                                        name=\"tShape\"\n                                        value={tShape}\n                                        onChange={handleSelectionInputValueChange}\n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                    >\n                                        {\n                                            state.map((e) => (\n                                                <option\n                                                    key={e.id_test}\n                                                    value={e.id_test}\n                                                >{e.nombre}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchTestShape = () => {\n    \n    const [ data, setData ] = useState({\n        dataShape:[]\n    });\n    \n    useEffect(() => {\n        \n        shapeLoading();\n\n    }, []);\n\n    const shapeLoading = async () => {\n\n        const resp = await fetchConToken(`test-formas/tformas`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { testFormas } = body;\n\n                const dataMap = testFormas;    \n\n                setData({\n                    dataShape: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport * as moment from 'moment';\nimport Swal from \"sweetalert2\";\n\n\nexport const answersSimpleActive = (answerSimple) => ({\n    type: types.answersSimpleActive,\n    payload: answerSimple\n});\n\nexport const answersSimpleClear = () => ({\n    type: types.answersSimpleClear\n});\n\nexport const answersfilter = (answer) => ({\n    type: types.answersfilter,\n    payload: answer\n});\nexport const answersfilterActive = (answersActive, position) => ({\n    type: types.answersfilterActive,\n    payload: { answersActive, position }\n});\n\nexport const answersRegister = (uid, answers) => {\n\n    return async () => {\n\n        const now = moment().format();\n\n        try {\n\n            answers.map(async (e) => {\n\n                if (e.answers.toString() === 'yes') {\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 1,\n                        nose: 0,\n                        no: 0\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n                }\n                if (e.answers.toString() === 'no-know') {\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 0,\n                        nose: 1,\n                        no: 0\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n\n                }\n                if (e.answers.toString() === 'no') {\n\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 0,\n                        nose: 0,\n                        no: 1\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n                }\n\n\n            });\n\n        } catch (err) {\n            return Swal.fire('Error', \"Hable con el administrador\", 'error')\n        }\n    }\n\n};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answersfilter, answersfilterActive, answersRegister } from '../../../actions/answersSimple';\nimport '../styles/simples/FormWinzard.css'\n\nexport const FormWinzard = ( props ) => {  \n\n    const dispatch = useDispatch();\n    const { answers } = useSelector( state => state.answerSimple );\n    const { uid } = useSelector(state => state.auth);\n\n    const array = new Array( props.length );\n\n    const arrayLength = () => {\n        \n        let elements = [ props.current ];\n\n        for ( let index = 0; index < array.length; index++ ) {\n            \n            elements[ index ] = { id: null, answers: '' };\n        }\n\n        return elements\n    \n    }\n\n    const handleClick = ( e ) => {\n        \n        if ( answers === null ) {\n\n            return (\n                dispatch(  answersfilter( arrayLength() ) ),\n                dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n            )\n        }\n\n        return (\n            dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n        )\n\n    }\n\n    const handleSendAnswers = () => {\n        \n        dispatch( answersRegister( uid, answers ) );\n    }\n\n    return (\n         <div className=\"panel-body\">\n            <div className=\"position-center\" style={{ textAlign:\"center\" }}>\n                <h3>Pregunta</h3>\n                {\n                    props.data\n                }\n                <br/>\n                <br/>\n           \n                <div className=\"row\" style={{ paddingTop:\"10px\" }} >\n                    <div className=\"switch-toggle switch-3 switch-candy\">\n                        <input id=\"yes\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick }\n                            />\n                            <label htmlFor=\"yes\" >Si</label>\n                        \n                        <input id=\"no-know\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            defaultChecked/>\n                            <label htmlFor=\"no-know\" >No se</label>\n\n                        <input id=\"no\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            />\n                            <label htmlFor=\"no\" >No</label>\n                        <a href=\"/\"> </a> \n                    </div>\n                    <br/>\n                    <br/>\n                    <div className=\"col-sm-6\" style={{ paddingBottom:\"10px\", textAlign:\"center\" }} >\n                        <button className=\"btn btn-primary\" disabled={props.isFirst()} onClick={props.prev}>\n                            Anterior\n                        </button> \n                    </div>\n                    <div className=\"col-sm-6\" style={{ textAlign:\"center\" }} >\n                        <button className=\"btn btn-success\" disabled={props.isLast()} onClick={props.next}>\n                            Siguiente\n                        </button>\n                    </div>\n                    <br/>\n                    {\n                        ( props.length === ( props.current ) )\n                        &&\n                        <button className=\"btn btn-info btn-lg btn-block\" onClick={ handleSendAnswers }>\n                            Enviar\n                        </button> \n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Steps, Step } from \"react-step-builder\"\nimport { FormWinzard } from './FormWinzard';\n\n\nexport const MapOfFormWinzard = ({ dataAnswers = []}) => {\n\n    const config = {\n        navigation: {\n          location: \"before\",\n        }\n    };\n    \n    return (\n        <div>\n            <Steps config={ config } >\n                {\n                     dataAnswers.map( ( e, key ) =>{\n                         return (\n                             <Step \n                                length={ dataAnswers.length }\n                                key={ key }\n                                component={ FormWinzard }\n                                data={ e.pregunta } \n                                id={ e.id_pregunta } \n                             />\n                         )\n                     })\n                }\n            </Steps>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useFetchAnswerSimple } from '../../../hooks/Answers/Simple/useFetchAnswerSimple';\nimport { MapOfFormWinzard } from './MapOfFormWinzard';\n\nexport const SimpleScreenAnswers = () => {\n\n    const history = useHistory();\n\n    const { answersSimpleActive } = useSelector(state => state.answerSimple);\n\n    const { data_answer } = useFetchAnswerSimple(answersSimpleActive);\n\n    useEffect(() => {\n\n        if (answersSimpleActive === null) {\n            history.push('/answers/selection');\n        }\n\n    }, [answersSimpleActive, history]);\n\n    return (\n        <React.Fragment>\n            {\n                (data_answer !== [])\n                &&\n                (\n                    <div className=\"col-lg-12 animated fadeIn\">\n                        <section className=\"panel\">\n                            <header className=\"panel-heading\">\n                                PRUEBAS\n                            </header>\n                            <MapOfFormWinzard dataAnswers={data_answer} />\n                        </section>\n                    </div>\n                )\n            }\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchAnswerSimple = ( id_test ) => {\n    \n    const [ data, setData ] = useState({\n        data_answer:[]\n    });\n\n    useEffect(() => {\n        \n        answersSimpleLoading( id_test );\n\n    }, [ id_test ]);\n\n    const answersSimpleLoading = async ( id_test = '') => {\n\n        const resp = await fetchConToken(`pregunta-simple/psimples-test?id_test=${ id_test }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { simples_preguntas } = body;\n\n                const dataMap = simples_preguntas;    \n\n                setData({\n                    data_answer: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\nexport const AnswersScreen = () => {\n    return (\n        <React.Fragment>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>31</span>\n                            Cantidad de Pruebas simples\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={faThermometerThreeQuarters} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>60</span>\n                            Cantidad total de pruebas\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>29</span>\n                            Cantidad de Pruebas de formas\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" >\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faBong} />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <Link to=\"/answers/selection\" className=\"btn btn-primary btn-lg btn-block\" >Elegir</Link>\n                </div>\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faCubes} />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <Link to=\"/answers/shape\" className=\"btn btn-info btn-lg btn-block\" >Elegir</Link>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersSimpleActive } from '../../../actions/answersSimple';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SelectionTestScreen = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [ state, setState ] = useState([]);\n\n    const { questionsSimple } = useFetchTestSimple();\n\n    const [ selectionDefault, setSelectionDefault ] = useState('');\n\n    const [ formSelectionInputValues, handleSelectionInputValueChange ] = useForm({\n        tSimple: selectionDefault\n    });\n\n    const  { tSimple } = formSelectionInputValues;\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        if ( tSimple === '' ) {\n            return (\n                dispatch( answersSimpleActive( selectionDefault.toString() ) ),\n                history.push('/answers/simple')\n            )\n        }\n        return (\n            dispatch( answersSimpleActive( tSimple ) ),\n            history.push('/answers/simple')\n        )\n    }\n\n    useEffect(() => {\n        \n        if ( questionsSimple !== [] ) {\n            if ( questionsSimple[0] !== undefined ) {   \n                \n                const DEFAULTVALUE = questionsSimple[0].id_test;\n                setSelectionDefault( DEFAULTVALUE );\n\n            }\n        }\n        \n        setState( questionsSimple );\n        \n    }, [ questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA SIMPLE\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form onSubmit={ handleSubmitForm } >\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        value={ tSimple }\n                                        onChange={ handleSelectionInputValueChange }   \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreeAnswers } from '../../components/answers/shapes/ShapeScreeAnswers';\nimport { SimpleScreenAnswers } from '../../components/answers/simples/SimpleScreenAnswers';\nimport { AnswersScreen } from '../../components/answers/AnswersScreen';\nimport { Layout } from '../../components/main/Layout';\nimport { SelectionTestScreen } from '../../components/answers/simples/SelectionTestScreen';\n\nexport const AnswersRouter = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/answers\"\n                    component={ AnswersScreen }\n                />\n                <Route\n                    exact\n                    path=\"/answers/shape\"\n                    component={ ShapeScreeAnswers }\n                />\n                <Route\n                    exact\n                    path=\"/answers/simple\"\n                    component={ SimpleScreenAnswers }\n                />\n                <Route \n                    exact\n                    path=\"/answers/selection\"\n                    component={ SelectionTestScreen }\n                />\n                <Redirect to=\"/answers\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { AccountRouter } from './private/AccountRouter';\nimport { AuthRouter } from './public/AuthRouter';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRouter';\nimport { InstitutionRouter } from './private/InstitutionRouter';\nimport { TestsRouter } from './private/TestsRouter';\nimport { TestShapeRouter } from './private/TestShapeRouter';\nimport { TestSimpleRouter } from './private/TestSimpleRouter';\nimport { AnswersRouter } from './private/AnswersRouter';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch]);\n\n    if (checking) {\n        return (\n            <div className=\"loader-wrapper\" style={{ display: \"block\" }} >\n                <div className=\"loader\" />\n            </div>\n        );\n    }\n\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={!!uid}\n                    />\n\n                    {/* \n                        Rutas privadas \n                    */}\n\n                    <PrivateRoute\n                        path=\"/user\"\n                        component={AccountRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/institution\"\n                        component={InstitutionRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test/register\"\n                        component={TestsRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test-shape\"\n                        component={TestShapeRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test-simple\"\n                        component={TestSimpleRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/answers\"\n                        component={AnswersRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const PsicologiaApp = () => {\n  return (\n    <Provider store={ store }> \n      <AppRouter  />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PsicologiaApp  } from './PsicologiaApp'; \n\nReactDOM.render(\n    <PsicologiaApp />,\n  document.getElementById('root')\n);\n\n","import { types } from \"../types/types\";\nimport Swal from \"sweetalert2\";\nimport {\n  uiCloseLoadingSaveButton,\n  uiFalseDisabledButton,\n  uiOpenLoadingSaveButton,\n  uiTrueDisabledButton,\n} from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\n\nexport const shapeRegister = (\n  pregunta,\n  op1,\n  op2,\n  op3,\n  op4,\n  op5,\n  op6,\n  respuesta_correcta,\n  name,\n  testShape\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      const resp = await fetchConToken(\n        \"pregunta-formas/new\",\n        {\n          nombre: name,\n          pregunta: pregunta,\n          op1: op1,\n          op2: op2,\n          op3: op3,\n          op4: op4,\n          op5: op5,\n          op6: op6,\n          respuesta_correcta: respuesta_correcta,\n          id_test: testShape,\n        },\n        \"POST\"\n      );\n\n      const body = await resp.json();\n\n      console.log(body);\n\n      if (body.ok) {\n        Swal.fire(\":)\", \"Pregunta registrada\", \"success\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\":(\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(uiOpenLoadingSaveButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const shapeEdit = (\n  id_pregunta,\n  pregunta,\n  op1,\n  op2,\n  op3,\n  op4,\n  op5,\n  op6,\n  respuesta_correcta,\n  name,\n  testShape\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      const resp = await fetchConToken(\n        \"pregunta-formas/update\",\n        {\n          id_pregunta,\n          nombre: name,\n          pregunta: pregunta,\n          op1: op1,\n          op2: op2,\n          op3: op3,\n          op4: op4,\n          op5: op5,\n          op6: op6,\n          respuesta_correcta: respuesta_correcta,\n          id_test: testShape,\n        },\n        \"PUT\"\n      );\n\n      const body = await resp.json();\n\n      if (body.ok) {\n        Swal.fire(\":)\", \"Pregunta Modificada\", \"success\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\":(\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(uiOpenLoadingSaveButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const questionDeleteShape = (id_pregunta) => {\n  return async () => {\n    try {\n      const resp = await fetchConToken(\n        \"pregunta-formas/delete\",\n        {\n          id_pregunta,\n        },\n        \"DELETE\"\n      );\n\n      const body = await resp.json();\n\n      if (body.ok) {\n        Swal.fire(\":)\", \"Pregunta Eliminada\", \"success\");\n      } else {\n        Swal.fire(\":(\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const questionSetShape = (question, nombre, id_test, id_resp) =>\n  questionShape({ question, nombre, id_test, id_resp });\n\nconst questionShape = (questionActive) => ({\n  type: types.questionSetActive,\n  payload: questionActive,\n});\n\nexport const questionClearShape = () => ({ type: types.questionClearActive });\n","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenSidebar  = () => ({ type: types.uiOpenSidebar });\nexport const uiCloseSidebar = () => ({ type: types.uiCloseSidebar });\n\nexport const uiTrueDisabledButton = () => ({ type:types.uiTrueDisabledButton });\nexport const uiFalseDisabledButton = () => ({ type:types.uiFalseDisabledButton });\n\nexport const uiOpenSection  = () => ({ type: types.uiOpenSection });\nexport const uiCloseSection = () => ({ type: types.uiCloseSection });\n\nexport const uiOpenDrowp  = () => ({ type: types.uiOpenDrowp });\nexport const uiCloseDrowp = () => ({ type: types.uiCloseDrowp });\n\nexport const uiOpenLoadingButton = () => ({ type: types.uiOpenLoadingButton } );\nexport const uiCloseLoadingButton = () => ({ type: types.uiCloseLoadingButton } );\n\nexport const uiOpenLoadingSaveButton = () => ({ type: types.uiOpenLoadingSaveButton } );\nexport const uiCloseLoadingSaveButton = () => ({ type: types.uiCloseLoadingSaveButton } );\n\nexport const uiModalTrue = () => ({ type:types.uiModalTrue });\nexport const uiModalFalse = () => ({ type:types.uiModalFalse });\n\n// Institution\nexport const institutionAcordionSelect = () => ({ type:types.institutionAcordionSelect });\nexport const institutionAcordionDeselect = () => ({ type:types.institutionAcordionDeselect });\n\nexport const institutionSelectRegister = () => ({ type:types.institutionSelectRegister });\nexport const institutionDeselectRegister = () => ({ type:types.institutionDeselectRegister });\n\nexport const institutionSelectShow = () => ({ type:types.institutionSelectShow });\nexport const institutionDeselectShow = () => ({ type:types.institutionDeselectShow });\n\nexport const institutionOpenAcordion = () => ({ type:types.institutionOpenAcordion });\nexport const institutionCloseAcordion = () => ({ type:types.institutionCloseAcordion });\nexport const institutionIconClose = () => ({ type:types.institutionIconClose });\n\n\nexport const uieventLogout = () => ({ type: types.uieventLogout } );\n\n","export const types = {\n  uiOpenSidebar: \"[ui] Open Sidebar\",\n  uiCloseSidebar: \"[ui] Close Sidebar\",\n\n  uiTrueDisabledButton: \"[ui] Disabled true\",\n  uiFalseDisabledButton: \"[ui] Disabled false\",\n\n  uiOpenSection: \"[ui] Open Section\",\n  uiCloseSection: \"[ui] Close Section\",\n\n  uiOpenLoadingButton: \"[ui] Open Loading Button\",\n  uiCloseLoadingButton: \"[ui] CloseLoading Button\",\n\n  uiOpenLoadingSaveButton: \"[ui] Open Loading Save Button\",\n  uiCloseLoadingSaveButton: \"[ui] CloseLoading Save Button\",\n  uiModalTrue: \"[ui] Modal true\",\n  uiModalFalse: \"[ui] Modal false\",\n\n  uiOpenDrowp: \"[ui] Open drowp\",\n  uiCloseDrowp: \"[ui] Close drowp\",\n  uieventLogout: \"[ui] Logout\",\n\n  accountUpdate: \"[ui] Account update\",\n\n  institutionSetActive: \"[institution] Institution active\",\n  institutionSetActiveClear: \"[institution] Institution clear\",\n\n  institutionAcordionSelect: \"[institution] Institution acordion select\",\n  institutionAcordionDeselect: \"[institution] Institution acordion deselect\",\n\n  institutionLoaded: \"[institution] Loaded institution\",\n  institutionSelectRegister: \"[institution] Select register institution\",\n  institutionDeselectRegister: \"[institution] Deselect register institution\",\n\n  institutionSelectShow: \"[institution] Select show institution\",\n  institutionDeselectShow: \"[institution] Deselect show institution\",\n\n  institutionIconClose: \"[institution] Close icon institution\",\n  institutionOpenAcordion: \"[institution] Open acordion institution\",\n  institutionCloseAcordion: \"[institution] Cloase acordion instituion\",\n\n  testShapeActive: \"[tShape] Active test shape\",\n  testShapeClear: \"[tShape] Clear test shape\",\n  testShapeLoaded: \"[tShape] Loaded test Shape\",\n\n  testSimpleActive: \"[tSimpleActive] Active test simple\",\n  testSimpleClear: \"[tSimpleClear] Clear test simple\",\n  testSimpleLoaded: \"[tSimpleLoaded] Loaded test simple\",\n\n  testSimpleCategoryActive:\n    \"[tSimpleCategoryActive] Active category test simple \",\n  testSimpleCategoryClear: \"[tSimpleCategoryClear] Clear category test simple \",\n  testSimpleCategoryLoaded:\n    \"[tSimpleCategoryLoaded] Loaded category test simple \",\n\n  //Question Shape\n  shapeLoaded: \"[Shape] Loaded Shape\",\n  questionSetActive: \"[QuestionS] Question shape active\",\n  questionClearActive: \"[QuestionS] Question shape clear\",\n\n  //Question Simple\n  questionSimpleSetActive: \"[QSimple] Question simple active\",\n  questionSimpleClearActive: \"[QSimple] Quesiton simple clear\",\n\n  answersSimpleActive: \"[Answers] Answer simple active\",\n  answersSimpleClear: \"[Answers] Answer simple clear\",\n  answersfilter: \"[Answers] Answer simple filter\",\n  answersfilterActive: \"[Answers] Answer simple filter active\",\n\n  answersShapeActive: \"[Answers Shape] Answer shape active\",\n\n  authUserUpdate: \"[auth] User update\",\n  authUserUpdatePassword: \"[auth] User update password\",\n  authChecking: \"[auth] Checking login state \",\n  authCheckingFinish: \"[auth] Finish cheking login state \",\n  authStartLogin: \"[auth] Start Login\",\n  authLogin: \"[auth] Login\",\n  authStartRegister: \"[auth] Login Register\",\n  authStartStartTokenRenew: \"[auth] start token renew\",\n\n  shapeAnswersActive: \"[shapeAnswersActive] Loaded shape answers\",\n  shapeAnswersClear: \"[shapeAnswersClear] clear shape answers\",\n\n  authLogout: \"[auth] Logout\",\n};\n"],"sourceRoot":""}