{"version":3,"sources":["helpers/fetch.js","hooks/QuestionShape/useFetchDestructureValue.js","hooks/QuestionShape/useFetchOptionsDestructure.js","components/test/shapes/ProfileShape/TestShapeCard.js","components/test/shapes/ProfileShape/PanelBody.js","components/answers/shapes/ShapeScreenQuestion.js","hooks/QuestionShape/useFetchQuestionShapeFindAll.js","actions/answersShape.js","reducers/authReducer.js","reducers/institutionReducer.js","reducers/questionShape.js","reducers/shapeReducer.js","reducers/testShapeReducer.js","reducers/uiReducer.js","reducers/testSimpleReducer.js","reducers/testSimpleCategoryReducer.js","reducers/questionSimpleReducer.js","reducers/answersSimpleReducer.js","reducers/shapeAnswersReducer.js","reducers/answersShapeReducer.js","reducers/rootReducer.js","store/store.js","actions/auth.js","hooks/useForm.js","components/Accounts/AccountScreen.js","components/Accounts/ChangePasswordScreen.js","components/Accounts/UserScreen.js","components/main/Aside.js","components/main/Header.js","components/main/Layout.js","router/private/AccountRouter.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/public/AuthRouter.js","router/PrivateRoute.js","router/PublicRouter.js","actions/institution.js","hooks/useFetchInstitutions.js","components/institution/InstitutionScreen.js","hooks/useFormPhone.js","components/institution/RegisterScreen.js","components/institution/FormUpdate.js","components/institution/UpdateScreen.js","router/private/InstitutionRouter.js","components/test/RegisterScreen.js","actions/shape.js","styles/animation.js","components/test/shapes/styles/style.js","components/test/shapes/GetImage.js","components/test/shapes/GetImageOne.js","components/test/shapes/Form.js","components/test/shapes/FormQuestionShape.js","hooks/QuestionShape/useFetchQuestionShapeOne.js","components/test/shapes/Register.js","hooks/useNeerScreen.js","components/test/shapes/ProfileShape/TestBodyProfile.js","components/test/shapes/ShapeScreen.js","hooks/QuestionShape/useFetchQuestionShape.js","components/test/shapes/UpdatedScreen.js","router/private/TestsRouter.js","actions/testShape.js","hooks/useFetchTestShape.js","components/test/test-shape/ModalRegister.js","components/test/test-shape/TestShapeScreen.js","router/private/TestShapeRouter.js","actions/category.js","hooks/useFetchCategory.js","components/test/simple/category/ModalCategory.js","components/test/simple/category/CategoryScreen.js","actions/questionSimple.js","components/test/simple/ProfileSimple/PanelBody.js","components/test/simple/ProfileSimple/QuestionSimpleCard.js","components/test/simple/ProfileSimple/QuestionBodyProfile.js","components/test/simple/SimpleScreen.js","hooks/QuestionSimple/useFetchQuestionSimple.js","hooks/QuestionSimple/useFetchCategory.js","hooks/QuestionSimple/useFetchTestSimple.js","components/test/simple/SimpleScreenRegister.js","actions/testSimple.js","components/test/simple/test/ModalRegisterSimple.js","hooks/useFetchTestSimple.js","components/test/simple/test/TestScreenSimple.js","components/test/simple/FormUpdatedQuestion.js","components/test/simple/FormQuestionSimple.js","components/test/simple/UpdatedScreen.js","router/private/TestSimpleRouter.js","components/answers/shapes/ShapeScreeAnswers.js","hooks/Answers/Shape/useFetchTestShape.js","actions/answersSimple.js","components/answers/simples/FormWinzard.js","components/answers/simples/MapOfFormWinzard.js","components/answers/simples/SimpleScreenAnswers.js","hooks/Answers/Simple/useFetchAnswerSimple.js","components/answers/AnswersScreen.js","components/answers/simples/SelectionTestScreen.js","router/private/AnswersRouter.js","router/AppRouter.js","PsicologiaApp.js","index.js","actions/questionShape.js","actions/ui.js","types/types.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","tokenStart","token","localStorage","getItem","useFetchDestructureValue","pregunta","useState","image","setData","question","Buffer","from","toString","useEffect","useFetchOptionsDestructure","op1","op2","op3","op4","op5","op6","optionOne","optionTwo","optionThree","optionFour","optionFive","optionSix","option1","option2","option3","option4","option5","option6","TestShapeCard","questionData","option","dataOption","setDataOption","id_pregunta","nombre","id_test","respuesta_correcta","createdAt","updatedAt","nombreTest","test_formas","questions","Options","className","filterData","setFilterData","id","map","e","src","alt","moment","locale","PanelBody","dispatch","useDispatch","history","useHistory","Fragment","format","onClick","id_resp","questionClearShape","questionSetShape","push","handleActiveQuestions","questionDeleteShape","filter","handleDeleteQuestion","ShapeScreenQuestion","shape","useSelector","state","answerShape","uid","auth","limit","setLimit","questionsShape","useFetchQuestionShapeFindAll","disabledFinish","setDisabledFinish","disabledStart","setDisabledStart","setQuestion","images","setImages","limitAnswers","setLimitAnswers","answersShape","setAnswersShape","handlePrevQuestion","handleSelect","handleOfChangeTheValue","target","length","questionCorrect","index","findIndex","answers","filterDataAnswers","correctAnswer","value","newData","bien_mal","dataFilter","dato","undefined","changeAnswerData","answersShapeRegister","style","textAlign","paddingLeft","key","disabled","INITIAL_LIMIT","setQuestionsShape","testShapeLoading","skip","a","resp","json","ok","preguntaFormas","Swal","fire","msg","console","log","answersShapeActive","type","types","shapeAnswersActive","payload","answerShapeClear","shapeAnswersClear","now","persona_id","fecha_hora","initialState","checking","institutions","activeInstitution","questionActive","name","testShape","testShapeActive","uiDrowp","uiSidebar","uiSection","uiLoadingButton","uiLoadingSaveButton","uiDisabled","uiSelection","uiRegisterSelectAcordion","uiShowSelectInstitution","uiIconClose","uiModal","initState","testSimple","testActiveSimple","category","categoryActive","answersSimpleActive","rootReducer","combineReducers","ui","action","uiOpenSidebar","uiCloseSidebar","uiTrueDisabledButton","uiFalseDisabledButton","uiOpenSection","uiCloseSection","uiOpenDrowp","uiCloseDrowp","uiOpenLoadingButton","uiCloseLoadingButton","uiOpenLoadingSaveButton","uiCloseLoadingSaveButton","uieventLogout","institutionAcordionSelect","institutionAcordionDeselect","institutionSelectRegister","institutionDeselectRegister","institutionSelectShow","institutionDeselectShow","institutionOpenAcordion","institutionCloseAcordion","institutionIconClose","cheking","uiModalTrue","uiModalFalse","authLogin","authUserUpdate","authUserUpdatePassword","persona","authCheckingFinish","accountUpdate","authLogout","institution","institutionSetActive","find","id_institucion","institutionLoaded","institutionSetActiveClear","shapeLoaded","questionShape","questionSetActive","questionClearActive","tShape","testShapeClear","testShapeLoaded","tSimple","testSimpleActive","testSimpleClear","testSimpleLoaded","testSimpleCategoryActive","id_categoria","testSimpleCategoryClear","testSimpleCategoryLoaded","qSimple","questionSimpleSetActive","questionSimpleClearActive","answerSimple","answersSimpleClear","answersfilter","answersfilterActive","array","position","answersActive","shapeAnswer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","startLoginAddAccount","username","password","respPersona","setItem","Date","getTime","login","accountUpdated","checkingFinish","user","startLogout","clear","logout","useForm","values","setValues","reset","handleInputChange","AccountScreen","formAccountValues","handleAccountInputChange","primer_apellido","segundo_apellido","celular","imei","edad","dni","direccion","email","onSubmit","preventDefault","startUpdateAccount","placeholder","onChange","ChangePasswordScreen","passwordCurrent","passwordNew","passwordAgain","formPasswordValues","handlePasswordInputChange","inputStylePassword","color","trim","startUpdateUserPassword","marginRight","to","UserScreen","usuarios","formUserValues","handleUserInputChange","startUpdateUser","Aside","activeClassName","cursor","icon","faUniversity","display","faVial","exact","faVials","Header","width","height","Layout","children","AccountRouter","document","backgroundColor","path","component","LoginScreen","lUsername","lPassword","formLoginValues","handleLoginInputChange","autoFocus","autoComplete","href","role","tabIndex","RegisterScreen","cryptoRandomString","genero","padres_responsables","password2","formRegisterValues","handleRegisterInputChange","startRegister","AuthRouter","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","useFetchInstituions","setUiDisabled","data_institutions","setInstitutions","handleSwitchChange","useCallback","fetchInstitution","then","res","rows","instituciones","forEach","item","telefono","nit","nombre_contacto","modified","deleted","institutionDelete","catch","err","error","InstitutionScreen","columns","label","field","sort","noRecordsFoundLabel","scrollX","autoWidth","maxHeight","striped","bordered","small","useFormPhone","mobile","address","phone","emei","contact_name","formInstitutionValues","handleInstitutionInputChange","formInstitutionPhoneValues","handleInstitutionPhoneInputChange","startRegisterInstitution","inputExtraProps","required","dropdownClass","inputStyle","country","mask","maskChar","FormUpdate","newNit","updatedInstitution","UpdateScreen","i","InstitutionRouter","faThermometerQuarter","faThermometerThreeQuarters","faBong","paddingTop","paddingBottom","faCubes","fadeInKeyFrames","keyframes","Img","styled","img","time","css","fadeIn","ImgDefault","GetImage","onImageUpdate","onImageRemove","justifyContent","data_url","GetImageOne","alignItems","Form","questionImage","optionsImage","dataQuestionShape","setDataQuestionShape","respCorrect","formShapeInputValues","handleShapeInputValueChange","imagesQuestion","setImagesQuestion","paddingRight","size","multiple","imageList","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","formcontrolname","shapeEdit","shapeRegister","FormQuestionShape","data_questions_shape","useFetchQuestionShapeOne","questionsImage","setQuestionsImage","imageOptions","setImageOptions","DestructureValue","testFormas","options","Register","useNearScreen","distance","externalRef","once","isNearScreen","setShow","fromRef","useRef","observer","element","current","entries","isIntersecting","disconnect","Promise","resolve","IntersectionObserver","rootMargin","observe","TestBodyProfile","ShapeScreen","loading","setLoading","setSkip","concat","useFetchQuestionShape","debounceHandleNextPage","debounce","preveSkip","ref","UpdatedScreen","TestsRouter","TestShapeSetActiveClear","useFetcheTestShape","data_Tformas","fetchTFormas","testShapeSetActive","testShapeDelete","ModalRegister","Modal","setAppElement","formValues","setFormValues","closeModal","isOpen","onRequestClose","content","top","left","right","bottom","transform","closeTimeoutMS","ariaHideApp","updatedTestShape","TestShapeScreen","TestShape","TestShapeRouter","testSimpleCategory","TestSimpleCategorySetActiveClear","useFetchCategory","data_category","fetchTSimpleCategory","categorias","nombre_categoria","testSimpleCategoryDelete","ModalCategory","startRegisterCategory","CategoryScreen","questionSimple","setDataQuestion","setFilter","test_simples","nombre_test","handleActiveQuestionsSimple","questionSetSimple","handleDeleteQuestionSimple","questionDeleteSimple","QuestionSimpleCard","setState","QuestionBodyProfile","SimpleScreen","QuestionsSimple","setQuestionsSimple","simples_preguntas","useFetchQuestionSimple","debounceHandleNextPageSimple","categoryLoading","useFetchTestSimple","questionsSimple","testSimpleLoading","SimpleScreenRegister","categoryData","setCategoryData","testName","setTestName","nameCategory","setNameCategory","formQuestionSimpleInputValues","handleQuestionSimpleInputValueChange","id_category","TestSimpleSetActiveClear","ModalRegisterSimple","nombre_test_test","updatedTestSimple","data_simple","fetchTSimple","testSimpleDelete","TestScreenSimple","TestSimple","FormUpdatedQuestion","simpleEdit","FormQuestionSimple","TestSimpleRouter","ShapeScreeAnswers","dataShape","shapeLoading","useFetchTestShape","selectionDefault","setSelectionDefault","formSelectionInputValues","handleSelectionInputValueChange","DEFAULTVALUE","FormWinzard","Array","handleClick","answer","elements","arrayLength","htmlFor","defaultChecked","isFirst","prev","isLast","next","si","nose","no","answersRegister","MapOfFormWinzard","dataAnswers","config","navigation","location","SimpleScreenAnswers","data_answer","answersSimpleLoading","useFetchAnswerSimple","AnswersScreen","SelectionTestScreen","AnswersRouter","AppRouter","PsicologiaApp","ReactDOM","render","getElementById"],"mappings":"+HACA,wEAAMA,EAAUC,0CAGVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEtCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAM3BQ,EAAgB,SAACT,EAAUC,GAA2C,IAArCC,EAAoC,uDAA3B,MAAOQ,EAAoB,uDAAP,GAE1DP,EAAG,UAAMN,EAAN,YAAiBG,GACpBW,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXX,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWM,KAIC,KAAfD,EACEN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,KAIlBG,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWM,GAEfL,KAAMC,KAAKC,UAAUP,O,kGCjDpBa,EAA2B,WAAoB,IAAnBC,EAAkB,uDAAP,GAEhD,EAAwBC,mBAAS,CAAEC,MAAO,KAA1C,mBAAOhB,EAAP,KAAaiB,EAAb,KAEMC,EAAW,IAAIC,EAAOC,KAAKN,GAAUO,SAAS,SAUpD,OARAC,qBAAU,WAENL,EAAQ,CACJD,MAAOE,MAGZ,CAACJ,IAEGd,K,2HCdEuB,EAA6B,WAAmE,IAAjEC,EAAgE,uDAA1D,GAAIC,EAAsD,uDAAhD,GAAIC,EAA4C,uDAAtC,GAAIC,EAAkC,uDAA5B,GAAIC,EAAwB,uDAAlB,GAAIC,EAAc,uDAAR,GAEhG,EAA0Bd,mBAAS,IAAnC,mBAAQf,EAAR,KAAciB,EAAd,KAEMa,EAAc,IAAIX,EAAOC,KAAMI,GAAMH,SAAS,SAC9CU,EAAc,IAAIZ,EAAOC,KAAMK,GAAKJ,SAAS,SAC7CW,EAAc,IAAIb,EAAOC,KAAMM,GAAML,SAAS,SAC9CY,EAAc,IAAId,EAAOC,KAAMO,GAAMN,SAAS,SAC9Ca,EAAc,IAAIf,EAAOC,KAAMQ,GAAMP,SAAS,SAC9Cc,EAAc,IAAIhB,EAAOC,KAAMS,GAAMR,SAAS,SAcpD,OAZAC,qBAAU,WAENL,EAAQ,CACJmB,QAAUN,EACVO,QAAUN,EACVO,QAAUN,EACVO,QAAUN,EACVO,QAAUN,EACVO,QAAUN,MAEf,CAAEL,EAAWC,EAAWC,EAAaC,EAAYC,EAAYC,IAEzDnC,K,2ICvBE0C,EAAgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAE1C,EAAsC7B,mBAAS,IAA/C,mBAAQ8B,EAAR,KAAoBC,EAApB,KACSC,EAAgIJ,EAAhII,YAAajC,EAAmH6B,EAAnH7B,SAAUkC,EAAyGL,EAAzGK,OAAQC,EAAiGN,EAAjGM,QAASzB,EAAwFmB,EAAxFnB,IAAKC,EAAmFkB,EAAnFlB,IAAKC,EAA8EiB,EAA9EjB,IAAKC,EAAyEgB,EAAzEhB,IAAKC,EAAoEe,EAApEf,IAAKC,EAA+Dc,EAA/Dd,IAAKqB,EAA0DP,EAA1DO,mBAAoBC,EAAsCR,EAAtCQ,UAAWC,EAA2BT,EAA3BS,UAC9FC,EADyHV,EAAhBW,YACjHN,OAEFO,EAAc,IAAIpC,EAAOC,KAAMN,EAASd,MAAOqB,SAAS,SASxDmC,EAAU,CAPI,IAAIrC,EAAOC,KAAMI,EAAIxB,MAAOqB,SAAS,SACrC,IAAIF,EAAOC,KAAMK,EAAIzB,MAAOqB,SAAS,SACrC,IAAIF,EAAOC,KAAMM,EAAI1B,MAAOqB,SAAS,SACrC,IAAIF,EAAOC,KAAMO,EAAI3B,MAAOqB,SAAS,SACrC,IAAIF,EAAOC,KAAMQ,EAAI5B,MAAOqB,SAAS,SACrC,IAAIF,EAAOC,KAAMS,EAAI7B,MAAOqB,SAAS,UAiBzD,OANAC,qBAAU,WAENwB,EAAeF,KAEhB,CAAEA,IAGD,sBAAKa,UAAU,kBAAf,UACI,qBAAKA,UAAU,iCAAf,SACG,cAAC,IAAD,CACIF,UAAcA,EACdP,OAAWA,EACXG,UAAcA,EACdC,UAAcA,EACdF,mBAAuBA,EACvBG,WAAeA,EACfN,YAAgBA,EAChBE,QAAYA,EACZS,WAAeb,EACfc,cAAkBb,MAGzB,qBAAKW,UAAU,aAAf,SACI,qBAAKG,GAAG,UAAUH,UAAU,oBAA5B,SAEQD,EAAQK,KAAK,SAAEC,EAAGF,GAAL,OACT,sBAAKH,UAAU,4BAAf,UACI,qBAEIM,IAAMD,EACNE,IAAI,YACR,2CAAYJ,EAAK,EAAjB,SAL6CA,UAWjE,6B,0DChEZ,8GAOAK,IAAOC,OAAO,MAEP,IAAMC,EAAY,SAAC,GAA0K,IAAD,IAAvKpB,mBAAuK,MAAzJ,GAAyJ,MAArJE,eAAqJ,MAA3I,GAA2I,MAAvIM,iBAAuI,MAA3H,GAA2H,MAAvHP,cAAuH,MAA9G,GAA8G,MAA1GG,iBAA0G,MAA9F,GAA8F,MAA1FC,iBAA0F,MAA9E,GAA8E,MAA1EF,0BAA0E,MAArD,GAAqD,MAAjDG,kBAAiD,MAApC,GAAoC,EAAhCK,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAErKS,EAAWC,cAEXC,EAAUC,cAkBhB,OACI,eAAC,IAAMC,SAAP,WACI,qBAAKf,UAAU,WAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKM,IAAKR,EAAWS,IAAI,iBAGjC,qBAAKP,UAAU,WAAf,SACI,sBAAKA,UAAU,eAAf,UACI,wCACA,uBACA,sBAAMA,UAAU,aAAhB,SAA8BT,IAC9B,0CACA,uBACA,uBAAMS,UAAU,aAAhB,sBACcQ,IAAOd,GAAWsB,OAAO,iBACnC,uBAFJ,0BAG4BR,IAAOb,GAAWqB,OAAO,iBACjD,0BAGJ,uBACA,wBAAQC,QAAS,YAtCH,SAAC3B,EAAaC,EAAQC,EAAS0B,GAEzDP,EAASQ,eACTR,EAASS,YAAiB9B,EAAaC,EAAQC,EAAS0B,IACxDL,EAAQQ,KAAK,iCAkCwBC,CAAsBhC,EAAaC,EAAQC,EAASC,IAAuBO,UAAU,kBAA9G,oBAdJ,OAgBI,wBAAQiB,QAAS,YAjCJ,SAAC3B,GAC1BqB,EAASY,YAAoBjC,IAC7BY,EACID,EAAWuB,QACP,SAAAnB,GAAC,OAAKA,EAAEf,cAAgBA,MA6BKmC,CAAqBnC,IAAgBU,UAAU,kBAAxE,2BAGR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,wCACA,8BAAIT,EAAJ,OACA,oDACA,0CAAaE,KACb,mDACA,4BAAIG,c,mJC5DX8B,EAAsB,WAE/B,IAGMf,EAAWC,cAETe,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAArCH,MAEAI,EAAQH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAAnCD,IAER,EAA0BzE,mBATJ,GAStB,mBAAO2E,EAAP,KAAcC,EAAd,KAEQC,EAAmBC,YAA6BT,EAAOM,EAAOC,GAA9DC,eAER,EAA4C7E,oBAAS,GAArD,mBAAO+E,EAAP,KAAuBC,EAAvB,KAEA,EAA0ChF,oBAAS,GAAnD,mBAAOiF,EAAP,KAAsBC,EAAtB,KAEA,EAAgClF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBgF,EAAjB,KAEA,EAA4BnF,mBAAS,IAArC,mBAAOoF,EAAP,KAAeC,EAAf,KAEA,EAAwCrF,mBAAS,GAAjD,mBAAOsF,EAAP,KAAqBC,EAArB,KAEA,EAAwCvF,mBAAS,CAC7Cf,KAvBiB,KAsBrB,mBAAOuG,EAAP,KAAqBC,EAArB,KAQMC,EAAqB,WACvBd,EAASD,EAAQ,GACjBY,EAAgBD,EAAe,IAG7BK,EAAe,SAAC5C,GAClB6C,EAAuB7C,EAAE8C,OAAOhD,KAGpCtC,qBAAU,WAEN,OAAc,IAAVoE,GAEIO,GAAiB,GACjBF,GAAkB,IAGS,IAA1BH,EAAeiB,QAGhBd,GAAkB,GAClBE,GAAiB,KAIrBF,GAAkB,GAClBE,GAAiB,MAGtB,CAACL,EAAgBF,IAEpB,IAAMiB,EAAyB,SAACG,GAE5B,IAEMC,EAFcR,EAAavG,KAEPgH,WAAU,SAAAC,GAAO,OAAIA,EAAQrD,KAAOgC,EAAe,GAAG7C,eAE1EG,EAAqB0C,EAAe,GAAG1C,mBAIzCgE,EAAkBH,EAAO7D,EAAoB4D,IAO/CI,EAAoB,SAACH,EAAO7D,EAAoB4D,GAEvB,OAAvB5D,GAAmD,OAApB4D,EAE3B5D,EAAmB7B,aAAeyF,EAAgBzF,WAElD8F,EAAcJ,EAAO,EAAG7D,EAAoB4D,GAI5CK,EAAcJ,EAAO,EAAG7D,EAAoB4D,GAIrB,OAAvB5D,EAEAiE,EAAcJ,EAAO,EAAG,EAAG,GAEF,OAApBD,GAELK,EAAcJ,EAAO,EAAG7D,EAAoB,IAMlDiE,EAAgB,SAACJ,EAAOK,EAAOlE,EAAoB4D,GAErD,GAAyB,OAArBC,EAAM1F,WAEN,GAAI6B,EAAmB7B,aAAeyF,EAAgBzF,WAAY,CAE9D,IAAQrB,EAASuG,EAATvG,KAEFqH,EAAO,sBAENrH,GAFM,CAGT,CACI4D,GAAIgC,EAAe,GAAG7C,YACtBuE,SAAUF,KAIlBZ,EAAgB,CAAExG,KAAMqH,QAGvB,CAED,IAAQrH,EAASuG,EAATvG,KAEFqH,EAAO,sBAENrH,GAFM,CAGT,CACI4D,GAAIgC,EAAe,GAAG7C,YACtBuE,SAAUF,KAIlBZ,EAAgB,CAAExG,KAAMqH,QAGzB,CAEH,IAEME,EAFWhB,EAATvG,KAEgB6D,KAAI,SAAU2D,GAKlC,OAJIA,EAAK5D,KAAOgC,EAAe,GAAG7C,cAC9ByE,EAAKF,SAAWF,GAGbI,KAGXhB,EAAgB,CAAExG,KAAMuH,MA2ChC,OANAjG,qBAAU,gBAEoBmG,IAAtB7B,EAAe,IAlCE,WAGrB,IAAMrC,EAAY,IAAIpC,EAAOC,KAAKwE,EAAe,GAAG9E,SAASd,MAAMqB,SAAS,SAStEmC,EAAU,CAPE,IAAIrC,EAAOC,KAAKwE,EAAe,GAAGpE,IAAIxB,MAAMqB,SAAS,SACrD,IAAIF,EAAOC,KAAKwE,EAAe,GAAGnE,IAAIzB,MAAMqB,SAAS,SACnD,IAAIF,EAAOC,KAAKwE,EAAe,GAAGlE,IAAI1B,MAAMqB,SAAS,SACtD,IAAIF,EAAOC,KAAKwE,EAAe,GAAGjE,IAAI3B,MAAMqB,SAAS,SACrD,IAAIF,EAAOC,KAAKwE,EAAe,GAAGhE,IAAI5B,MAAMqB,SAAS,SACtD,IAAIF,EAAOC,KAAKwE,EAAe,GAAG/D,IAAI7B,MAAMqB,SAAS,UAUvE6E,EAAY3C,GACZ6C,EAAU5C,GAEVmD,EAAuB,MAWgBe,KAExC,CAAC9B,IAGA,cAAC,IAAMpB,SAAP,UAEmC,IAA1BoB,EAAeiB,SAAmC,IAAnBf,EAC5B,sBAAKrC,UAAU,sBAAf,UACI,uBACA,qBAAKA,UAAU,WAAf,SACI,wBAAQA,UAAU,mCACdiB,QAAS+B,EADb,wBAOJ,qBAAKhD,UAAU,WAAf,SACI,wBAAQA,UAAU,mCACdiB,QA3BO,WAE/BN,EAASuD,YAAqBnC,EAAKe,EAAavG,QAwB5B,oCAQR,0BAASyD,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,4BAK+B,IAA1BmC,EAAeiB,OACZ,8BACI,qBAAKpD,UAAU,WAAf,4BAKJ,sBAAKA,UAAU,aAAamE,MAAO,CAAEC,UAAW,UAAhD,UACI,qBAAKpE,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAYmE,MAAO,CAAEE,YAAa,MAAjD,SACI,sBAAKrE,UAAU,MAAf,UACI,qBAAKA,UAAU,oCACf,qBAAKA,UAAU,kCAAf,SACI,yBAASA,UAAU,QAAnB,SACI,qBAAKG,GAAG,UAAUH,UAAU,oBAAoBmE,MAAO,CAAEC,UAAW,UAApE,SACI,sBAAKpE,UAAU,4BAAf,UACI,qBACIM,IAAK7C,EACL8C,IAAI,YACR,0DAQ5B,qBAAKP,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAYmE,MAAO,CAAEE,YAAa,MAAjD,UACI,qBAAKrE,UAAU,MAAf,SAGS0C,IAAW,GAERA,EAAOtC,KAAI,SAACC,EAAGiE,GAAJ,OAGP,qBAAKtE,UAAU,kCAAf,SACI,yBAASA,UAAU,QAAnB,SACI,qBAAKG,GAAG,UAAUH,UAAU,oBAAoBmE,MAAO,CAAEC,UAAW,UAApE,SACI,sBAAKpE,UAAU,4BAAf,UACI,qBACIM,IAAKD,IAET,4CAAaiE,EAAM,KACnB,wBAAQtE,UAAU,eACdiB,QAASgC,EACT9C,GAAImE,EAAM,EAFd,iCARsCA,MAoB1D,gDAKZ,sBAAKtE,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAf,SACI,wBAAQA,UAAU,kBACdiB,QAAS+B,EACTuB,SAAUhC,EAFd,wBAKJ,qBAAKvC,UAAU,WAAf,SACI,wBAAQA,UAAU,kBACdiB,QA7QzB,WACvBiB,EAASD,EAAQ,GACjBY,EAAgBD,EAAe,IA4QiB2B,SAAUlC,EAFd,4C,uKCxSvCD,EAA+B,SAACT,EAAO6C,EAAetC,GAE/D,IAAMrB,EAAUC,cAChB,EAA4CxD,mBAAS,IAArD,mBAAO6E,EAAP,KAAuBsC,EAAvB,KAEA5G,qBAAU,WAEN,OAAO6G,EAAiB/C,EAAO6C,KAEhC,CAAC7C,EAAO6C,EAAetC,IAG1BrE,qBAAU,WAEN,OAAO,WACH4G,EAAkB,OAEvB,IAIH,IAAMC,EAAgB,uCAAG,WAAOlF,EAASmF,GAAhB,mBAAAC,EAAA,0DAEP,IAAVD,EAFiB,gBAGjBzC,EAAS,GAHQ,uCAOEnF,YAAc,8BAA+B,CAC5DkF,MAAO,EACP0C,KAAMA,EACNnF,WACD,QAXc,cAOXqF,EAPW,gBAaEA,EAAKC,OAbP,UAaXlI,EAbW,kBAiBTA,EAAKmI,GAjBI,wBAmBDC,EAAmBpI,EAAnBoI,eAnBC,kBAqBFP,EAAkBO,IArBhB,QAyBTC,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BtE,EAAQQ,KAAK,kBA1BJ,2DA8Bb+D,QAAQC,IAAR,MA9Ba,2DAAH,wDAoCtB,MAAO,CAAElD,oB,igBC1DAmD,EAAqB,SAACxD,GAAD,MAAkB,CAChDyD,KAAMC,IAAMC,mBACZC,QAAS5D,IAUA6D,EAAmB,iBAAO,CACnCJ,KAAMC,IAAMI,oBAGH1B,EAAuB,SAACnC,EAAKyB,GAEtC,6BAAO,4BAAAoB,EAAA,sDAEGiB,EAAMrF,MAASQ,SAFlB,SAKCwC,EAAQpD,IAAR,+BAAAwE,EAAA,MAAY,WAAOvE,GAAP,eAAAuE,EAAA,sEAEW7H,YAAc,uBAAwB,CACrDuC,YAAae,EAAEF,GACf2F,WAAY/D,EACZgE,WAAYF,EACZhC,SAAUxD,EAAEwD,UACb,QAPK,cAEFgB,EAFE,gBASWA,EAAKC,OAThB,kBAWCC,GAXD,0CAaGE,IAAKC,KAAK,KAAM,yBAA0B,YAb7C,iCAgBGD,IAAKC,KAAK,KAAM,uCAAwC,UAhB3D,4CAAZ,uDALD,wEA4BQD,IAAKC,KAAK,QAAS,6BAA8B,UA5BzD,0D,yKCpBLc,EAAe,CACjBC,UAAS,G,QCFPD,EAAe,CACjBE,aAAa,GACbC,kBAAkB,MCFhBH,EAAe,CACjBI,eAAgB,CACZ3I,SAAU,KACV4I,KAAM,GACN7G,QAAS,KACT0B,QAAS,OCLX8E,EAAe,CACjBrE,MAAM,ICAJqE,EAAe,CACjBM,UAAW,GACXC,gBAAiB,MCHfP,EAAe,CACjBQ,QAAQ,WACRC,UAAU,eACVC,UAAU,GACVC,gBAAgB,aAChBC,oBAAoB,aACpBC,YAAW,EAEXC,YAAY,OACZC,yBAAyB,GACzBC,wBAAwB,GAExBC,YAAY,YAEZC,SAAS,GCdPC,EAAY,CACdC,WAAY,GACZC,iBAAkB,MCDhBF,EAAY,CACdG,SAAS,GACTC,eAAgB,MCHdJ,EAAY,CACdf,eAAgB,ICAde,EAAY,CACdK,oBAAqB,KACrBhE,QAAS,MCHPwC,EAAe,CACjBrE,MAAO,ICALwF,EAAY,CACdrE,aAAc,ICUL2E,EAAcC,YAAgB,CACpCC,GPKkB,WAAoC,IAAlC9F,EAAiC,uDAAzBmE,EAAc4B,EAAW,uCACxD,OAASA,EAAOrC,MACZ,KAAKC,IAAMqC,cACP,OAAO,2BACAhG,GADP,IAEI4E,UAAU,iBAElB,KAAKjB,IAAMsC,eACP,OAAO,2BACAjG,GADP,IAEI4E,UAAU,+BAElB,KAAKjB,IAAMuC,qBACP,OAAO,2BACAlG,GADP,IAEIgF,YAAW,IAEnB,KAAKrB,IAAMwC,sBACP,OAAO,2BACAnG,GADP,IAEIgF,YAAW,IAEnB,KAAKrB,IAAMyC,cACP,OAAO,2BACApG,GADP,IAEI6E,UAAU,KAElB,KAAKlB,IAAM0C,eACP,OAAO,2BACArG,GADP,IAEI6E,UAAU,eAElB,KAAKlB,IAAM2C,YACP,OAAO,2BACAtG,GADP,IAEI2E,QAAQ,kBAEhB,KAAKhB,IAAM4C,aACP,OAAO,2BACAvG,GADP,IAEI2E,QAAQ,aAGhB,KAAKhB,IAAM6C,oBACP,OAAO,2BACAxG,GADP,IAEI8E,gBAAgB,eAExB,KAAKnB,IAAM8C,qBACP,OAAO,2BACAzG,GADP,IAEI8E,gBAAgB,0BAGxB,KAAKnB,IAAM+C,wBACP,kCACO1G,GADP,IAEI+E,oBAAoB,eAE5B,KAAKpB,IAAMgD,yBACP,kCACO3G,GADP,IAEI+E,oBAAoB,0BAG5B,KAAKpB,IAAMiD,cACP,OAAO,eACAzC,GAKX,KAAKR,IAAMkD,0BACP,8CACO7G,GACA+F,EAAOlC,SAFd,IAGIoB,YAAY,QACZb,UAAS,IAEjB,KAAKT,IAAMmD,4BACP,8CACO9G,GACA+F,EAAOlC,SAFd,IAGIoB,YAAY,OACZb,UAAS,IAEjB,KAAKT,IAAMoD,0BACP,8CACO/G,GACA+F,EAAOlC,SAFd,IAGIqB,yBAAyB,SACzBd,UAAS,IAEjB,KAAKT,IAAMqD,4BACP,8CACOhH,GACA+F,EAAOlC,SAFd,IAGIqB,yBAAyB,GACzBd,UAAS,IAGjB,KAAKT,IAAMsD,sBACP,OAAO,uCACAjH,GACA+F,EAAOlC,SAFd,IAGIsB,wBAAwB,WAEhC,KAAKxB,IAAMuD,wBACP,OAAO,uCACAlH,GACA+F,EAAOlC,SAFd,IAGIsB,wBAAwB,KAEhC,KAAKxB,IAAMwD,wBAMX,KAAKxD,IAAMyD,yBACP,8CACOpH,GACA+F,EAAOlC,SAFd,IAGIO,UAAS,IAEjB,KAAKT,IAAM0D,qBACP,8CACOrH,GACA+F,EAAOlC,SAFd,IAGIuB,YAAY,YACZkC,SAAQ,IAEhB,KAAK3D,IAAM4D,YACP,OAAO,2BACAvH,GADP,IAEIqF,SAAS,IAEjB,KAAK1B,IAAM6D,aACP,OAAO,2BACAxH,GADP,IAEIqF,SAAS,IAIjB,QACI,OAAOrF,IOrJZG,KZPoB,WAAqC,IAAnCH,EAAkC,uDAA1BmE,EAAc4B,EAAY,uCAE3D,OAAQA,EAAOrC,MAEX,KAAKC,IAAM8D,UACH,8CACOzH,GACA+F,EAAOlC,SAFd,IAGIO,UAAU,IAEtB,KAAKT,IAAM+D,eAKX,KAAK/D,IAAMgE,uBACP,OAAO,2BACA3H,GADP,IAEI4H,QAAS7B,EAAOlC,UAExB,KAAKF,IAAMkE,mBACP,kCACO7H,GADP,IAEIoE,UAAS,IAEjB,KAAKT,IAAMmE,cACP,OAAO,2BACA9H,GADP,IAEI4H,QAAS7B,EAAOlC,UAExB,KAAKF,IAAMoE,WACP,MAAO,CACH3D,UAAU,GAGlB,QACI,OAAOpE,IY5BZgI,YXV2B,WAAqC,IAAnChI,EAAkC,uDAA1BmE,EAAc4B,EAAY,uCAElE,OAASA,EAAOrC,MAGZ,KAAKC,IAAMsE,qBACP,OAAO,2BACAjI,GADP,IAEIsE,kBAAmBtE,EAAMqE,aAAa6D,MAAO,SAAAF,GAAW,OAAIA,EAAYG,eAAepM,aAAegK,EAAOlC,QAAQvF,QAE7H,KAAKqF,IAAMyE,kBACP,OAAO,2BACApI,GADP,IAEIqE,aAAa,YAAM0B,EAAOlC,WAElC,KAAKF,IAAM0E,0BACP,OAAO,2BACArI,GADP,IAEIsE,kBAAkB,OAG1B,QACI,OAAOtE,IWXZF,MTZqB,WAAqC,IAAnCE,EAAkC,uDAA1BmE,EAAc4B,EAAY,uCAE5D,OAASA,EAAOrC,OAEPC,IAAM2E,YACA,2BACAtI,GADP,IAEIF,MAAM,YAAKiG,EAAOlC,WAGf7D,GSGZuI,cVRsB,WAAqC,IAAnCvI,EAAkC,uDAA1BmE,EAAc4B,EAAY,uCAE7D,OAASA,EAAOrC,MAEZ,KAAKC,IAAM6E,kBACP,OAAO,2BACAxI,GADP,IAEIuE,eAAgBwB,EAAOlC,UAE/B,KAAKF,IAAM8E,oBACP,OAAO,2BACAzI,GADP,IAEIuE,eAAgB,OAGxB,QACI,OAAOvE,IUPZ0I,ORZyB,WAAsC,IAApC1I,EAAmC,uDAA3BmE,EAAc4B,EAAa,uCAEjE,OAASA,EAAOrC,MAEZ,KAAKC,IAAMe,gBACP,OAAO,2BACA1E,GADP,IAEI0E,gBAAiB1E,EAAMyE,UAAUyD,MAAO,SAAA1J,GAAC,OAAIA,EAAEb,QAAQ5B,aAAegK,EAAOlC,QAAQvF,QAE7F,KAAKqF,IAAMgF,eACP,OAAO,2BACA3I,GADP,IAEI0E,gBAAiB,OAEzB,KAAKf,IAAMiF,gBACP,OAAO,2BACA5I,GADP,IAEIyE,UAAU,YAAMsB,EAAOlC,WAG/B,QACI,OAAO7D,IQRZ6I,QNd0B,WAAkC,IAAhC7I,EAA+B,uDAAvBsF,EAAWS,EAAY,uCAE9D,OAASA,EAAOrC,MACZ,KAAKC,IAAMmF,iBACP,OAAO,2BACA9I,GADP,IAEIwF,iBAAkBxF,EAAMuF,WAAW2C,MAAO,SAAA1J,GAAC,OAAIA,EAAEb,QAAQ5B,aAAegK,EAAOlC,QAAQvF,QAE/F,KAAKqF,IAAMoF,gBACP,OAAO,2BACA/I,GADP,IAEIwF,iBAAkB,OAE1B,KAAK7B,IAAMqF,iBACP,OAAO,2BACAhJ,GADP,IAEIuF,WAAW,YAAMQ,EAAOlC,WAGhC,QACI,OAAO7D,IMLZyF,SLdkC,WAAkC,IAAhCzF,EAA+B,uDAAvBsF,EAAWS,EAAY,uCAEtE,OAASA,EAAOrC,MACZ,KAAKC,IAAMsF,yBACP,OAAO,2BACAjJ,GADP,IAEI0F,eAAgB1F,EAAMyF,SAASyC,MAAO,SAAA1J,GAAC,OAAIA,EAAE0K,aAAanN,aAAegK,EAAOlC,QAAQvF,QAEhG,KAAKqF,IAAMwF,wBACP,OAAO,2BACAnJ,GADP,IAEI0F,eAAgB,OAExB,KAAK/B,IAAMyF,yBACP,OAAO,2BACApJ,GADP,IAEIyF,SAAS,YAAKM,EAAOlC,WAG7B,QACI,OAAO7D,IKLZqJ,QJjB8B,WAAkC,IAAhCrJ,EAA+B,uDAAvBsF,EAAWS,EAAY,uCAElE,OAASA,EAAOrC,MAEZ,KAAKC,IAAM2F,wBACP,OAAO,2BACAtJ,GADP,IAEIuE,eAAiBwB,EAAOlC,UAEhC,KAAKF,IAAM4F,0BACP,OAAO,2BACAvJ,GADP,IAEIuE,eAAgB,KAGxB,QACI,OAAOvE,IIEZwJ,aHhB6B,WAAkC,IAAhCxJ,EAA+B,uDAAvBsF,EAAWS,EAAY,uCAEjE,OAASA,EAAOrC,MAEZ,KAAKC,IAAMgC,oBACP,kCACO3F,GADP,IAEI2F,oBAAqBI,EAAOlC,UAEpC,KAAKF,IAAM8F,mBACP,kCACOzJ,GADP,IAEI2F,oBAAqB,OAE7B,KAAKhC,IAAM+F,cACH,kCACO1J,GADP,IAEI2B,QAASoE,EAAOlC,UAE5B,KAAKF,IAAMgG,oBACP,IAAIC,EAAQ5J,EAAM2B,QAElB,OADAiI,EAAO7D,EAAOlC,QAAQgG,UAAa9D,EAAOlC,QAAQiG,cAClD,2BACO9J,GADP,IAEI2B,QAASiI,IAEjB,QACI,OAAQ5J,IGVbC,YFnB4B,WAAmC,IAAlCD,EAAiC,uDAAzBmE,EAAc4B,EAAW,uCAGjE,OAAQA,EAAOrC,MAEX,KAAKC,IAAMC,mBACP,OAAO,2BACA5D,GADP,IAEIF,MAAOiG,EAAOlC,UAEtB,KAAKF,IAAMI,kBACP,OAAO,2BACA/D,GADP,IAEIF,MAAO,KAEf,QACI,OAAOE,IEIZ+J,YDnB4B,WAAkC,IAAhC/J,EAA+B,uDAAvBsF,EAAWS,EAAY,uCAEhE,OAASA,EAAOrC,MAEZ,KAAKC,IAAMF,mBACP,kCACOzD,GADP,IAEIiB,aAAc8E,EAAOlC,UAE7B,KAAKF,IAAM8F,mBACP,kCACOzJ,GADP,IAEIiB,aAAc,KActB,QACI,OAAQjB,ME7BdgK,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBzE,EACAoE,EACIM,YAAiBC,O,wEC0CZC,EAAuB,SAACC,EAAUC,GAC7C,8CAAO,WAAO5L,GAAP,yBAAAiE,EAAA,sEACcvI,YAAc,OAAQ,CAAEiQ,WAAUC,YAAY,QAD5D,cACC1H,EADD,gBAEcA,EAAKC,OAFnB,cAEClI,EAFD,OAICkJ,EAAalJ,EAAKmF,IAJnB,SAKqBhF,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OATF,cAKCuP,EALD,iBAYqBA,EAAY1H,OAZjC,iBAYG2E,EAZH,EAYGA,QAEJ7M,EAAKmI,IACP7H,aAAauP,QAAQ,QAAS7P,EAAKK,OACnCC,aAAauP,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDhM,EACEiM,EAAM,CACJ7K,IAAKnF,EAAKmF,IACVuK,SAAU1P,EAAK0P,SACf7C,QAASA,KAGb9I,EAAS0H,eACT1H,EAASqH,iBAET/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS0H,eACT1H,EAASqH,gBA9BN,4CAAP,uDA0TI6E,EAAiB,SAACpD,GAAD,MAAc,CACnClE,KAAMC,IAAMmE,cACZjE,QAAS+D,IAGLqD,EAAiB,iBAAO,CAAEvH,KAAMC,IAAMkE,qBAEtCkD,EAAQ,SAACG,GAAD,MAAW,CACvBxH,KAAMC,IAAM8D,UACZ5D,QAASqH,IAGEC,EAAc,WACzB,OAAO,SAACrM,GACNzD,aAAa+P,QACbtM,EAAS8H,eACT9H,EAASuM,OAIPA,EAAS,iBAAO,CAAE3H,KAAMC,IAAMoE,a,eChYvBuD,EAAU,WAA2B,IAAzBnH,EAAwB,uDAAT,GAEpC,EAA4B1I,mBAAS0I,GAArC,mBAAOoH,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWrH,IAGTuH,EAAoB,SAAC,GAAiB,IAAdpK,EAAa,EAAbA,OAK1BkK,EAAU,2BACHD,GADE,kBAELjK,EAAOkD,KAAQlD,EAAOQ,UAK9B,MAAO,CAAEyJ,EAAQG,EAAkBD,I,OCjB1BE,EAAgB,WAEzB,IAAM7M,EAAWC,cAET6I,EAAY7H,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAAvCyH,QAER,EAA4C7H,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Df,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,WAE7B,EAAwDsG,EAAS1D,GAAjE,mBAAQgE,EAAR,KAA2BC,EAA3B,KAEQ5H,EAAsG2H,EAAtG3H,WAAYvG,EAA0FkO,EAA1FlO,OAAQoO,EAAkFF,EAAlFE,gBAAiBC,EAAiEH,EAAjEG,iBAAkBC,EAA+CJ,EAA/CI,QAASC,EAAsCL,EAAtCK,KAAMC,EAAgCN,EAAhCM,KAAMC,EAA0BP,EAA1BO,IAAKC,EAAqBR,EAArBQ,UAAWC,EAAUT,EAAVS,MAcpG,OANArQ,qBAAU,WACN8C,EAAUqH,iBAEX,CAAErH,IAID,qBAAKX,UAAU,4BAAf,SACI,yBAASA,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKG,GAAG,WAAWH,UAAU,kBAA7B,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,6DAEJ,uBAAMO,IAAI,aAAaP,UAAU,kBAAkBmO,SAtB1D,SAAE9N,GACnBA,EAAE+N,iBAEFzN,EF6K0B,SAChCmF,EACAvG,EACAoO,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,8CAAO,WAAOvN,GAAP,uBAAAiE,EAAA,6DACLjE,EAAS6H,eACT7H,EAASoH,eAFJ,kBAKgBhL,YACjB,eACA,CACE+I,aACAvG,SACAoO,kBACAC,mBACAC,UACAC,OACAC,OACAC,MACAC,YACAC,SAEF,OAnBC,cAKGrJ,EALH,gBAqBgBA,EAAKC,OArBrB,cAqBGlI,EArBH,iBAuBuBG,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OA3BJ,eAuBGuP,EAvBH,iBA8BuBA,EAAY1H,OA9BnC,iBA8BK2E,EA9BL,EA8BKA,QAEJ7M,EAAKmI,IACPpE,EAASkM,EAAepD,IACxB9I,EAAS4H,eACT5H,EAASqH,iBAET/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS4H,eACT5H,EAASqH,gBAvCR,kDA0CH5C,QAAQC,IAAR,MACA1E,EAAS4H,eACT5H,EAASqH,eA5CN,0DAAP,sDEzLgBqG,CAAoBvI,EAAYvG,EAAQoO,EAAiBC,EAAkBC,EAASC,EAAMC,EAAMC,EAAKC,EAAWC,KAmBlG,UACI,sBAAKlO,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,4BAGA,sBAAKA,UAAU,WAAf,UACI,qBACIA,UAAU,qBACVM,IAAI,gFACJC,IAAI,WAER,uBACA,uBACA,uBAAOgF,KAAK,OAAOvF,UAAU,uBAGrC,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,oBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACL+I,YAAY,SACZ3K,MAAQpE,EACRgP,SAAYb,EACZvN,GAAG,SACHkG,KAAK,SACLrG,UAAU,sBAGtB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,6BACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACL+I,YAAY,kBACZnO,GAAG,kBACHkG,KAAK,kBACL1C,MAAQgK,EACRY,SAAYb,EACZ1N,UAAU,sBAGtB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,8BACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,mBACHkG,KAAK,mBACLrG,UAAU,eACV2D,MAAQiK,EACRW,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,4BACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,UACHkG,KAAK,UACLrG,UAAU,eACV2D,MAAQkK,EACRU,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,kBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,OACHkG,KAAK,OACLrG,UAAU,eACV2D,MAAQmK,EACRS,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,iBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,MACHkG,KAAK,MACLrG,UAAU,eACV2D,MAAQqK,EACRO,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,kBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,OACHkG,KAAK,OACLrG,UAAU,eACV2D,MAAQoK,EACRQ,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,mBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,QACHkG,KAAK,QACLrG,UAAU,eACV2D,MAAQuK,EACRK,SAAYb,SAIxB,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,0BACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLpF,GAAG,YACHkG,KAAK,YACLrG,UAAU,eACV2D,MAAQsK,EACRM,SAAYb,SAIxB,uBACA,sBAAK1N,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,kBACA,qBAAKA,UAAU,WAAf,SACI,yBAAQuF,KAAK,SAASvF,UAAU,sCAAsCuE,SAAWsC,EAAjF,UACI,mBAAG7G,UAAY4G,IADnB,qCC1K/B4H,EAAuB,WAEhC,IAAM7N,EAAWC,cAEjB,EAA4CgB,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Df,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,WACrBf,EAAelE,aAAY,SAAAC,GAAK,OAAIA,EAAMG,KAAKyH,WAA/C3D,WAER,EAA0DqH,EAAQ,CAE9DsB,gBAAgB,GAChBC,YAAY,GACZC,cAAc,KAJlB,mBAAQC,EAAR,KAA4BC,EAA5B,KAOMC,EAAqB,CACvBC,MAAM,WAGFN,EAAgDG,EAAhDH,gBAAiBC,EAA+BE,EAA/BF,YAAaC,EAAkBC,EAAlBD,cAEtC9Q,qBAAU,WACN,MAA4B,KAAvB6Q,EAAYM,QAA2C,KAAzBL,EAAcK,QAA2C,KAA3BP,EAAgBO,QAGxEP,EAAgBO,OAAO5L,QAAU,GAAKsL,EAAYM,OAAO5L,QAAU,GAAKuL,EAAcK,OAAO5L,QAAU,EAFrGzC,EAAUoH,oBAMnBpH,EAAUqH,iBAEb,CAAEyG,EAAiBC,EAAaC,EAAehO,IASlD,OACI,qBAAKX,UAAU,YAAf,SACI,yBAASA,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKG,GAAG,WAAWH,UAAU,kBAA7B,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,yDAEJ,uBAAMO,IAAI,OAAOP,UAAU,kBAC3BmO,SAjBC,SAAE9N,GAC3BA,EAAE+N,iBACFzN,EHuQ+B,SACrCmF,EACA2I,EACAC,EACAC,GAEA,8CAAO,WAAOhO,GAAP,uBAAAiE,EAAA,yDACLjE,EAAS6H,eACT7H,EAASoH,eAFJ,WAKwB,KAAvB2G,EAAYM,QAAiBN,EAAYM,OAAO5L,QAAU,GAL3D,0CAOC6B,IAAKC,KAAK,QAAS,gCAA8B,SACjDvE,EAAS4H,eACT5H,EAASqH,iBATV,UAWQ0G,IAAgBC,EAXxB,0CAaC1J,IAAKC,KAAK,QAAS,kCAAgC,SACnDvE,EAAS4H,eACT5H,EAASqH,iBAfV,wBAmBgBjL,YACjB,qBACA,CAAE+I,aAAY2I,kBAAiBC,eAC/B,OAtBC,eAmBG7J,EAnBH,iBAwBgBA,EAAKC,OAxBrB,eAwBGlI,EAxBH,iBA0BuBG,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OA9BJ,eA0BGuP,EA1BH,iBAiCuBA,EAAY1H,OAjCnC,iBAiCK2E,EAjCL,EAiCKA,QAERrE,QAAQC,IAAIzI,GAERA,EAAKmI,IACPpE,EACEiM,EAAM,CACJnD,QAASA,KAGb9I,EAAS4H,eACT5H,EAASqH,iBAET/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS4H,eACT5H,EAASqH,gBAhDR,kDAmDH5C,QAAQC,IAAR,MAnDG,0DAAP,sDG7QgB4J,CAAyBnJ,EAAY2I,EAAiBC,EAAaC,KAcrD,UAGI,sBAAK3O,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,kCACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,WACL+I,YAAY,uBACZ3K,MAAQ8K,EACRF,SAAYM,EACZ1O,GAAG,kBACHkG,KAAK,kBACLrG,UAAU,eACVmE,MAAQ2K,SAIpB,sBAAK9O,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,iCACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,WACLpF,GAAG,cACHkG,KAAK,cACLiI,YAAY,sBACZtO,UAAU,eACV2D,MAAQ+K,EACRH,SAAYM,EACZ1K,MAAQ2K,SAIpB,sBAAK9O,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,mCACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,WACL+I,YAAY,yBACZnO,GAAG,gBACHkG,KAAK,gBACLrG,UAAU,eACV2D,MAAQgL,EACRJ,SAAYM,EACZ1K,MAAQ2K,SAIpB,uBACA,qBAAK9O,UAAU,aAAf,SACI,sBAAKA,UAAU,2BAAf,UAEI,yBACIA,UAAU,2BACVmE,MAAO,CAAE+K,YAAY,GACrB3J,KAAK,SACLhB,SAAWsC,EAJf,UAKC,mBACD7G,UAAY4G,IANZ,kBAQA,eAAC,IAAD,CACI5G,UAAU,2BACVmE,MAAO,CAAE+K,YAAY,GACrB3J,KAAK,SACL4J,GAAG,gBAJP,UAKC,mBAAGnP,UAAU,gBALd,qC,uBC1G5CQ,IAAOC,OAAO,MAEP,I,SAAM2O,GAAa,WAEtB,IAAMzO,EAAWC,cAEjB,EAAiCgB,aAAY,SAAAC,GAAK,OAAIA,EAAMG,KAAKyH,WAAzD4F,EAAR,EAAQA,SAAUvJ,EAAlB,EAAkBA,WAClB,EAA4ClE,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Df,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,WAE7B,EAAkDsG,EAASkC,EAAS,IAApE,mBAAQC,EAAR,KAAwBC,EAAxB,KAEQjD,EAAoCgD,EAApChD,SAAU5M,EAA0B4P,EAA1B5P,UAAWC,EAAe2P,EAAf3P,UAgB7B,OAVA9B,qBAAU,WAGN,GAFA8C,EAAUqH,eAEc,KAApBsE,EAAS0C,OACT,OAAOrO,EAAUoH,eAErBpH,EAAUqH,iBAEX,CAAEsE,EAAU3L,IAGX,qBAAKX,UAAU,4BAAf,SACI,yBAASA,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKG,GAAG,WAAWH,UAAU,kBAA7B,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,yDAEJ,uBAAMO,IAAI,OAAOP,UAAU,kBAC3BmO,SAzBH,SAAE9N,GACvBA,EAAE+N,iBACFzN,EJqOuB,SAACmF,EAAYwG,GAC1C,8CAAO,WAAO3L,GAAP,uBAAAiE,EAAA,yDACLjE,EAAS6H,eACT7H,EAASoH,eAFJ,SAKqB,KAApBuE,EAAS0C,OALV,0CAOC/J,IAAKC,KAAK,QAAS,yBAA0B,SAC7CvE,EAAS4H,eACT5H,EAASqH,iBATV,uBAagBjL,YACjB,oBACA,CAAE+I,aAAYwG,YACd,OAhBC,cAaGzH,EAbH,iBAkBgBA,EAAKC,OAlBrB,eAkBGlI,EAlBH,iBAoBuBG,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OAxBJ,eAoBGuP,EApBH,iBA2BuBA,EAAY1H,OA3BnC,iBA2BK2E,EA3BL,EA2BKA,QAEJ7M,EAAKmI,IACPpE,EACEiM,EAAM,CACJ7K,IAAKnF,EAAKmF,IACVuK,SAAU1P,EAAK0P,SACf7C,QAASA,KAGb9I,EAAS4H,eACT5H,EAASqH,iBAET/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS4H,eACT5H,EAASqH,gBA1CR,kDA6CH5C,QAAQC,IAAR,MA7CG,0DAAP,sDItOgBmK,CAAiB1J,EAAYwG,KAsBf,UAGI,sBAAKtM,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,uBACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACL+I,YAAY,YACZ3K,MAAQ2I,EACRiC,SAAYgB,EACZpP,GAAG,WACHkG,KAAK,WACLrG,UAAU,sBAGtB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,kCACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLhB,UAAQ,EACR8B,KAAK,SACLrG,UAAU,eACV2D,MAAQnD,IAAOd,GAAWsB,OAAO,wBAI7C,sBAAKhB,UAAU,aAAf,UACI,uBAAOA,UAAU,yBAAjB,qCACA,qBAAKA,UAAU,WAAf,SACI,uBACIuF,KAAK,OACLhB,UAAQ,EACR8B,KAAK,SACLrG,UAAU,eACV2D,MAAQnD,IAAOb,GAAWqB,OAAO,wBAI7C,uBACA,qBAAKhB,UAAU,aAAf,SACI,sBAAKA,UAAU,2BAAf,UAEI,yBACIA,UAAU,2BACVmE,MAAO,CAAE+K,YAAY,GACrB3J,KAAK,SACLhB,SAAWsC,EAJf,UAKC,mBAAG7G,UAAY4G,IALhB,kBAMA,eAAC,IAAD,CACI5G,UAAU,2BACVmE,MAAO,CAAE+K,YAAY,GACrB3J,KAAK,SACL4J,GAAG,iBAJP,UAMA,mBAAGnP,UAAU,eANb,kD,oCCtF/ByP,GAAQ,WAEjB,IAAM9O,EAAWC,cAEjB,EAA2EgB,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA9Fb,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,yBAA0BC,EAA/C,EAA+CA,wBAEvCP,EAAc7E,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAzClB,UA0ER,OACI,gCACI,qBACItG,GAAG,UACHH,UAAWyG,EAFf,SAII,qBAAKzG,UAAU,sBAAf,SACI,qBAAIA,UAAU,eAAeG,GAAG,gBAAhC,UAEI,oBAAIH,UAAU,WAAWiB,QAjFb,SAACZ,GAC7BA,EAAE+N,iBAEFzN,EAASgI,eACThI,EAASkI,eACTlI,EAASoI,eACTpI,EAASgF,iBA2EO,SACI,eAAC,IAAD,CAASwJ,GAAG,QAAQO,gBAAgB,SAApC,UACI,mBAAG1P,UAAU,eACb,+CAIR,qBAAIA,UAAU,WAAWmE,MAAO,CAAEwL,OAAQ,WAA1C,UACI,qBAAK1O,QA/EH,SAACZ,GAEvB,GADAA,EAAE+N,iBACkB,UAAhBtH,EACA,OACInG,EAASgI,eACThI,EAASkI,eACTlI,EAASoI,eAGjBpI,EAAS+H,eACT/H,EAASgF,iBAqEW,SACI,eAAC,IAAD,CAASwJ,GAAG,eAAeO,gBAAgB,SAA3C,UACI,4BACI,cAAC,KAAD,CAAiBE,KAAMC,SAE3B,uDAGR,qBAAI7P,UAAU,MAAMmE,MAAO,CAAE2L,QAAShJ,GAAtC,UACI,oBAAI9G,UAAWgH,EAAyB/F,QAzEtC,SAACZ,GAC3BA,EAAE+N,iBACFzN,EAASmI,eACTnI,EAASkI,eACTlI,EAASgF,iBAqEe,SACI,cAAC,IAAD,CAASwJ,GAAG,oBAAZ,oCAIJ,oBAAInP,UAAW+G,EAA0B9F,QAvEnC,SAACZ,GAC/BA,EAAE+N,iBACFzN,EAASiI,eACTjI,EAASoI,eACTpI,EAASgF,iBAmEe,SACI,cAAC,IAAD,CAASwJ,GAAG,eAAZ,+BAMZ,oBAAInP,UAAU,WAAWmE,MAAO,CAAEwL,OAAQ,WAA1C,SACI,qBAAK1O,QAxES,SAACZ,GAGnC,GADAA,EAAE+N,iBACkB,UAAhBtH,EACA,OACInG,EAASoI,eACTpI,EAASgI,eACThI,EAASkI,eAGjBlI,EAASgF,iBA8DW,SAEI,eAAC,IAAD,CAASwJ,GAAG,iBAAiBO,gBAAgB,SAA7C,UACI,4BACI,cAAC,KAAD,CACIE,KAAMG,SAGd,4DAIZ,oBAAI/P,UAAU,WAAWmE,MAAO,CAAEwL,OAAQ,WAA1C,SACI,qBAAK1O,QAvEC,SAACZ,GAG3B,GADAA,EAAE+N,iBACkB,UAAhBtH,EACA,OACInG,EAASoI,eACTpI,EAASgI,eACThI,EAASkI,eAGjBlI,EAASgF,iBA6DW,SACI,eAAC,IAAD,CAASwJ,GAAG,WAAWO,gBAAgB,SAASM,OAAK,EAArD,UACI,4BACI,cAAC,KAAD,CAAiBJ,KAAMK,SAE3B,kDAIZ,oBAAIhP,QAlEH,WACjBN,EAASgF,gBACThF,EAASqM,MAgEO,SACI,eAAC,IAAD,CAASmC,GAAG,cAAcnP,UAAU,QAApC,UACI,mBAAGA,UAAU,mBACb,mECpJnBkQ,GAAS,WAClB,MAA+BtO,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAlDnB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAEX9F,EAAWC,cA+BjB,OACI,yBAAQZ,UAAU,4BAAlB,UACI,sBAAKA,UAAU,QAAf,UAEI,cAAC,IAAD,CACIA,UAAU,OAAOmP,GAAG,aADxB,SAEI,qBACI7O,IAAI,+EACJ6D,MAAO,CAAEgM,MAAO,IAAKC,OAAQ,IAAM7P,IAAI,WAG/C,qBACIP,UAAU,qBACViB,QA1CM,SAACZ,GAGnB,GAFAA,EAAE+N,iBAEgB,iBAAd3H,EACA,OACI9F,EAASmH,eACTnH,EAASuH,eAGjBvH,EAASkH,eACTlH,EAASsH,gBA8BD,SAII,qBAAKjI,UAAU,oBAIvB,qBAAKA,UAAU,mBAAf,SACI,oBAAIA,UAAU,0BAAd,SACI,qBACIA,UAAWwG,EADf,UAGI,eAAC,IAAD,CAAM,cAAY,WACdxG,UAAU,kBACViB,QA1CH,SAACZ,GAGlB,GAFAA,EAAE+N,iBAEc,aAAZ5H,EAEA,OAAO7F,EAASwH,eAIpBxH,EAASyH,gBAkCWjE,MAAO,CAAEwL,OAAQ,WACjBR,GAAG,IAJP,UAMI,qBAAK5O,IAAI,QAAQD,IAAI,kFACrB,sBAAMN,UAAU,WAAhB,uCACA,mBAAGA,UAAU,aAEjB,qBAAIA,UAAU,gCAAd,UACI,6BACI,eAAC,IAAD,CAAMmP,GAAG,QAAT,UACI,mBAAGnP,UAAU,oBADjB,cAKJ,6BACI,eAAC,IAAD,CAAMmP,GAAG,gBAAT,UACI,mBAAGnP,UAAU,cADjB,wBAKJ,oBAAIA,UAAU,QAAQiB,QApDzB,WACjBN,EAASqM,MAmDW,SACI,eAAC,IAAD,CACImC,GAAG,IADP,UAGI,mBAAGnP,UAAU,cAHjB,sCCpFnBqQ,GAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEb5J,EAAc9E,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAzCjB,UAER,OAEI,0BAASvG,GAAG,YAAZ,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACD,yBACIA,GAAG,eACHH,UAAY0G,EAFhB,SAII,yBAAS1G,UAAU,UAAnB,SAEGsQ,UCXLC,GAAgB,WAIzB,OAFAC,SAAS5T,KAAKuH,MAAMsM,gBAAkB,GAGlC,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,QACLC,UAAYnD,IAEhB,cAAC,IAAD,CACIwC,OAAK,EACLU,KAAK,gBACLC,UAAYvB,KAEhB,cAAC,IAAD,CACIY,OAAK,EACLU,KAAK,iBACLC,UAAYnC,IAEhB,cAAC,IAAD,CAAUW,GAAG,gBCtBhByB,GAAc,WAEvB,MAAwChP,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA3DhB,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,WAEnBlG,EAAWC,cAEjB,EAAoDuM,EAAQ,CACxD0D,UAAU,SACVC,UAAU,kBAFd,mBAAQC,EAAR,KAAyBC,EAAzB,KAKQH,EAAyBE,EAAzBF,UAAWC,EAAcC,EAAdD,UA4BnB,OAZAjT,qBAAU,WAEN,MAA0B,KAArBgT,EAAU7B,QAAuC,KAArB8B,EAAU9B,QAGlC8B,EAAU9B,OAAO5L,QAAU,EAFzBzC,EAAUoH,oBAKrBpH,EAAUqH,iBAEX,CAAE6I,EAAWC,EAAWnQ,IAGvB,qBAAKX,UAAU,8CAAf,SACI,uBAAMA,UAAU,cAAcmO,SA5BlB,SAAE9N,GAGlB,OAFAA,EAAE+N,iBAEwB,KAArByC,EAAU7B,QAAsC,KAArB8B,EAAU9B,OAC/B/J,IAAKC,KAAK,KAAM,sCAAsC,SAExD4L,EAAU9B,OAAO5L,QAAU,EAC1B6B,IAAKC,KAAK,KAAV,8DAAqE4L,EAAU9B,OAAO5L,QAAa,cAG7GzC,GTlBmB2L,ESkBGuE,ETlBOtE,ESkBIuE,ETjBvC,uCAAO,WAAOnQ,GAAP,yBAAAiE,EAAA,6DACLjE,EAAS2H,eACT3H,EAASoH,eAFJ,SAIc1L,YAAc,OAAQ,CAAEiQ,WAAUC,YAAY,QAJ5D,cAIC1H,EAJD,gBAKcA,EAAKC,OALnB,cAKClI,EALD,OAOCkJ,EAAalJ,EAAKmF,IAPnB,UAQqBhF,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OAZF,eAQCuP,EARD,iBAeqBA,EAAY1H,OAfjC,iBAeG2E,EAfH,EAeGA,QAEJ7M,EAAKmI,IACP7H,aAAauP,QAAQ,QAAS7P,EAAKK,OACnCC,aAAauP,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDhM,EACEiM,EAAM,CACJ7K,IAAKnF,EAAKmF,IACVuK,SAAU1P,EAAK0P,SACf7C,QAASA,KAGb9I,EAAS0H,eACT1H,EAASqH,iBAET/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS0H,eACT1H,EAASqH,gBAjCN,4CAAP,wDADwB,IAACsE,EAAUC,GSoCzB,UACI,oBAAIvM,UAAU,sBAAd,mCACA,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,uBACIuF,KAAK,OACLc,KAAK,YACLrG,UAAU,eACVsO,YAAY,WACZ2C,WAAS,EACTC,aAAa,MACbvN,MAAQkN,EACRtC,SAAWyC,IAEf,uBACIzL,KAAK,WACLc,KAAK,YACLrG,UAAU,eACVsO,YAAY,WACZ4C,aAAa,MACbvN,MAAQmN,EACRvC,SAAWyC,OAGnB,wBAAOhR,UAAU,WAAjB,UACI,sBAAMA,UAAU,aAAhB,SACI,mBAAG,cAAY,QAAQmR,KAAK,WAA5B,kDAEJ,0BAEJ,yBAAQnR,UAAU,iCAAkCuE,SAAWsC,EAAatB,KAAK,SAAjF,UACI,mBAAG,qBAAmB,GAAGvF,UAAY2G,IADzC,wBAIA,sBAAK3G,UAAU,eAAf,sCAEI,cAAC,IAAD,CACImP,GAAG,iBADP,iCAOR,qBAAK,cAAY,OAAO,kBAAgB,eAAeiC,KAAK,SAASC,SAAS,KAAKlR,GAAG,UAAUH,UAAU,gBAAgBmE,MAAO,CAAE2L,QAAQ,QAA3I,SACI,qBAAK9P,UAAU,eAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,wBAAQuF,KAAK,SAASvF,UAAU,QAAQ,eAAa,QAAQ,cAAY,OAAzE,kBACA,oBAAIA,UAAU,cAAd,gDAEJ,sBAAKA,UAAU,aAAf,UACI,mFACA,uBAAOuF,KAAK,OAAOc,KAAK,QAAQiI,YAAY,QAAQ4C,aAAa,MAAMlR,UAAU,uCAGrF,sBAAKA,UAAU,eAAf,UACI,wBAAQ,eAAa,QAAQA,UAAU,kBAAkBuF,KAAK,SAA9D,oBACA,wBAAQvF,UAAU,kBAAkBuF,KAAK,SAAzC,oC,oBCjGnB+L,GAAiB,WAE1B,IAAM3Q,EAAWC,cAEjB,EAAwCgB,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA3DhB,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,WAEzB,EAAwDsG,EAAQ,CAE5D5N,OAAQ,YACRoO,gBAAiB,qBACjBC,iBAAkB,sBAClBC,QAAQ,GAAD,OAAK0D,KAAmB,CAAEnO,OAAQ,EAAGmC,KAAM,aAClDuI,KAAK,GAAD,OAAKyD,KAAmB,CAAEnO,OAAQ,GAAImC,KAAM,aAChDiM,OAAQ,YACRzD,KAAM,KACNE,UAAW,aACXwD,oBAAqB,SACrBzD,IAAI,GAAD,OAAKuD,KAAmB,CAAEnO,OAAQ,EAAGmC,KAAM,cAC9C2I,MAAM,GAAD,OAAKqD,KAAmB,CAAEnO,OAAQ,EAAGmC,KAAM,oBAA3C,cACL+G,SAAU,GACVC,SAAU,GACVmF,UAAW,GACX1H,eAAgB,MAhBpB,mBAAO2H,EAAP,KAA2BC,EAA3B,KAoBQrS,EAAsKoS,EAAtKpS,OAAQoO,EAA8JgE,EAA9JhE,gBAAiBC,EAA6I+D,EAA7I/D,iBAAkBC,EAA2H8D,EAA3H9D,QAASC,EAAkH6D,EAAlH7D,KAAM0D,EAA4GG,EAA5GH,OAAQzD,EAAoG4D,EAApG5D,KAAME,EAA8F0D,EAA9F1D,UAAWwD,EAAmFE,EAAnFF,oBAAqBzD,EAA8D2D,EAA9D3D,IAAKE,EAAyDyD,EAAzDzD,MAAO5B,EAAkDqF,EAAlDrF,SAAUC,EAAwCoF,EAAxCpF,SAAUvC,EAA8B2H,EAA9B3H,eAAgB0H,EAAcC,EAAdD,UAsBhK,OAdA7T,qBAAU,WAEN,MAAwB,KAApB0O,EAASyC,QAAsC,KAArB0C,EAAU1C,QAAqC,KAApB1C,EAAS0C,QAGzDzC,EAASyC,OAAO5L,QAAU,GAAKsO,EAAU1C,OAAO5L,QAAU,EAFxDzC,EAASoH,oBAKpBpH,EAASqH,iBAEV,CAACuE,EAAUmF,EAAWpF,EAAU3L,IAK/B,qBAAKX,UAAU,YAAf,SACI,uBAAMA,UAAU,cAAcmO,SAtBX,SAAC9N,GACxBA,EAAE+N,iBAEFzN,EV+CqB,SAC3BpB,EACAoO,EACAC,EACAC,EACAC,EACA0D,EACAzD,EACAE,EACAwD,EACAzD,EACAE,EACA5B,EACAC,EACAmF,EACA1H,GAEA,8CAAO,WAAOrJ,GAAP,iBAAAiE,EAAA,yDACLjE,EAAS2H,eACT3H,EAASoH,eAELwE,IAAamF,EAJZ,0CAMDzM,IAAKC,KAAK,KAAM,kCAAgC,SAChDvE,EAAS0H,eACT1H,EAASqH,iBARR,YAWHuE,EAASyC,OAAO5L,QAAU,GAE1BsO,EAAU1C,OAAO5L,QAAU,GAEd,KAAbkJ,GAfG,0CAkBDrH,IAAKC,KAAK,KAAM,wCAAyC,SACzDvE,EAAS0H,eACT1H,EAASqH,iBApBR,wBAwBc3L,YACjB,WACA,CACEkD,SACAoO,kBACAC,mBACAC,UACAC,OACA0D,SACAzD,OACAE,YACAwD,sBACAzD,MACAE,QACA5B,WACAC,WACAvC,kBAEF,QA1CG,eAwBCnF,EAxBD,iBA4CcA,EAAKC,OA5CnB,SA4CClI,EA5CD,QA8CImI,GACPpE,EAAS0L,EAAqBC,EAAUC,KAExCtH,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAS0H,eACT1H,EAASqH,gBAnDN,4CAAP,sDUhEe6J,CAActS,EAAQoO,EAAiBC,EAAkBC,EAASC,EAAM0D,EAAQzD,EAAME,EAAWwD,EAAqBzD,EAAKE,EAAO5B,EAAUC,EAAUmF,EAAW1H,KAmBtK,UACI,oBAAIhK,UAAU,sBAAd,0BAEA,sBAAKA,UAAU,aAAf,UAEI,uBACIuF,KAAK,OACLc,KAAK,WACLrG,UAAU,eACVsO,YAAY,YACZ3K,MAAO2I,EACPiC,SAAUqD,IAGd,uBACIrM,KAAK,WACLc,KAAK,WACLrG,UAAU,eACVsO,YAAY,gBACZ3K,MAAO4I,EACPgC,SAAUqD,IAEd,uBACIrM,KAAK,WACLvF,UAAU,eACVsO,YAAY,0BACZjI,KAAK,YACL1C,MAAO+N,EACPnD,SAAUqD,IAGd,yBAAQ5R,UAAU,iCAAiCuF,KAAK,SAAShB,SAAUsC,EAA3E,UACI,mBAAG,qBAAmB,GAAG7G,UAAW2G,IADxC,mBAIA,sBAAK3G,UAAU,eAAf,sCAEI,cAAC,IAAD,CAAMmP,GAAG,cAAT,iCC3FX2C,GAAa,WAItB,OAFAtB,SAAS5T,KAAKuH,MAAMsM,gBAAkB,UAGlC,8BACI,eAAC,IAAD,WACQ,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,cACLC,UAAaC,KAEjB,cAAC,IAAD,CACIZ,OAAK,EACLU,KAAK,iBACLC,UAAYW,KAGhB,cAAC,IAAD,CAAUnC,GAAG,sB,4CCpBpB4C,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFtB,UACGuB,EACD,mBAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIvB,UAAY,SAACwB,GAAD,OACPH,EACO,cAACC,EAAD,eAAgBE,IACjB,cAAC,IAAD,CAAUhD,GAAG,qB,mCCXvBiD,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFtB,UACGuB,EACD,mBACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACAvB,UAAY,SAAEwB,GAAF,OACPH,EACG,cAAC,IAAD,CAAU7C,GAAG,UACb,cAAC8C,EAAD,eAAgBE,S,SC2FnBjI,GAA4B,iBAAO,CAC5C3E,KAAKC,IAAM0E,4BCjGFmI,GAAsB,WAE/B,IAAM1R,EAAWC,cACjB,EAAoCtD,oBAAS,GAA7C,mBAAOuJ,EAAP,KAAmByL,EAAnB,KACMzR,EAAUC,cAEhB,EAAwCxD,mBAAS,CAC7CiV,kBAAmB,KADvB,mBAAOrM,EAAP,KAAqBsM,EAArB,KAIMC,EAAqBC,uBAAY,WACnCJ,GAAc,KACf,IAqEH,OAnEAzU,qBAAU,WAEN,IAAM8U,EAAmB,WAErB5V,YAAc,kBAAmB,OAC5B6V,MAAK,SAAAC,GAAG,OAAIA,EAAI/N,UAChB8N,MAAK,SAAA9N,GAEF,IAAIgO,EAAO,GAEXhO,EAAKiO,cAAcC,SAAQ,SAAAC,GAAI,OAAIH,EAAKzR,KAAK,CACzC2I,eAAgBiJ,EAAKjJ,eACrBzK,OAAQ0T,EAAK1T,OACb0O,UAAWgF,EAAKhF,UAChBJ,QAASoF,EAAKpF,QACdqF,SAAUD,EAAKC,SACfpF,KAAMmF,EAAKnF,KACXqF,IAAKF,EAAKE,IACVC,gBAAiBH,EAAKG,gBACtBC,SAAU,wBAAQrT,UAAU,kBAAkBG,GAAI8S,EAAKjJ,eAAgB/I,QAAS,SAACZ,GAE7E,OACIM,EDiEC,SAAEuF,GAAF,MAAqB,CAClDX,KAAMC,IAAMyE,kBACZvE,QAASQ,GCnE4B+D,CAAkBnF,EAAKiO,gBAChCpS,EDCI,SAAEuF,EAAc/F,GAAhB,MAAyB,CACzDoF,KAAKC,IAAMsE,qBACXpE,QAAS,CAAEQ,eAAc/F,OCHY2J,CAAqBhF,EAAKiO,cAAe1S,EAAE8C,OAAOhD,KAC3DU,EAAQQ,KAAK,wBALX,uBAQViS,QAAS,wBAAQtT,UAAU,kBAAkBuE,SAAUsC,EAAY1G,GAAI8S,EAAKjJ,eACxE/I,QAAS,SAACZ,GACN,OACIkT,EAAkBlT,EAAE8C,OAAOhD,KAH9B,2BAQbqS,EAAgB,CAAED,kBAAmBO,OAExCU,OAAM,SAAAC,GAAG,OAAIrO,QAAQsO,MAAMD,OAG9BF,EAAoB,SAACvJ,GAEvByI,IAEA1V,YAAc,oBAAqB,CAC/BiN,kBACD,UACE4I,MAAK,SAAAC,GACEA,EAAI9N,KACJE,IAAKC,KAAK,KAAM,2BAAyB,WACzCyN,QAGPa,OAAM,SAAAC,GAAG,OACNrO,QAAQsO,MAAMD,OAM1B,OAHAd,IAGO,WACHH,EAAgB,CAAED,kBAAmB,KACrCD,GAAc,MAGnB,CAACzR,EAASF,EAAUkG,EAAY4L,IAE5BvM,GCpFEyN,GAAoB,WAE/B,IAAMhT,EAAWC,cAIXrE,EAAO,CACXqX,QAAS,CACP,CACEC,MAAO,SACPC,MAAO,SACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,YACPC,MAAO,YACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,MACPC,MAAO,MACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,WACPC,MAAO,WACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,UACPC,MAAO,UACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,OACPC,MAAO,OACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,qBACPC,MAAO,kBACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,YACPC,MAAO,WACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,WACPC,MAAO,UACPC,KAAM,MACN5D,MAAO,MAGX2C,KA3D0CT,KAApCE,mBAoER,OANA1U,qBAAU,WAER8C,EAASuJ,QAER,CAACvJ,IAIF,qBAAKX,UAAU,4BAAf,SACE,0BAASA,UAAU,QAAnB,UACE,wBAAQA,UAAU,gBAAlB,wBAIGzD,EAAKuW,KAAK1P,SAAW,GAEpB,qBAAKpD,UAAU,aAAf,SACE,cAAC,KAAD,CACEgU,oBAAoB,cACpBC,SAAO,EACPC,WAAW,EACXC,UAAU,OACVC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/X,KAAMA,MAIV,qBAAKyD,UAAU,aAAf,SACE,4E,wCCnGDuU,I,OAAe,WAA2B,IAAzBvO,EAAwB,uDAAT,GAEzC,EAA4B1I,mBAAS0I,GAArC,mBAAOoH,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWrH,IAGTuH,EAAoB,SAAG5J,GAIzB0J,EAAU,2BACHD,GADE,IAENoH,OAAS7Q,MAKhB,MAAO,CAAEyJ,EAAQG,EAAkBD,KCX1BgE,GAAiB,WAE1B,IAAM3Q,EAAWC,cACjB,EAA4CgB,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Dd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,oBAEpB,EAA8DuG,EAAQ,CAClE9G,KAAM,GACNoO,QAAS,GACTC,MAAO,GACPC,KAAM,GACNxB,IAAK,GACLyB,aAAc,KANlB,mBAAOC,EAAP,KAA8BC,EAA9B,KAQA,EAAwEP,GAAa,CACjFC,OAAQ,KADZ,mBAAOO,EAAP,KAAmCC,EAAnC,KAIQ3O,EAAkDwO,EAAlDxO,KAAMoO,EAA4CI,EAA5CJ,QAASC,EAAmCG,EAAnCH,MAAOC,EAA4BE,EAA5BF,KAAMxB,EAAsB0B,EAAtB1B,IAAKyB,EAAiBC,EAAjBD,aACjCJ,EAAWO,EAAXP,OAuBR,OAhBA3W,qBAAU,WAIN,OAFA8C,EAASuJ,MAEW,KAAhB7D,EAAK2I,QAAoC,KAAnByF,EAAQzF,QAAkC,KAAjB0F,EAAM1F,QAAiC,KAAhB2F,EAAK3F,QAAgC,KAAfmE,EAAInE,QAAyC,KAAxB4F,EAAa5F,QAAmC,KAAlBwF,EAAOxF,QAElJrO,EAAS4H,eACT5H,EAASoH,gBAIVpH,EAASqH,iBAGjB,CAACyM,EAASC,EAAOC,EAAMxB,EAAKyB,EAAcJ,EAAQnO,EAAM1F,IAGvD,qBAAKX,UAAU,4BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,sCAGA,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMkR,aAAa,MAAM/C,SA7BtB,SAAC9N,GACpBA,EAAE+N,iBACFzN,EJ3BgC,SAAE0F,EAAMoO,EAASC,EAAOC,EAAMxB,EAAKyB,EAAcJ,GACrF,8CAAO,WAAO7T,GAAP,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAEW,KAAhB1B,EAAK2I,QAAoC,KAAnByF,EAAQzF,QAAkC,KAAjB0F,EAAM1F,QAAiC,KAAhB2F,EAAK3F,QAAgC,KAAfmE,EAAInE,QAAyC,KAAxB4F,EAAa5F,QAAmC,KAAlBwF,EAAOxF,OALxJ,0CAQK/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAVf,uBAcgBjL,YAAe,iBAAiB,CAC3CwC,OAAO8G,EACP4H,UAAUwG,EACV5G,QAAQ2G,EACRtB,SAASwB,EACT5G,KAAK6G,EACLxB,IAAIA,EACJC,gBAAgBwB,GACpB,QAtBD,cAcG/P,EAdH,gBAuBgBA,EAAKC,OAvBrB,QAuBGlI,EAvBH,QA0BOmI,IACNE,IAAKC,KAAK,KAAK,4BAA0B,WACzCvE,EAAU4H,eACV5H,EAAUqH,iBAEV/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBAjCX,4CAAP,sDI0BaiN,CAAyB5O,EAAMoO,EAASC,EAAOC,EAAMxB,EAAKyB,EAAcJ,KA2BjE,UACI,sBAAKxU,UAAU,aAAf,UACI,2CACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,OACHmO,YAAY,iBACZjI,KAAK,OACL1C,MAAO0C,EACPkI,SAAUuG,OAGlB,sBAAK9U,UAAU,aAAf,UACI,iDACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,UACHmO,YAAY,uBACZjI,KAAK,UACL1C,MAAO8Q,EACPlG,SAAUuG,OAGlB,sBAAK9U,UAAU,aAAf,UACI,4CACA,cAAC,KAAD,CACIkV,gBAAiB,CACb7O,KAAMmO,EACNW,UAAU,EACVlE,WAAW,GAEfmE,cAAc,WACdC,WAAY,CAAElF,MAAO,QACrB7B,YAAY,qBACZ3K,MAAO6Q,EACPjG,SAAUyG,EACVM,QAAQ,UAGhB,sBAAKtV,UAAU,aAAf,UACI,6CACA,cAAC,KAAD,CACIsO,YAAY,mBACZtO,UAAU,eACVuV,KAAK,aACLpR,MAAO,CAAE4K,MAAO,SAChByG,SAAU,KACVnP,KAAK,QACLlG,GAAG,QACHwD,MAAO+Q,EACPnG,SAAUuG,OAGlB,sBAAK9U,UAAU,aAAf,UACI,yCACA,cAAC,KAAD,CACIA,UAAU,eACVuV,KAAK,kBACLpR,MAAO,CAAE4K,MAAO,SAChByG,SAAU,KACVlH,YAAY,eACZnO,GAAG,OACHkG,KAAK,OACL1C,MAAOgR,EACPpG,SAAUuG,OAGlB,sBAAK9U,UAAU,aAAf,UACI,wCACA,cAAC,KAAD,CACIA,UAAU,eACVuV,KAAK,gBACLpR,MAAO,CAAE4K,MAAO,SAChByG,SAAU,KACVrV,GAAG,MACHmO,YAAY,cACZjI,KAAK,MACL1C,MAAOwP,EACP5E,SAAUuG,OAGlB,sBAAK9U,UAAU,aAAf,UACI,uDACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,eACHmO,YAAY,6BACZjI,KAAK,eACL1C,MAAOiR,EACPrG,SAAUuG,OAGlB,yBAAQvP,KAAK,SAASvF,UAAU,eAAeuE,SAAUsC,EAAzD,UACI,mBAAG7G,UAAW4G,IADlB,6BC/If6O,GAAa,SAAC,GAAqB,IAAD,IAAjBlZ,YAAiB,MAAV,GAAU,EAErCoE,EAAWC,cAEjB,EAAsIrE,EAA7HgD,cAAT,MAAkB,GAAlB,IAAsIhD,EAAhHsR,eAAtB,MAAgC,GAAhC,IAAsItR,EAAlG0R,iBAApC,MAAgD,GAAhD,IAAsI1R,EAAlF2W,gBAApD,MAA+D,GAA/D,IAAsI3W,EAAnEuR,YAAnE,MAA0E,GAA1E,IAAsIvR,EAAxD4W,WAA9E,MAAoF,GAApF,IAAsI5W,EAA9C6W,uBAAxF,MAA0G,GAA1G,IAAsI7W,EAAxByN,sBAA9G,MAA+H,GAA/H,EAEA,EAA4CpI,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Dd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,oBAEpB,EAAgEuG,EAAQ,CACpE9G,KAAM9G,EACNkV,QAASxG,EACTyG,MAAOxB,EACPyB,KAAM7G,EACN4H,OAAQvC,EACRyB,aAAcxB,IANlB,mBAAQyB,EAAR,KAA+BC,EAA/B,KASA,EAA0EP,GAAa,CACnFC,OAAQ3G,IADZ,mBAAQkH,EAAR,KAAoCC,EAApC,KAIQ3O,EAAqDwO,EAArDxO,KAAMoO,EAA+CI,EAA/CJ,QAASC,EAAsCG,EAAtCH,MAAOC,EAA+BE,EAA/BF,KAAMe,EAAyBb,EAAzBa,OAAQd,EAAiBC,EAAjBD,aACpCJ,EAAWO,EAAXP,OAoBR,OAbA3W,qBAAU,WACN,GAAqB,KAAhBwI,EAAK2I,QAAoC,KAAnByF,EAAQzF,QAAkC,KAAjB0F,EAAM1F,QAAiC,KAAhB2F,EAAK3F,QAAmC,KAAlB0G,EAAO1G,QAAyC,KAAxB4F,EAAa5F,QAAmC,KAAlBwF,EAAOxF,OAC1J,OACIrO,EAAU4H,eACV5H,EAAUoH,eAIlBpH,EAAUqH,iBAGX,CAAEyM,EAASC,EAAOC,EAAMe,EAAQd,EAAcJ,EAAQnO,EAAM1F,IAG3D,qBAAKX,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMkR,aAAa,MAAM/C,SArBf,SAAC9N,GACnBA,EAAE+N,iBACFzN,ELiB0B,SAAE0F,EAAMoO,EAASC,EAAOC,EAAMe,EAAQd,EAAcJ,EAAQxK,GAC1F,8CAAO,WAAQrJ,GAAR,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,SAOsB,KAAhB1B,EAAK2I,QAAoC,KAAnByF,EAAQzF,QAAkC,KAAjB0F,EAAM1F,QAAiC,KAAhB2F,EAAK3F,QAAmC,KAAlB0G,EAAO1G,QAAyC,KAAxB4F,EAAa5F,QAAmC,KAAlBwF,EAAOxF,OAP/J,0CAUS/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAZnB,uBAgBoBjL,YAAe,oBAAqB,CACnDwC,OAAO8G,EACP4H,UAAUwG,EACV5G,QAAQ2G,EACRtB,SAASwB,EACT5G,KAAK6G,EACLxB,IAAIuC,EACJtC,gBAAgBwB,EAChB5K,eAAeA,GAChB,OAzBJ,cAgBOnF,EAhBP,iBA2BoBA,EAAKC,OA3BzB,SA2BOlI,EA3BP,QA6BWmI,IACNE,IAAKC,KAAK,KAAK,6BAA2B,WAC1CvE,EAAU4H,eACV5H,EAAUqH,iBAEV/C,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBApCf,yDAyCC5C,QAAQC,IAAR,MAzCD,mBA2CKJ,IAAKC,KAAK,QAAS,6BAA8B,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBA7Cf,0DAAP,sDKlBc2N,CAAoBtP,EAAMoO,EAASC,EAAOC,EAAMe,EAAQd,EAAcJ,EAAQxK,KAmBhF,UACI,sBAAKhK,UAAU,aAAf,UACI,2CACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,OACHmO,YAAY,iBACZjI,KAAK,OACL1C,MAAQ0C,EACRkI,SAAWuG,OAGnB,sBAAK9U,UAAU,aAAf,UACI,iDACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,UACHmO,YAAY,uBACZjI,KAAK,UACL1C,MAAQ8Q,EACRlG,SAAWuG,OAGnB,sBAAK9U,UAAU,aAAf,UACI,4CACA,cAAC,KAAD,CACIkV,gBAAiB,CACb7O,KAAM,MACN8O,UAAU,EACVlE,WAAW,GAEfmE,cAAc,WACdC,WAAY,CAAElF,MAAM,QACpB7B,YAAY,qBACZ3K,MAAQ6Q,EACRjG,SAAWyG,EACXM,QAAQ,UAGhB,sBAAKtV,UAAU,aAAf,UACI,6CACJ,cAAC,KAAD,CACQsO,YAAY,mBACZtO,UAAU,eACVuV,KAAK,aACLpR,MAAO,CAAE4K,MAAM,SACfyG,SAAU,KACVnP,KAAK,QACLlG,GAAG,QACHwD,MAAQ+Q,EACRnG,SAAWuG,OAGnB,sBAAK9U,UAAU,aAAf,UACI,yCACA,cAAC,KAAD,CACIA,UAAU,eACVuV,KAAK,kBACLpR,MAAO,CAAE4K,MAAM,SACfyG,SAAU,KACVlH,YAAY,eACZnO,GAAG,OACHkG,KAAK,OACL1C,MAAQgR,EACRpG,SAAWuG,OAGnB,sBAAK9U,UAAU,aAAf,UACI,wCACA,cAAC,KAAD,CACIA,UAAU,eACVuV,KAAK,gBACLpR,MAAO,CAAE4K,MAAM,SACfyG,SAAU,KACVrV,GAAG,SACHmO,YAAY,cACZjI,KAAK,SACL1C,MAAQ+R,EACRnH,SAAWuG,OAGnB,sBAAK9U,UAAU,aAAf,UACI,uDACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,eACHmO,YAAY,6BACZjI,KAAK,eACL1C,MAAQiR,EACRrG,SAAWuG,OAGnB,yBAAQvP,KAAK,SAASvF,UAAU,eAChCuE,SAAWsC,EADX,UAGI,mBACA7G,UAAY4G,IAJhB,wBC7IPgP,GAAe,WAExB,IAAQzP,EAAsBvE,aAAY,SAAAC,GAAK,OAAIA,EAAMgI,eAAjD1D,kBACFtF,EAAWC,cAEjB,OACI,qBAAKd,UAAU,4BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,sCAI2B,OAAtBmG,EAEG,CAACA,GAAmB/F,KAAI,SAAEC,EAAGwV,GAAL,OACpB,cAAC,GAAD,CAAsBtZ,KAAO8D,GAAXwV,MAGtBhV,EAAQQ,KAAK,2BChBxByU,GAAoB,WAI7B,OAFAtF,SAAS5T,KAAKuH,MAAMsM,gBAAkB,GAGlC,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,eACLC,UAAYW,KAEhB,cAAC,IAAD,CACItB,OAAK,EACLU,KAAK,oBACLC,UAAYgD,KAEhB,cAAC,IAAD,CACI3D,OAAK,EACLU,KAAK,sBACLC,UAAYiF,KAEhB,cAAC,IAAD,CAAUzG,GAAG,uBCxBhBmC,GAAiB,WAE1B,OACI,eAAC,IAAMvQ,SAAP,WACI,sBAAKf,UAAU,sBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMmG,SAE3B,sBAAK/V,UAAU,iBAAf,UACI,sCADJ,sCAMR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMoG,SAE3B,sBAAKhW,UAAU,iBAAf,UACI,sCADJ,oCAMR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,wBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMmG,SAE3B,sBAAK/V,UAAU,iBAAf,UACI,sCADJ,2CAOZ,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,6BACI,8BACI,cAAC,KAAD,CAAiB4P,KAAMqG,OACvB,yDAGR,mFAGA,cAAC,IAAD,CAASjW,UAAU,mCACfmP,GAAG,wBADP,yBAMA,sBAAKnP,UAAU,MAAMmE,MAAO,CAAE+R,WAAY,QAA1C,UACI,qBAAKlW,UAAU,WAAWmE,MAAO,CAAEgS,cAAe,QAAlD,SACI,cAAC,IAAD,CAASnW,UAAU,mCACfmP,GAAG,eADP,mCAMJ,qBAAKnP,UAAU,WAAf,SACI,cAAC,IAAD,CAASA,UAAU,kCACfmP,GAAG,wBADP,oCAOR,cAAC,IAAD,CAASnP,UAAU,gCACfmP,GAAG,uBADP,8BAQJ,sBAAKnP,UAAU,WAAf,UACI,6BACI,8BACI,cAAC,KAAD,CAAiB4P,KAAMwG,OACvB,2DAGR,gFAGA,cAAC,IAAD,CAASpW,UAAU,mCACfmP,GAAG,wBADP,yBAMA,sBAAKnP,UAAU,MAAMmE,MAAO,CAAE+R,WAAY,QAA1C,UACI,qBAAKlW,UAAU,WAAWmE,MAAO,CAAEgS,cAAe,QAAlD,SACI,cAAC,IAAD,CAASnW,UAAU,mCACfmP,GAAG,+BADP,mCAMJ,qBAAKnP,UAAU,WAAf,SACI,cAAC,IAAD,CAASA,UAAU,gCACfmP,GAAG,cADP,8C,SCzFfhF,GAAc,SAAExI,GAAF,MAAc,CACrC4D,KAAMC,IAAM2E,YACZzE,QAAS/D,I,2DCtBP0U,GAAkBC,aAAH,mICERC,GAAMC,KAAOC,IAAV,uLDQM,wEAAkC,GAAlC,IAAGC,YAAH,MAAU,KAAV,MAAgBnR,YAAhB,MAAuB,OAAvB,SACpBoR,aADqB,IAAD,4CACJD,EAAQL,GAAmB9Q,GCRzCqR,CAAO,CAAEF,KAAM,UASNG,GAAaL,KAAOC,IAAV,8NCVVK,GAAW,SAAC,GAA4C,IAA1Cva,EAAyC,EAAzCA,KAAMwa,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAI5C,OACI,cAAC,IAAMjW,SAAP,UAEQxE,EAAK6D,KAAI,SAAC7C,EAAO+F,GAAR,OACL,sBAAiBtD,UAAU,kCACvBmE,MAAO,CAAE8S,eAAgB,UAD7B,UAGI,4BAEwBjT,IAAnBzG,EAAM2Z,SAEH,cAACX,GAAD,CAAKjW,IAAK/C,EAAK,SAAcgD,IAAI,gBAAgBP,UAAU,gBAE3D,cAAC6W,GAAD,CAAYvW,IAflB,+EAesCC,IAAI,gBAAgBP,UAAU,gBAEtE,uBACA,sBAAKA,UAAU,0BAAf,UACI,uBACA,wBAAQA,UAAU,eAAemE,MAAO,CAAE+K,YAAa,GAAKjO,QAAS,kBAAM8V,EAAczT,IAAzF,wBACA,wBAAQtD,UAAU,iBAAiBmE,MAAO,CAAE+K,YAAa,GAAKjO,QAAS,kBAAM+V,EAAc1T,IAA3F,2BAfEA,SCRjB6T,GAAc,SAAC,GAA4C,IAA1C5a,EAAyC,EAAzCA,KAAMwa,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAI/C,OACI,cAAC,IAAMjW,SAAP,UAEQxE,EAAK6D,KAAI,SAAC7C,EAAO+F,GAAR,OACL,sBACIa,MAAO,CAAE8S,eAAgB,SAAUG,WAAY,UADnD,UAGI,uBAEwB,KAAnB7Z,EAAM2Z,SAEH,cAACX,GAAD,CAAKjW,IAAK/C,EAAK,SAAcgD,IAAI,gBAAgBP,UAAU,gBAE3D,cAAC6W,GAAD,CAAYvW,IAflB,+EAesCC,IAAI,gBAAgBP,UAAU,gBAEtE,uBACA,sBAAKA,UAAU,0BAAf,UACI,uBACA,wBAAQA,UAAU,eAAemE,MAAO,CAAE+K,YAAa,GAAKjO,QAAS,kBAAM8V,EAAczT,IAAzF,wBACA,wBAAQtD,UAAU,iBAAiBmE,MAAO,CAAE+K,YAAa,GAAKjO,QAAS,kBAAM+V,EAAc1T,IAA3F,2BAfEA,SCDjB+T,GAAO,SAAC,GAA2G,IAAD,IAAxG/X,mBAAwG,MAA1F,GAA0F,MAAtFC,cAAsF,MAA7E,GAA6E,MAAzEC,eAAyE,MAA/D,GAA+D,MAA3DC,0BAA2D,MAAtC,GAAsC,EAAlC6X,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAElG5W,EAAWC,cAETe,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAArCA,MAER,EAAkDrE,mBAAS,IAA3D,mBAAOka,EAAP,KAA0BC,EAA1B,KAEA,EAA4C7V,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAA/Df,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,WAE7B,EAA4DsG,EAAQ,CAChE9G,KAAM9G,EACNmY,YAAajY,EACb6G,UAAW9G,IAHf,mBAAOmY,EAAP,KAA6BC,EAA7B,KAMQvR,EAAiCsR,EAAjCtR,KAAMC,EAA2BqR,EAA3BrR,UAAWoR,EAAgBC,EAAhBD,YAEzB,EAA4Cpa,mBAAS,IAArD,mBAAOua,EAAP,KAAuBC,EAAvB,KASA,EAA4Bxa,mBAAS,IAArC,mBAAOoF,EAAP,KAAeC,EAAf,KAsEA,OAxBA9E,qBAAU,WAEN,GAA8B,IAA1Bga,EAAezU,QAAkC,IAAlBV,EAAOU,aAAyBY,IAATqC,EACtD,OAAO1F,EAASoH,eAEpBpH,EAASqH,iBAEV,CAAC6P,EAAgBnV,EAAQ2D,EAAM1F,IAElC9C,qBAAU,WAES,KAAX0B,IACAuY,EAAkBR,GAClB3U,EAAU4U,MAGf,CAACD,EAAeC,EAAchY,IAEjC1B,qBAAU,WACN4Z,EAAqB9V,EAAMH,QAAO,SAACnB,GAAD,OAC9BA,EAAEb,QAAQ5B,aAAe0I,EAAU1I,iBAExC,CAAC0I,EAAW3E,IAGX,eAAC,IAAMZ,SAAP,WACI,qBAAKf,UAAU,8BAA8BmE,MAAO,CAAEE,YAAa,MAAO0T,aAAc,OAAxF,SACI,sBAAK/X,UAAU,wBAAf,UACI,gCACI,0CAEJ,uBACIA,UAAU,wEACVsO,YAAY,iBACZ4C,aAAa,MACb8G,KAAK,KACLzS,KAAK,OACLc,KAAK,OACL1C,MAAO0C,EACPkI,SAAUqJ,SAItB,sBAAK5X,UAAU,6CAAf,UACI,gCACI,4CAEJ,cAAC,KAAD,CACIiY,UAAQ,EACRtU,MAAOkU,EACPtJ,SApGS,SAAC2J,GACtBJ,EAAkBI,IAoGNC,UAxGU,EAyGVC,WAAW,WALf,SAQQ,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,iBAAkBvB,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,cAAnD,OACI,sBAAKhX,UAAU,wBAAf,UACI,wBACIA,UAAU,4BACVmE,MAAO,CAAE+K,YAAa,GACtBjO,QAASoX,EAHb,0BAOA,wBACIrY,UAAU,4BACVmE,MAAO,CAAE+K,YAAa,GACtBjO,QAASqX,EAHb,2BAOA,qBAAKtY,UAAU,MAAf,SACI,cAAC,GAAD,CACIzD,KAAMsb,EACNd,cAAeA,EACfC,cAAeA,eAQ3C,sBAAKhX,UAAU,6CAAf,UACI,gCACI,4CAEJ,cAAC,KAAD,CACIiY,UAAQ,EACRtU,MAAOjB,EACP6L,SAtIC,SAAC2J,GACdvV,EAAUuV,IAsIEC,UA/IE,EAgJFC,WAAW,WALf,SAQQ,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,iBAAkBvB,EAApC,EAAoCA,cAAeC,EAAnD,EAAmDA,cAAnD,OACI,sBAAKhX,UAAU,wBAAf,UACI,wBACIA,UAAU,4BACVmE,MAAO,CAAE+K,YAAa,GACtBjO,QAASoX,EAHb,0BAOA,wBACIrY,UAAU,4BACVmE,MAAO,CAAE+K,YAAa,GACtBjO,QAASqX,EAHb,2BAOA,qBAAKtY,UAAU,MAAf,SACI,cAAC,GAAD,CAAUzD,KAAMmG,EACZqU,cAAeA,EACfC,cAAeA,eAQ3C,sBAAKhX,UAAU,+BAAf,UACI,gCACI,sDAEJ,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,2BACjB,sBAAKA,UAAU,WAAf,UACI,2DAA8B0X,EAA9B,OACA,wBACIa,gBAAgB,QAChBlS,KAAK,cACLkI,SAAUqJ,EACV5X,UAAU,4CACV2D,MAAO+T,EALX,SAQQhV,EAAOtC,KAAI,SAACC,EAAGwV,GAAJ,OACP,yBACIxP,KAAK,cAEL1C,MAAOkS,EAAI,EAHf,qBAIUA,EAAI,IAFLA,iBASjC,sBAAK7V,UAAU,+BAAf,UACI,gCACI,gDAEJ,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,2BACjB,sBAAKA,UAAU,WAAf,UACI,uDACIwX,EAAkBpX,KAAI,SAACC,GAAD,OAClBA,EAAEd,UAFV,OAMA,wBACIgZ,gBAAgB,QAChBlS,KAAK,YACLkI,SAAUqJ,EACV5X,UAAU,4CACV2D,MAAO2C,EALX,SAQQ3E,EAAMvB,KAAI,SAACC,EAAGwV,GAAJ,OACN,yBAEIlS,MAAOtD,EAAEb,QAFb,cAGGa,EAAEd,SAFIsW,iBASjC,sBAAK7V,UAAU,aAAf,UACI,uBACA,yBAAQuF,KAAK,SACTtE,QAjOgB,SAACZ,GAC7BA,EAAE+N,iBAEkB,KAAhBsJ,GAAoC,KAAdpR,EACtBrB,IAAKC,KAAK,QAAS,uDAAwD,SAI3EvE,EAFgB,KAAXpB,EAEIiZ,aACLlZ,EACAuY,EAAe,GAAGX,SAClBxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVQ,EACArR,EACAC,GAKKmS,aACLZ,EAAe,GAAGX,SAClBxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVxU,EAAO,GAAGwU,SACVQ,EACArR,EACAC,KAgMI/B,SAAUsC,EACV7G,UAAU,mCAHd,UAII,mBAAGA,UAAW4G,IAEG,KAAZpH,EAEG,aAEA,uBC7QfkZ,GAAoB,SAAC,GAA4E,IAAD,IAAzEpZ,mBAAyE,MAA3D,GAA2D,MAAxDC,cAAwD,MAA/C,GAA+C,MAA5CC,eAA4C,MAAlC,GAAkC,MAA9BC,0BAA8B,MAAT,GAAS,EAErGkB,EAAWC,cAEjB,ECRsC,SAAEtB,GAEtC,MAA8ChC,mBAAS,CACnDqb,qBAAqB,KADzB,mBAAQxW,EAAR,KAAwBsC,EAAxB,KAIA5G,qBAAU,WAGN,OAFA6G,EAAkBpF,GAEV,WACJmF,EAAkB,CAAEkU,qBAAqB,QAG9C,CAAErZ,IAEL,IAAMoF,EAAgB,uCAAG,WAAQpF,GAAR,mBAAAsF,EAAA,sEAEF7H,YAAc,yBAA0B,CAAEuC,eAAc,QAFtD,cAEfuF,EAFe,gBAGFA,EAAKC,OAHH,OAGflI,EAHe,OAKrB,IAESA,EAAKmI,KAEGC,EAAmBpI,EAAnBoI,eACTP,EAAkB,CACdkU,qBAAqB3T,KAI/B,MAAQ0O,GACNtO,QAAQC,IAAIqO,GAhBK,2CAAH,sDAqBtB,OAAOvR,ED5BwByW,CAAyBtZ,GAAlDqZ,EAAR,EAAQA,qBAER,EAAgCrb,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBgF,EAAjB,KAEQpF,EAA2CI,EAA3CJ,SAAUU,EAAiCN,EAAjCM,IAAKC,EAA4BP,EAA5BO,IAAKC,EAAuBR,EAAvBQ,IAAKC,EAAkBT,EAAlBS,IAAKC,EAAaV,EAAbU,IAAKC,EAAQX,EAARW,IAE3C,EAA4Cd,mBAAS,IAArD,mBAAOub,EAAP,KAAuBC,EAAvB,KAEA,EAAwCxb,mBAAS,IAAjD,mBAAOyb,EAAP,KAAqBC,EAArB,KAKAnb,qBAAU,YAHe,SAAC8a,GACxBlW,EAAYkW,GAGZM,CAAiBN,KAChB,CAACA,IAEJ,IAAQpb,EAAUH,aAAyBC,GAAnCE,MAER,EAOIO,aAA2BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GANtDO,EADF,EACEA,QACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,QACAC,EANF,EAMEA,QA0CF,OAvCAnB,qBAAU,WACR8C,ENpCA,uCAAO,WAAQA,GAAR,mBAAAiE,EAAA,+EAGmB7H,YAAc,uBAHjC,cAGM8H,EAHN,gBAImBA,EAAKC,OAJxB,OAIMlI,EAJN,OAMQsc,EAAgBtc,EAAhBsc,WAERvY,EAAUwJ,GAAa+O,IARvB,kDAWA9T,QAAQC,IAAR,MAXA,0DAAP,yDMqCC,CAAC1E,IAEJ9C,qBAAU,WACR,GACY,KAAVN,GACY,KAAZoB,GACY,KAAZC,GACY,KAAZC,GACY,KAAZC,GACY,KAAZC,GACY,KAAZC,EACA,CACA,IAAMma,EAAU,CACd,CACEjC,SAAUvY,GAEZ,CACEuY,SAAUtY,GAEZ,CACEsY,SAAUrY,GAEZ,CACEqY,SAAUpY,GAEZ,CACEoY,SAAUnY,GAEZ,CACEmY,SAAUlY,IAGd8Z,EAAkB,CAAC,CAAE5B,SAAU3Z,KAC/Byb,EAAgBG,MAEjB,CAAC5b,EAAOoB,EAASC,EAASC,EAASC,EAASC,EAASC,IAGtD,qBAAKgB,UAAU,iCAAf,SACE,cAAC,GAAD,CACEV,YAAaA,EACbgY,cAAeuB,EACftB,aAAcwB,EACdxZ,OAAQA,EACRC,QAASA,EACTC,mBAAoBA,OElFf2Z,GAAW,WAEpB,IAAMzY,EAAWC,cAQjB,OANA/C,qBAAU,WAEN8C,EAAUQ,kBAEX,CAAER,IAGD,qBAAKX,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,wCAGA,cAAC,GAAD,Y,oBCnBL,SAASqZ,KAAsE,IAAD,yDAAJ,GAAI,IAArDC,gBAAqD,MAA1C,QAA0C,EAAjCC,EAAiC,EAAjCA,YAAiC,IAApBC,YAAoB,SAC3F,EAAgClc,oBAAS,GAAzC,mBAAOmc,EAAP,KAAqBC,EAArB,KACMC,EAAUC,mBA+BhB,OA7BA/b,qBAAU,WACR,IAAIgc,EAEEC,EAAUP,EAAcA,EAAYQ,QAAUJ,EAAQI,QAEtDxL,EAAW,SAACyL,EAASH,GACdG,EAAQ,GACZC,gBACLP,GAAQ,GACRF,GAAQK,EAASK,eAEhBV,GAAQE,GAAQ,IAerB,OAXAS,QAAQC,QACNC,sBAEAzH,MAAK,WACLiH,EAAW,IAAIQ,qBAAqB9L,EAAU,CAC5C+L,WAAYhB,IAGVQ,GAASD,EAASU,QAAQT,MAGzB,kBAAMD,GAAYA,EAASK,iBAG7B,CAAET,eAAcE,W,cCjCZa,GAAkB,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,QAE9B,EAAwB7b,mBAAS,IAAjC,mBAAOf,EAAP,KAAaiB,EAAb,KAQA,OANAK,qBAAU,WAENL,EAAQ2b,KAET,CAACA,IAGA,cAAC,IAAMpY,SAAP,UAESxE,IAAS,IAEVA,EAAK6D,KAAI,SAAC3C,EAAU6G,GAAX,OACL,cAACrF,GAAA,EAAD,CAEIC,aAAczB,EACd0B,OAAQ5C,GAFH+H,SCbhBmW,I,OAAc,WAEvB,IAAMlB,EAAcK,mBAEpB,ECLiC,WAEjC,MAA8Btc,oBAAS,GAAvC,mBAAOod,EAAP,KAAgBC,EAAhB,KAEA,EAAwBrd,mBANN,GAMlB,mBAAOqH,EAAP,KAAaiW,EAAb,KAEA,EAA4Ctd,mBAAS,IAArD,mBAAO6E,EAAP,KAAuBsC,EAAvB,KAEA5G,qBAAU,WAGF6G,EAbU,IAYVC,EAZU,EAeOA,KAEtB,CAACA,IAEJ9G,qBAAU,WAEN,OAAO,WACH4G,EAAkB,OAEvB,IAEH,IAAMC,EAAgB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAErB+V,GAAW,GAFU,SAGF5d,YAAc,wCAAD,OAAyC4H,IAHpD,cAGfE,EAHe,gBAIFA,EAAKC,OAJH,OAIflI,EAJe,OAMrB,IAEQA,EAAKmI,IAEGC,EAAmBpI,EAAnBoI,eAERP,GAAkB,SAACtC,GAAD,OAAoBA,EAAe0Y,OAAO7V,MAC5D2V,GAAW,KAIX1V,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BwV,GAAW,IAGjB,MAAOjH,GACLtO,QAAQC,IAAIqO,GACZiH,GAAW,GAvBM,2CAAH,sDA2BtB,MAAO,CAAED,UAASvY,iBAAgByY,WD9CWE,GAArCJ,EAAR,EAAQA,QAASvY,EAAjB,EAAiBA,eAAgByY,EAAjC,EAAiCA,QAEzBnB,EAAiBJ,GAAc,CACnCE,YAAamB,EAAU,KAAOnB,EAC9BC,MAAM,IAFFC,aAKFsB,EAAyBrI,sBAAYsI,MACvC,kBAAMJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,OAAI,KAC5C,CAACL,IAMJ,OAJA/c,qBAAU,WACF4b,GAAcsB,MACnB,CAACtB,EAAcsB,IAGd,eAAC,IAAMha,SAAP,WACI,qBAAKf,UAAU,kBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,gDAIKmC,IAAmB,GAChB,cAAC,GAAD,CAAiBgX,QAAShX,IAE1B,qBAAKnC,UAAU,aAAf,iCAOpB,qBAAKG,GAAG,QAAQ+a,IAAK3B,SExCpB4B,GAAgB,WAEzB,MAA+CvZ,aAAY,SAAAC,GAAK,OAAIA,EAAMuI,cAAchE,kBAAhF3I,EAAR,EAAQA,SAAU8B,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,QAAS0B,EAAnC,EAAmCA,QAE7BL,EAAUC,cAOhB,OACI,qBAAKd,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,sCAIkB,OAAbvC,EAEG,cAAC,GAAD,CACI6B,YAAa7B,EACb8B,OAAQA,EACRC,QAASA,EACTC,mBAAoByB,IAIxB,qBAAKlB,UAAU,iCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACA,wBAAQiB,QA3BrB,SAACZ,GACpBA,EAAE+N,iBACFvN,EAAQQ,KAAK,iCAyBoDrB,UAAU,kBAA3C,yEC9B3Bob,GAAc,WAIvB,OAFA5K,SAAS5T,KAAKuH,MAAMsM,gBAAkB,GAGlC,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,iBACLC,UAAWW,KAEf,cAAC,IAAD,CACItB,OAAK,EACLU,KAAK,wBACLC,UAAWyI,KAEf,cAAC,IAAD,CACIpJ,OAAK,EACLU,KAAK,+BACLC,UAAW8J,KAEf,cAAC,IAAD,CACIzK,OAAK,EACLU,KAAK,gCACLC,UAAWwK,KAEf,cAAC,IAAD,CAAUhM,GAAG,yB,UC4DhBkM,GAA0B,iBAAO,CAC1C9V,KAAKC,IAAMgF,iBCtFF8Q,GAAqB,WAE9B,IAAM3a,EAAWC,cAEjB,EAAoCtD,oBAAS,GAA7C,mBAAOuJ,EAAP,KAAmByL,EAAnB,KAEMzR,EAAUC,cAEhB,EAAwBxD,mBAAS,CAC7Bie,aAAc,KADlB,mBAAOhf,EAAP,KAAaiB,EAAb,KAIMiV,EAAqBC,uBAAY,WACnCJ,GAAc,KACf,IAkEH,OAhEAzU,qBAAU,WAEN,IAAM2d,EAAe,WAEjBze,YAAc,sBAAuB,OAChC6V,MAAK,SAAAC,GAAG,OAAIA,EAAI/N,UAChB8N,MAAK,SAAA9N,GAEF,IAAIgO,EAAO,GAEXhO,EAAKoU,WAAWlG,SAAQ,SAAAC,GAAI,OAAIH,EAAKzR,KAAK,CACtC7B,QAASyT,EAAKzT,QACdD,OAAQ0T,EAAK1T,OACb8T,SAAU,wBAAQrT,UAAU,kBAAkBG,GAAI8S,EAAKzT,QAASyB,QAAS,SAACZ,GAGtE,OACIM,GDyDC2F,ECzDwBxB,EAAKoU,WDyDb,CAC7C3T,KAAMC,IAAMiF,gBACZ/E,QAASY,KC1DmB3F,EDFE,SAAE2F,EAAWnG,GAAb,MAAsB,CACpDoF,KAAKC,IAAMe,gBACXb,QAAS,CAAEY,YAAWnG,OCAesb,CAAmB3W,EAAKoU,WAAY7Y,EAAE8C,OAAOhD,KACtDQ,EAASyI,eDuDV,IAAE9C,GC7DC,uBASVgN,QAAS,wBAAQtT,UAAU,kBAAkBuE,SAAUsC,EAAY1G,GAAI8S,EAAKzT,QACxEyB,QAAS,SAACZ,GACN,OACIqb,EAAgBrb,EAAE8C,OAAOhD,KAH5B,2BASb3C,EAAQ,CAAE+d,aAAczI,OAE3BU,OAAM,SAAAC,GAAG,OAAIrO,QAAQsO,MAAMD,OAG9BiI,EAAkB,SAAClc,GAErBiT,IAEA1V,YAAc,qBAAsB,CAChCyC,WACD,UACEoT,MAAK,SAAAC,GACEA,EAAI9N,KACJE,IAAKC,KAAK,KAAM,yBAA0B,WAC1CsW,QAGPhI,OAAM,SAAAC,GAAG,OACNrO,QAAQsO,MAAMD,OAO1B,OAHA+H,IAGO,WACHhe,EAAQ,CAAE+d,aAAc,KACxBjJ,GAAc,MAGnB,CAACzR,EAASF,EAAUkG,EAAY4L,IAE5BlW,G,oBCnFEof,GAAgB,WAEzB,IAAMhb,EAAWC,cACXC,EAAUC,cAERyF,EAAoB3E,aAAY,SAAAC,GAAK,OAAIA,EAAM0I,UAA/ChE,gBACR,EAAqD3E,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAxEd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,oBAAqBM,EAAzC,EAAyCA,QAIrC0U,KAAMC,cAAc,SAGxB,IAcA,EAAoCve,mBAHnB,CACbiC,OAAQ,KAEZ,mBAAOuc,EAAP,KAAmBC,EAAnB,KAEQxc,EAAoBuc,EAApBvc,OAAQC,EAAYsc,EAAZtc,QA4BVwc,EAAa,WACfrb,EAAS0I,eACT1I,EAAS0a,OA4Bb,OAzBAxd,qBAAU,WAEFke,EADAxV,GAIc,CAAEhH,OAAQ,OAG7B,CAACgH,EAAiBwV,IAErBle,qBAAU,WAGN,MAAsB,KAAlB0B,EAAOyP,QAEHrO,EAAS4H,eACT5H,EAASoH,gBAIVpH,EAASqH,iBAGjB,CAACzI,EAAQoB,IAGR,eAAC,KAAD,CACIsb,OAAQ/U,EAERgV,eAAgBF,EAChB7X,MA/Ea,CACjBgY,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRrN,YAAa,OACbsN,UAAW,0BAyEXC,eAAgB,IAChBC,aAAa,EANjB,UAQI,mCAAOnW,EAAmB,sBAAwB,yBAAlD,OACA,yBAASvG,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,uBAAMkR,aAAa,MAAM/C,SA3DlB,SAAC9N,GFzCU,IAAEgG,EE0ChChG,EAAE+N,iBAEE7H,GAEA5F,EFLoB,SAAE0F,EAAM7G,GACpC,8CAAO,WAAQmB,GAAR,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,SAOsB,KAAhB1B,EAAK2I,OAPX,0CAUS/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAZnB,uBAgBoBjL,YAAe,qBAAsB,CACpDwC,OAAO8G,EACP7G,QAAQA,GACT,OAnBJ,cAgBOqF,EAhBP,iBAqBoBA,EAAKC,OArBzB,SAqBOlI,EArBP,QAuBWmI,IACNE,IAAKC,KAAK,KAAK,2BAA4B,WAC3CvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAU0a,QAEVpW,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA/Bf,yDAoCC5C,QAAQC,IAAR,MApCD,mBAsCKJ,IAAKC,KAAK,QAAS,6BAA8B,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBAxCf,0DAAP,sDEIiB2U,CAAiBpd,EAAQC,IAClCqB,EAAQQ,KAAK,iBAIbV,GFnD4B0F,EEmDI9G,EFlDxC,uCAAO,WAAOoB,GAAP,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAEW,KAAhB1B,EAAK2I,OALP,0CAQK/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAVf,uBAcgBjL,YAAe,kBAAkB,CAC5CwC,OAAO8G,GACX,QAhBD,cAcGxB,EAdH,gBAiBgBA,EAAKC,OAjBrB,QAiBGlI,EAjBH,QAoBOmI,IACNE,IAAKC,KAAK,KAAK,0BAA2B,WAC1CvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAU0I,iBAEVpE,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA5BX,4CAAP,wDEmDQnH,EAAQQ,KAAK,gBAIjB2a,KA4CY,UACI,sBAAKhc,UAAU,aAAf,UACI,2CACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,SACHmO,YAAY,iBACZjI,KAAK,SACL1C,MAAOpE,EACPgP,SA7EF,SAAC,GAAgB,IAAdpL,EAAa,EAAbA,OAEzB4Y,EAAc,2BACPD,GADM,kBAER3Y,EAAOkD,KAAOlD,EAAOQ,eA4EV,yBAAQ4B,KAAK,SAASvF,UAAU,eAC5BuE,SAAUsC,EADd,UAGI,mBAAG7G,UAAW4G,IAETL,EAAmB,aAAe,2BCpHtDqW,GAAkB,WAE3B,IAAsBC,EAAevB,KAA7BC,aACF5a,EAAWC,cAEXrE,EAAO,CACTqX,QAAS,CACL,CACEC,MAAO,SACPC,MAAO,SACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,YACPC,MAAO,WACPC,KAAM,MACN5D,MAAO,KAET,CACE0D,MAAO,WACPC,MAAO,UACPC,KAAM,MACN5D,MAAO,MAGb2C,KAAM+J,GAMV,OACI,sBAAK7c,UAAU,4BAAf,UACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,4BAIKzD,EAAKuW,OAAS,GAEf,sBAAK9S,UAAU,aAAf,UACA,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAaG,GAAG,qBAA/B,SACI,wBAAQoF,KAAK,SAASvF,UAAU,kBAAkBiB,QAhBhD,WACtBN,EAAUyI,gBAeU,yBAEJ,0BAGA,cAAC,KAAD,CACI4K,oBAAoB,cACpBC,SAAO,EACPC,WAAW,EACXC,UAAU,OACVC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/X,KAAOA,OAIf,qBAAKyD,UAAU,aAAf,SACI,mDAIZ,cAAC,GAAD,QCnEC8c,GAAkB,WAI3B,OAFAtM,SAAS5T,KAAKuH,MAAMsM,gBAAkB,GAGlC,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,cACLC,UAAWiM,KAEf,cAAC,IAAD,CACI5M,OAAK,EACLU,KAAK,wBACLC,UAAWjP,OAEf,cAAC,IAAD,CAAUyN,GAAG,sBCmBhBrE,GAA2B,SAAEiS,EAAoB5c,GAAtB,MAA+B,CACnEoF,KAAKC,IAAMsF,yBACXpF,QAAS,CAAEqX,qBAAoB5c,QAmDtB6c,GAAmC,iBAAO,CACnDzX,KAAKC,IAAMwF,0BCtFFiS,GAAmB,WAE5B,IAAMtc,EAAWC,cAEjB,EAAoCtD,oBAAS,GAA7C,mBAAOuJ,EAAP,KAAmByL,EAAnB,KAEMzR,EAAUC,cAEhB,EAAwBxD,mBAAS,CAC7B4f,cAAe,KADnB,mBAAO3gB,EAAP,KAAaiB,EAAb,KAIMiV,EAAqBC,uBAAY,WACnCJ,GAAc,KACf,IAiEH,OA/DAzU,qBAAU,WAEN,IAAMsf,EAAuB,WAEzBpgB,YAAc,uBAAwB,OACjC6V,MAAK,SAAAC,GAAG,OAAIA,EAAI/N,UAChB8N,MAAK,SAAA9N,GAEF,IAAIgO,EAAO,GAEXhO,EAAKsY,WAAWpK,SAAQ,SAAAC,GAAI,OAAIH,EAAKzR,KAAK,CACtC0J,aAAckI,EAAKlI,aACnBsS,iBAAkBpK,EAAKoK,iBACvBhK,SAAU,wBAAQrT,UAAU,kBAAkBG,GAAI8S,EAAKlI,aAAc9J,QAAS,SAACZ,GAE3E,OACIM,GD0DUoc,EC1DwBjY,EAAKsY,WD0DJ,CAC/D7X,KAAMC,IAAMyF,yBACZvF,QAASqX,KC3DmBpc,EAASmK,GAAyBhG,EAAKsY,WAAY/c,EAAE8C,OAAOhD,KAC5DQ,EAASyI,eDwDD,IAAE2T,GC7DR,uBAQVzJ,QAAS,wBAAQtT,UAAU,kBAAkBuE,SAAUsC,EAAY1G,GAAI8S,EAAKlI,aACxE9J,QAAS,SAACZ,GACN,OACIid,EAAyBjd,EAAE8C,OAAOhD,KAHrC,2BASb3C,EAAQ,CAAE0f,cAAepK,OAE5BU,OAAM,SAAAC,GAAG,OAAIrO,QAAQsO,MAAMD,OAG9B6J,EAA2B,SAACvS,GAE9B0H,IAEA1V,YAAc,mBAAoB,CAC9BgO,gBACD,UACE6H,MAAK,SAAAC,GACEA,EAAI9N,KACJE,IAAKC,KAAK,KAAM,sBAAuB,WACvCiY,QAGP3J,OAAM,SAAAC,GAAG,OACNrO,QAAQsO,MAAMD,OAO1B,OAHA0J,IAGO,WACH3f,EAAQ,CAAE0f,cAAe,KACzB5K,GAAc,MAGnB,CAACzR,EAASF,EAAUkG,EAAY4L,IAE5BlW,GClFEghB,GAAgB,WAEzB,IAAM5c,EAAWC,cACXC,EAAUC,cAERyG,EAAmB3F,aAAY,SAAAC,GAAK,OAAIA,EAAMyF,YAA9CC,eACR,EAAqD3F,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAxEd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,oBAAqBM,EAAzC,EAAyCA,QAKrC0U,KAAMC,cAAc,SAGxB,IAcA,EAAoCve,mBAHnB,CACb+f,iBAAkB,KAEtB,mBAAOvB,EAAP,KAAmBC,EAAnB,KAEQsB,EAAmCvB,EAAnCuB,iBAAkBtS,EAAiB+Q,EAAjB/Q,aA4BpBiR,EAAa,WACfrb,EAAS0I,eACT1I,EAASmK,OA2Bb,OAxBAjN,qBAAU,WAEFke,EADAxU,GAIc,CAAE8V,iBAAkB,OAGvC,CAAC9V,EAAgBwU,IAEpBle,qBAAU,WAEN,MAAgC,KAA5Bwf,EAAiBrO,QAEbrO,EAAS4H,eACT5H,EAASoH,gBAIVpH,EAASqH,iBAGjB,CAACqV,EAAkB1c,IAGlB,eAAC,KAAD,CACIsb,OAAQ/U,EAERgV,eAAgBF,EAChB7X,MA9Ea,CACjBgY,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRrN,YAAa,OACbsN,UAAW,0BAwEXC,eAAgB,IAChBC,aAAa,EANjB,UAQI,mCAAOnV,EAAkB,mBAAqB,sBAA9C,OACA,yBAASvH,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,uBAAMkR,aAAa,MAAM/C,SA1DlB,SAAC9N,GFDa,IAAEgG,EAAMlG,EEEzCE,EAAE+N,iBAEE7G,GAEA5G,GFN+B0F,EEMIgX,EFNEld,EEMgB4K,EFL7D,uCAAO,WAAQpK,GAAR,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,SAOsB,KAAhB1B,EAAK2I,OAPX,0CAUS/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAZnB,uBAgBoBjL,YAAe,mBAAoB,CAClDsgB,iBAAkBhX,EAClB0E,aAAc5K,GACf,OAnBJ,cAgBO0E,EAhBP,iBAqBoBA,EAAKC,OArBzB,SAqBOlI,EArBP,QAuBWmI,IACNE,IAAKC,KAAK,KAAK,wBAAyB,WACxCvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAUqc,QAEV/X,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA/Bf,yDAoCC5C,QAAQC,IAAR,MApCD,mBAsCKJ,IAAKC,KAAK,QAAS,6BAA8B,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBAxCf,0DAAP,wDEMQnH,EAAQQ,KAAK,cAIbV,EFpDyB,SAAE0F,GACnC,8CAAO,WAAO1F,GAAP,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAEW,KAAhB1B,EAAK2I,OALP,0CAQK/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAVf,uBAcgBjL,YAAe,gBAAgB,CAC1CsgB,iBAAiBhX,GACrB,QAhBD,cAcGxB,EAdH,gBAiBgBA,EAAKC,OAjBrB,QAiBGlI,EAjBH,QAoBOmI,IACNE,IAAKC,KAAK,KAAK,uBAAwB,WACvCvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAU0I,iBAEVpE,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA5BX,4CAAP,sDEmDiBwV,CAAsBH,IAC/Bxc,EAAQQ,KAAK,aAIjB2a,KA2CY,UACI,sBAAKhc,UAAU,aAAf,UACI,qDACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,mBACHmO,YAAY,2BACZjI,KAAK,mBACL1C,MAAO0Z,EACP9O,SA5EF,SAAC,GAAgB,IAAdpL,EAAa,EAAbA,OAEzB4Y,EAAc,2BACPD,GADM,kBAER3Y,EAAOkD,KAAOlD,EAAOQ,eA2EV,yBAAQ4B,KAAK,SAASvF,UAAU,eAC5BuE,SAAUsC,EADd,UAGI,mBAAG7G,UAAW4G,IAETW,EAAkB,aAAe,2BCpHrDkW,GAAiB,WAE1B,IAAM9c,EAAWC,cAEM0G,EAAa2V,KAA5BC,cAGF3gB,EAAO,CACTqX,QAAS,CACL,CACIC,MAAO,mBACPC,MAAO,mBACPC,KAAM,MACN5D,MAAO,KAEX,CACI0D,MAAO,YACPC,MAAO,WACPC,KAAM,MACN5D,MAAO,KAEX,CACI0D,MAAO,WACPC,MAAO,UACPC,KAAM,MACN5D,MAAO,MAGf2C,KAAMxL,GAMV,OACI,sBAAKtH,UAAU,4BAAf,UACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,4CAIKzD,EAAKuW,OAAS,GAEX,sBAAK9S,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAaG,GAAG,qBAA/B,SACI,wBAAQoF,KAAK,SAASvF,UAAU,kBAAkBiB,QAhBxD,WACtB,OAAON,EAASyI,gBAeY,yBAEJ,0BAGJ,cAAC,KAAD,CACI4K,yBAAkChQ,IAAbsD,QAAwCtD,IAAdzH,EAAKuW,KAAqB,cAAgB,oCACzFmB,SAAO,EACPC,WAAW,EACXC,UAAU,OACVC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/X,KAAMA,OAId,qBAAKyD,UAAU,aAAf,SACI,gDAIhB,cAAC,GAAD,QCoDN0d,GAAiB,SAAEtX,GAAF,MAAuB,CAC1Cb,KAAMC,IAAM2F,wBACZzF,QAASU,IC1Hb5F,IAAOC,OAAO,MAEP,IAAMC,GAAY,SAAC,GAA+K,IAA7Kid,EAA4K,EAA5KA,gBAA4K,IAA3JC,iBAA2J,MAA/I,GAA+I,MAA3Ite,mBAA2I,MAA7H,GAA6H,MAAzHyL,oBAAyH,MAA1G,GAA0G,MAAtGvL,eAAsG,MAA5F,GAA4F,MAAxFnC,gBAAwF,MAA7E,GAA6E,MAAzEsC,iBAAyE,MAA7D,GAA6D,MAAzDD,iBAAyD,MAA7C,GAA6C,MAAzC0d,kBAAyC,MAA5B,GAA4B,MAAxBS,oBAAwB,MAAT,GAAS,EAE9Lld,EAAWC,cACXC,EAAUC,cAERuc,EAAqBD,EAArBC,iBAEAS,EAAgBD,EAAhBC,YAEFC,EAA8B,SAACze,EAAajC,EAAU0N,EAAcvL,GAEtEmB,EDgHkC,CAAE4E,KAAMC,IAAM4F,4BC/GhDzK,EDwGyB,SAAErB,EAAajC,EAAU0N,EAAcvL,GAAvC,OAAsDke,GAAgB,CAAEpe,cAAajC,WAAU0N,eAAcvL,YCxG7Hwe,CAAkB1e,EAAajC,EAAU0N,EAAcvL,IAChEqB,EAAQQ,KAAK,+BAGX4c,EAA6B,SAAC3e,GAEhCqB,EDwE4B,SAAErB,GAElC,6BAAO,8BAAAsF,EAAA,+EAGoB7H,YAAc,yBAA0B,CACvDuC,eACF,UALH,cAGOuF,EAHP,gBAOoBA,EAAKC,OAPzB,QAOOlI,EAPP,QASWmI,GACNE,IAAKC,KAAK,KAAK,qBAAsB,WAGrCD,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAb/B,kDAiBCC,QAAQC,IAAR,MAjBD,0DC1EM6Y,CAAqB5e,IAC9Bqe,EACIC,EAAUpc,QACN,SAAAnB,GAAC,OAAKA,EAAEf,cAAgBA,OAIpC,OACI,eAAC,IAAMyB,SAAP,WACI,qBAAKf,UAAU,WAAf,SACI,sBAAKA,UAAU,eAAf,UACI,0CACA,uBACC3C,EACD,sBAAM2C,UAAU,eAChB,0CACA,uBACA,uBAAMA,UAAU,aAAhB,sBACcQ,IAAOd,GAAWsB,OAAO,iBACnC,uBAFJ,0BAG4BR,IAAOb,GAAWqB,OAAO,iBACjD,0BAEJ,uBACA,wBAAQC,QAAS,WAAQ8c,EAA4Bze,EAAajC,EAAU0N,EAAcvL,IAAYQ,UAAU,kBAAhH,oBAdJ,OAgBI,wBAAQiB,QAAS,WAAQgd,EAA2B3e,IAAgBU,UAAU,kBAA9E,2BAGR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,2CACA,4BAEQqd,IAGR,+CACA,4BAEQS,aChEfK,GAAqB,SAAC,GAAwD,IAArDR,EAAoD,EAApDA,gBAAoD,IAAnCxe,cAAmC,MAA1B,GAA0B,MAAtBye,iBAAsB,MAAV,GAAU,EAEtF,EAA0BtgB,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcuc,EAAd,KAEQ9e,EAAiGuC,EAAjGvC,YAAayL,EAAoFlJ,EAApFkJ,aAAcvL,EAAsEqC,EAAtErC,QAASnC,EAA6DwE,EAA7DxE,SAAUsC,EAAmDkC,EAAnDlC,UAAWD,EAAwCmC,EAAxCnC,UAAW0d,EAA6Bvb,EAA7Bub,WAAYS,EAAiBhc,EAAjBgc,aAUxF,OARAhgB,qBAAU,WAEN,OADAugB,EAAUjf,GACH,WACHif,EAAS,OAEd,CAAEjf,IAID,sBAAKa,UAAU,kBAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,cAAC,GAAD,CACIV,YAAgBA,EAChByL,aAAiBA,EACjBvL,QAAYA,EACZnC,SAAWA,EACXsC,UAAYA,EACZD,UAAaA,EACb0d,WAAaA,EACbS,aAAeA,EACfD,UAAaA,EACbD,gBAAkBA,MAG1B,2BC9BCU,GAAsB,SAAC,GAAiB,IAAflF,EAAc,EAAdA,QAElC,EAAwB7b,mBAAS,IAAjC,mBAAOf,EAAP,KAAaiB,EAAb,KAYA,OAVAK,qBAAU,WAIN,OAFAL,EAAQ2b,GAEA,WACJ3b,EAAQ,OAGb,CAAC2b,IAGA,cAAC,IAAMpY,SAAP,UAESxE,IAAS,IAEVA,EAAK6D,KAAI,SAACjB,EAAQmF,GAAT,OACL,cAAC,GAAD,CACInF,OAAQA,EACRye,UAAWzE,EACXwE,gBAAiBngB,GACZ8G,SCrBhBga,GAAe,WAExB,IAAM/E,EAAcK,mBAEpB,ECJkC,WAElC,MAAgCtc,oBAAU,GAA1C,mBAAQod,EAAR,KAAiBC,EAAjB,KAEA,EAA0Brd,mBANR,GAMlB,mBAAQqH,EAAR,KAAciW,EAAd,KAEA,EAAgDtd,mBAAS,IAAzD,mBAAQihB,EAAR,KAAyBC,EAAzB,KAEA3gB,qBAAU,WAGF6G,EAbU,IAYTC,EAZS,EAeGA,KAClB,CAAEA,IAEL9G,qBAAU,WAEN,OAAO,WACH2gB,EAAmB,OAExB,IAEH,IAAM9Z,EAAgB,uCAAG,WAAQC,GAAR,mBAAAC,EAAA,6DAErB+V,GAAY,GAFS,SAGF5d,YAAc,yCAAD,OAA2C4H,IAHtD,cAGfE,EAHe,gBAIFA,EAAKC,OAJH,OAIflI,EAJe,OAMrB,IAESA,EAAKmI,IAEG0Z,EAAsB7hB,EAAtB6hB,kBAETD,EAAoBD,EAAgB1D,OAAQ4D,IAC5C9D,GAAY,KAIZ1V,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BwV,GAAY,IAGlB,MAAQjH,GACNtO,QAAQC,IAAIqO,GACZiH,GAAY,GAvBK,2CAAH,sDA4BtB,MAAO,CAAED,UAAS6D,kBAAiB3D,WD/CW8D,GAAtChE,EAAR,EAAQA,QAAS6D,EAAjB,EAAiBA,gBAAiB3D,EAAlC,EAAkCA,QAE1BnB,EAAiBJ,GAAc,CACnCE,YAAamB,EAAU,KAAOnB,EAC9BC,MAAM,IAFFC,aAKFkF,EAA+BjM,sBACjCsI,MACI,kBAAMJ,GAAQ,SAAAK,GAAS,OAAIA,EAAY,OAAI,KAC5C,CAACL,IAMR,OAJA/c,qBAAU,WACF4b,GAAckF,MACnB,CAAClF,EAAckF,IAGd,eAAC,IAAM5d,SAAP,WACI,qBAAKf,UAAU,kBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,iDAGA,8BAESue,IAAoB,IACrB,cAAC,GAAD,CAAqBpF,QAASoF,aAMlD,qBAAKpe,GAAG,eAAe+a,IAAK3B,QEvC3B0D,GAAmB,WAE5B,MAA0B3f,mBAAS,IAAnC,mBAAQf,EAAR,KAAciB,EAAd,KAEAK,qBAAU,WAEN+gB,MAED,IAEH,IAAMA,EAAe,uCAAG,gCAAAha,EAAA,sEAED7H,YAAc,wBAFb,cAEd8H,EAFc,gBAGDA,EAAKC,OAHJ,OAGdlI,EAHc,OAKpB,IAESA,EAAKmI,IAEGqY,EAAexgB,EAAfwgB,WAET5f,EAAS4f,IAITnY,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAGhC,MAAQuO,GACNtO,QAAQC,IAAIqO,GAnBI,2CAAH,qDAwBrB,MAAO,CAAEnX,SClCAsiB,GAAqB,WAG9B,MAA8CvhB,mBAAS,IAAvD,mBAAOwhB,EAAP,KAAwBN,EAAxB,KAEA3gB,qBAAU,WAENkhB,MAED,IAEH,IAAMA,EAAiB,uCAAG,gCAAAna,EAAA,sEAEH7H,YAAc,2BAFX,cAEhB8H,EAFgB,gBAGHA,EAAKC,OAHF,OAGhBlI,EAHgB,OAKtB,IAEQA,EAAKmI,IAEGqC,EAAexK,EAAfwK,WAERoX,EAAmBpX,IAInBnC,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAGhC,MAAOuO,GACLtO,QAAQC,IAAIqO,GAnBM,2CAAH,qDAwBvB,MAAO,CAAEoL,oBC/BAE,GAAuB,WAEhC,IAAMre,EAAWC,cAETke,EAAoBD,KAApBC,gBACAviB,EAAS0gB,KAAT1gB,KAER,EAA4Be,mBAAS,IAArC,mBAAQuE,EAAR,KAAeuc,EAAf,KACA,EAA0C9gB,mBAAS,IAAnD,mBAAQ2hB,EAAR,KAAsBC,EAAtB,KACA,EAAkC5hB,mBAAS,IAA3C,mBAAQ6hB,EAAR,KAAkBC,EAAlB,KACA,EAA0C9hB,mBAAS,IAAnD,mBAAQ+hB,EAAR,KAAsBC,EAAtB,KAEA,EAAgFnS,EAAQ,CACpF1P,SAAU,GACViN,QAAS,GACTpD,SAAU,KAHd,mBAAQiY,EAAR,KAAuCC,EAAvC,KAMS/hB,EAAgC8hB,EAAhC9hB,SAAUiN,EAAsB6U,EAAtB7U,QAASpD,EAAaiY,EAAbjY,SAyB5B,OAfAzJ,qBAAU,WAENugB,EAAUU,GACVI,EAAiB3iB,KAElB,CAAEuiB,EAAiBviB,IAGtBsB,qBAAU,WAENyhB,EAAiB/iB,EAAKwN,MAAM,SAAA1J,GAAC,OAAIA,EAAE0K,aAAanN,aAAe0J,MAC/D8X,EAAaN,EAAgB/U,MAAM,SAAA1J,GAAC,OAAIA,EAAEb,QAAQ5B,aAAe8M,QAElE,CAAEpD,EAAUoD,EAASnO,EAAMuiB,IAG1B,qBAAK9e,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,yCAII,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMmO,SAjCX,SAAE9N,GRvBC,IAAEhD,EAAUoiB,EAAajgB,EQwB/Ca,EAAE+N,iBACgB,KAAb3Q,GAA+B,KAAZiN,GAA+B,KAAbpD,GACtC3G,GR1BoBtD,EQ0BMI,ER1BIgiB,EQ0BM/U,ER1BOlL,EQ0BE8H,ERxBrD,uCAAO,WAAQ3G,GAAR,iBAAAiE,EAAA,yDAEJQ,QAAQC,IAAIhI,EAAUoiB,EAAajgB,GAElCmB,EAAU6H,eACV7H,EAAUoH,eACQ,KAAb1K,GAA+B,KAAZmC,GAAkC,KAAhBigB,QAAmCzb,IAAb3G,EAN7D,0CAQK4H,IAAKC,KAAK,KAAM,iCAAiC,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBAVf,gCAgBoBjL,YAAc,sBAAuB,CACpDM,SAAUA,EACV0N,aAAc0U,EACdjgB,QAASA,GACX,QApBH,cAgBOqF,EAhBP,iBAsBoBA,EAAKC,OAtBzB,SAsBOlI,EAtBP,QAwBWmI,IACNE,IAAKC,KAAK,KAAK,sBAAuB,WACtCvE,EAAU4H,eACV5H,EAAUqH,iBAGV/C,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BxE,EAAU4H,eACV5H,EAAUqH,gBAhCf,kDAoCC5C,QAAQC,IAAR,MACA1E,EAAU4H,eACV5H,EAAUqH,eAtCX,0DAAP,wDQ0BI/C,IAAKC,KAAK,KAAK,uDAAwD,UA4B/C,UACA,sBAAKlF,UAAU,aAAf,UACI,6CACA,uBACIuF,KAAK,OACLvF,UAAU,eACVG,GAAG,gBACHkG,KAAK,WACLkI,SAAWiR,EACX7b,MAAQlG,EACR6Q,YAAY,2BAEpB,sBAAKtO,UAAU,aAAf,UACI,kDACA,6DAA2CgE,IAAbmb,EAA+BA,EAASrB,YAAc,GAApF,OACA,wBACIvF,gBAAgB,cAChBlS,KAAK,UACLkI,SAAWiR,EACXxf,UAAU,4CACV2D,MAAQ+G,EALZ,SAQQ7I,EAAMzB,KAAI,SAAEC,GAAF,OACN,wBAEIsD,MAAQtD,EAAEb,QAFd,SAGGa,EAAEyd,aAFKzd,EAAEb,iBAO5B,sBAAKQ,UAAU,aAAf,UACI,8CACA,gEAAkDgE,IAAjBqb,EAAmCA,EAAahC,iBAAmB,GAApG,OACA,wBACI9E,gBAAgB,QAChBlS,KAAK,WACLkI,SAAWiR,EACXxf,UAAU,4CACV2D,MAAQ2D,EALZ,SAQQ2X,EAAa7e,KAAI,SAAEC,GAAF,OACb,wBAEIsD,MAAQtD,EAAE0K,aAFd,SAGG1K,EAAEgd,kBAFKhd,EAAE0K,sBAO5B,mBAAG/K,UAAU,aAAb,8CACA,wBAAQuF,KAAK,SAASvF,UAAU,kBAAhC,sCCnBnB0f,GAA2B,iBAAO,CAC3Cna,KAAKC,IAAMoF,kBCzFF+U,GAAsB,WAE/B,IAAMhf,EAAWC,cACXC,EAAUC,cAERuG,EAAqBzF,aAAY,SAAAC,GAAK,OAAIA,EAAM6I,WAAhDrD,iBACR,EAAqDzF,aAAY,SAAAC,GAAK,OAAIA,EAAM8F,MAAxEd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,oBAAqBM,EAAzC,EAAyCA,QAGrC0U,KAAMC,cAAc,SAGxB,IAcA,EAAoCve,mBAHnB,CACbsiB,iBAAkB,KAEtB,mBAAO9D,EAAP,KAAmBC,EAAnB,KAEQ+B,EAAyBhC,EAAzBgC,YAAate,EAAYsc,EAAZtc,QA4Bfwc,EAAa,WACfrb,EAAS0I,eACT1I,EAAS+e,OAab,OAVA7hB,qBAAU,WAEFke,EADA1U,GAIc,CAAEyW,YAAa,OAGlC,CAACzW,EAAkB0U,IAGlB,eAAC,KAAD,CACIE,OAAQ/U,EAERgV,eAAgBF,EAChB7X,MAhEa,CACjBgY,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRrN,YAAa,OACbsN,UAAW,0BA0DXC,eAAgB,IAChBC,aAAa,EANjB,UAQI,mCAAOrV,EAAoB,uBAAyB,0BAApD,OACA,yBAASrH,UAAU,QAAnB,SACI,qBAAKA,UAAU,aAAf,SACI,uBAAMkR,aAAa,MAAM/C,SA5ClB,SAAC9N,GDxCW,IAAEgG,ECyCjChG,EAAE+N,iBAEE/G,GAEA1G,EDJqB,SAAE0F,EAAM7G,GACrC,8CAAO,WAAQmB,GAAR,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,SAOsB,KAAhB1B,EAAK2I,OAPX,0CAUS/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAZnB,uBAgBoBjL,YAAe,qBAAsB,CACpD+gB,YAAYzX,EACZ7G,QAAQA,GACT,OAnBJ,cAgBOqF,EAhBP,iBAqBoBA,EAAKC,OArBzB,SAqBOlI,EArBP,QAuBWmI,IACNE,IAAKC,KAAK,KAAK,4BAA6B,WAC5CvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAU+e,QAEVza,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA/Bf,yDAoCC5C,QAAQC,IAAR,MApCD,mBAsCKJ,IAAKC,KAAK,QAAS,6BAA8B,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBAxCf,0DAAP,sDCGiB6X,CAAkB/B,EAAate,IACxCqB,EAAQQ,KAAK,aAIbV,GDlD6B0F,ECkDIyX,EDjDzC,uCAAO,WAAOnd,GAAP,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAEW,KAAhB1B,EAAK2I,OALP,0CAQK/J,IAAKC,KAAK,KAAM,kCAAmC,SACnDvE,EAAU4H,eACV5H,EAAUqH,iBAVf,uBAcgBjL,YAAe,kBAAkB,CAC5C+gB,YAAYzX,GAChB,QAhBD,cAcGxB,EAdH,gBAiBgBA,EAAKC,OAjBrB,QAiBGlI,EAjBH,QAoBOmI,IACNE,IAAKC,KAAK,KAAK,2BAA4B,WAC3CvE,EAAU4H,eACV5H,EAAUqH,eACVrH,EAAU0I,iBAEVpE,IAAKC,KAAK,QAAStI,EAAKuI,IAAK,SAC7BxE,EAAU4H,eACV5H,EAAUqH,gBA5BX,4CAAP,wDCkDQnH,EAAQQ,KAAK,YAIjB2a,KA6BY,UACI,sBAAKhc,UAAU,aAAf,UACI,2CACA,uBAAOuF,KAAK,OACRvF,UAAU,eACVG,GAAG,cACHmO,YAAY,iBACZjI,KAAK,cACL1C,MAAOma,EACPvP,SA9DF,SAAC,GAAgB,IAAdpL,EAAa,EAAbA,OAEzB4Y,EAAc,2BACPD,GADM,kBAER3Y,EAAOkD,KAAOlD,EAAOQ,eA6DV,yBAAQ4B,KAAK,SAASvF,UAAU,eAC5BuE,SAAUsC,EADd,UAGI,mBAAG7G,UAAW4G,IAETS,EAAoB,aAAe,2BCjGvDwX,GAAqB,WAE9B,IAAMle,EAAWC,cAEjB,EAAoCtD,oBAAS,GAA7C,mBAAOuJ,EAAP,KAAmByL,EAAnB,KAEMzR,EAAUC,cAEhB,EAAwBxD,mBAAS,CAC7BwiB,YAAa,KADjB,mBAAOvjB,EAAP,KAAaiB,EAAb,KAIMiV,EAAqBC,uBAAY,WACnCJ,GAAc,KACf,IAkEH,OAhEAzU,qBAAU,WAEN,IAAMkiB,EAAe,WAEjBhjB,YAAc,0BAA2B,OACpC6V,MAAK,SAAAC,GAAG,OAAIA,EAAI/N,UAChB8N,MAAK,SAAA9N,GAEF,IAAIgO,EAAO,GAEXhO,EAAKsC,WAAW4L,SAAQ,SAAAC,GAAI,OAAIH,EAAKzR,KAAK,CACtC7B,QAASyT,EAAKzT,QACdD,OAAQ0T,EAAK6K,YACbzK,SAAU,wBAAQrT,UAAU,kBAAkBG,GAAI8S,EAAKzT,QAASyB,QAAS,SAACZ,GAGtE,OACIM,GFyDEyG,EEzDwBtC,EAAKsC,WFyDZ,CAC/C7B,KAAMC,IAAMqF,iBACZnF,QAAS0B,KE1DmBzG,EFFA,SAAEyG,EAAYjH,GAAd,MAAuB,CACnDoF,KAAKC,IAAMmF,iBACXjF,QAAS,CAAE0B,aAAYjH,OEAcwK,CAAiB7F,EAAKsC,WAAY/G,EAAE8C,OAAOhD,KACpDQ,EAASyI,eFuDT,IAAEhC,GE7DA,uBASVkM,QAAS,wBAAQtT,UAAU,kBAAkBuE,SAAUsC,EAAY1G,GAAI8S,EAAKzT,QACxEyB,QAAS,SAACZ,GACN,OACI2f,EAAiB3f,EAAE8C,OAAOhD,KAH7B,2BASb3C,EAAQ,CAAEsiB,YAAahN,OAE1BU,OAAM,SAAAC,GAAG,OAAIrO,QAAQsO,MAAMD,OAG9BuM,EAAmB,SAACxgB,GAEtBiT,IAEA1V,YAAc,qBAAsB,CAChCyC,WACD,UACEoT,MAAK,SAAAC,GACEA,EAAI9N,KACJE,IAAKC,KAAK,KAAM,0BAA2B,WAC3C6a,QAGPvM,OAAM,SAAAC,GAAG,OACNrO,QAAQsO,MAAMD,OAO1B,OAHAsM,IAGO,WACHviB,EAAQ,CAAEsiB,YAAa,KACvBxN,GAAc,MAGnB,CAACzR,EAASF,EAAUkG,EAAY4L,IAE5BlW,GClFE0jB,GAAmB,WAE5B,IAAMtf,EAAWC,cAEIsf,EAAerB,KAA5BiB,YAEFvjB,EAAO,CACTqX,QAAS,CACL,CACIC,MAAO,SACPC,MAAO,SACPC,KAAM,MACN5D,MAAO,KAEX,CACI0D,MAAO,YACPC,MAAO,WACPC,KAAM,MACN5D,MAAO,KAEX,CACI0D,MAAO,WACPC,MAAO,UACPC,KAAM,MACN5D,MAAO,MAGf2C,KAAMoN,GAOV,OACI,cAAC,IAAMnf,SAAP,UACI,sBAAKf,UAAU,4BAAf,UACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,4BAIKzD,EAAKuW,OAAS,GAEX,sBAAK9S,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAaG,GAAG,qBAA/B,SACI,wBAAQoF,KAAK,SAASvF,UAAU,kBAAkBiB,QAlB5D,WACtBN,EAASyI,gBAiBuB,yBAEJ,0BAGJ,cAAC,KAAD,CACI4K,yBAAqChQ,IAAfkc,QAA0Clc,IAAdzH,EAAKuW,KAAsB,cAAgB,oCAC7FmB,SAAO,EACPC,WAAW,EACXC,UAAU,OACVC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/X,KAAMA,OAId,qBAAKyD,UAAU,aAAf,SACI,oDAKhB,cAAC,GAAD,UCtEHmgB,GAAsB,SAAC,GAA6E,IAAD,IAAzE7gB,mBAAyE,MAA3D,GAA2D,MAAvDjC,gBAAuD,MAA5C,GAA4C,MAAxC0N,oBAAwC,MAAzB,GAAyB,MAArBvL,eAAqB,MAAX,GAAW,EAEtGmB,EAAWC,cAETke,EAAoBD,KAApBC,gBACAviB,EAAS0gB,KAAT1gB,KAER,EAA4Be,mBAAS,IAArC,mBAAQuE,EAAR,KAAeuc,EAAf,KACA,EAA0C9gB,mBAAS,IAAnD,mBAAQ2hB,EAAR,KAAsBC,EAAtB,KACA,EAAkC5hB,mBAAS,IAA3C,mBAAQ6hB,EAAR,KAAkBC,EAAlB,KACA,EAA0C9hB,mBAAS,IAAnD,mBAAQ+hB,EAAR,KAAsBC,EAAtB,KAEA,EAAgFnS,EAAQ,CACpF1P,SAAUJ,EACVqN,QAASlL,EACT8H,SAAUyD,IAHd,mBAAQwU,EAAR,KAAuCC,EAAvC,KAMS/hB,EAAgC8hB,EAAhC9hB,SAAUiN,EAAsB6U,EAAtB7U,QAASpD,EAAaiY,EAAbjY,SAmC5B,OAzBAzJ,qBAAU,WAKN,OAHAugB,EAAUU,GACVI,EAAiB3iB,GAEV,WACH6hB,EAAS,IACTc,EAAgB,OAGrB,CAAEJ,EAAiBviB,IAGtBsB,qBAAU,WAKN,OAHAyhB,EAAiB/iB,EAAKwN,MAAM,SAAA1J,GAAC,OAAIA,EAAE0K,aAAanN,aAAe0J,MAC/D8X,EAAaN,EAAgB/U,MAAM,SAAA1J,GAAC,OAAIA,EAAEb,QAAQ5B,aAAe8M,MAE1D,WACH4U,EAAgB,IAChBF,EAAY,OAGjB,CAAE9X,EAAUoD,EAASnO,EAAMuiB,IAG1B,qBAAK9e,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,qCAII,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMmO,SA3CX,SAAE9N,GACrBA,EAAE+N,iBACgB,KAAb3Q,GAA+B,KAAZiN,GAA+B,KAAbpD,GAA8C,IAA3B7J,EAASuR,OAAO5L,QACzEzC,EbqBc,SAAErB,EAAajC,EAAU0N,EAAcvL,GAE7D,8CAAO,WAAQmB,GAAR,iBAAAiE,EAAA,yDAEHjE,EAAU6H,eACV7H,EAAUoH,eAEW,KAAhBzI,GAAmC,KAAbjC,GAA+B,KAAZmC,GAAmC,KAAjBuL,QAAoC/G,IAAb3G,EALpF,0CAOK4H,IAAKC,KAAK,KAAM,iCAAiC,SACjDvE,EAAU4H,eACV5H,EAAUqH,iBATf,gCAeoBjL,YAAc,yBAA0B,CACvDuC,cACAjC,SAASA,EACTmC,QAAQA,EACRuL,aAAaA,GACf,OApBH,cAeOlG,EAfP,iBAsBoBA,EAAKC,OAtBzB,SAsBOlI,EAtBP,QAwBWmI,IACNE,IAAKC,KAAK,KAAK,sBAAuB,WACtCvE,EAAU4H,eACV5H,EAAUqH,iBAGV/C,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BxE,EAAU4H,eACV5H,EAAUqH,gBAhCf,kDAoCC5C,QAAQC,IAAR,MACA1E,EAAU4H,eACV5H,EAAUqH,eAtCX,0DAAP,sDavBkBoY,CAAY9gB,EAAa7B,EAAU6J,EAAUoD,IAE3DzF,IAAKC,KAAK,KAAK,uDAAwD,UAsC/C,UACA,sBAAKlF,UAAU,aAAf,UACI,6CACA,uBACIuF,KAAK,OACLvF,UAAU,eACVG,GAAG,gBACHkG,KAAK,WACLkI,SAAWiR,EACX7b,MAAQlG,EACR6Q,YAAY,2BAEpB,sBAAKtO,UAAU,aAAf,UACI,kDACA,6DAA2CgE,IAAbmb,EAA+BA,EAASrB,YAAc,GAApF,OACA,wBACIvF,gBAAgB,cAChBlS,KAAK,UACLkI,SAAWiR,EACXxf,UAAU,4CACV2D,MAAQ+G,EALZ,SAQQ7I,EAAMzB,KAAI,SAAEC,GAAF,OACN,wBAEIsD,MAAQtD,EAAEb,QAFd,SAGGa,EAAEyd,aAFKzd,EAAEb,iBAO5B,sBAAKQ,UAAU,aAAf,UACI,8CACA,gEAAkDgE,IAAjBqb,EAAmCA,EAAahC,iBAAmB,GAApG,OACA,wBACI9E,gBAAgB,QAChBlS,KAAK,WACLkI,SAAWiR,EACXxf,UAAU,4CACV2D,MAAQ2D,EALZ,SAQQ2X,EAAa7e,KAAI,SAAEC,GAAF,OACb,wBAEIsD,MAAQtD,EAAE0K,aAFd,SAGG1K,EAAEgd,kBAFKhd,EAAE0K,sBAO5B,mBAAG/K,UAAU,aAAb,8CACA,wBAAQuF,KAAK,SAASvF,UAAU,kBAAhC,sCCxHnBqgB,GAAqB,SAAC,GAA2E,IAAD,IAAxE/gB,mBAAwE,MAA1D,GAA0D,MAAtDjC,gBAAsD,MAA3C,GAA2C,MAAvC0N,oBAAuC,MAAxB,GAAwB,MAApBvL,eAAoB,MAAV,GAAU,EAEzG,OACG,cAAC,GAAD,CACKF,YAAcA,EACdjC,SAAWA,EACX0N,aAAeA,EACfvL,QAAUA,KCNT2b,GAAgB,WAEzB,MAAyDvZ,aAAa,SAAAC,GAAK,OAAIA,EAAMqJ,QAAQ9E,kBAArF9G,EAAR,EAAQA,YAAajC,EAArB,EAAqBA,SAAU0N,EAA/B,EAA+BA,aAAcvL,EAA7C,EAA6CA,QAEvCqB,EAAUC,cAOhB,OACI,qBAAKd,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,eAE8BgE,IAAhB1E,GACF,wBAAQU,UAAU,gBAAlB,0CAKcgE,IAAhB1E,EAEE,cAAC,GAAD,CACIA,YAAcA,EACdjC,SAAWA,EACX0N,aAAeA,EACfvL,QAAUA,IAIlB,qBAAKQ,UAAU,iCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACA,wBAAQiB,QA9BjB,SAAEZ,GACrBA,EAAE+N,iBACFvN,EAAQQ,KAAK,iBA4BkDrB,UAAU,kBAA7C,yEChCvBsgB,GAAmB,WAI5B,OAFA9P,SAAS5T,KAAKuH,MAAMsM,gBAAkB,GAGlC,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIT,OAAK,EACLU,KAAK,eACLC,UAAW2N,KAEf,cAAC,IAAD,CACItO,OAAK,EACLU,KAAK,wBACLC,UAAWqO,KAEf,cAAC,IAAD,CACIhP,OAAK,EACLU,KAAK,6BACLC,UAAWwK,KAEf,cAAC,IAAD,CACInL,OAAK,EACLU,KAAK,wBACLC,UAAW8M,KAEf,cAAC,IAAD,CACIzN,OAAK,EACLU,KAAK,uBACLC,UAAWsP,WChClBM,GAAoB,WAE7B,IAAM1f,EAAUC,cACVH,EAAWC,cAEjB,EAA0BtD,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcuc,EAAd,KAGA,ECX6B,WAE7B,MAA0B9gB,mBAAS,CAC/BkjB,UAAU,KADd,mBAAQjkB,EAAR,KAAciB,EAAd,KAIAK,qBAAU,WAEN4iB,MAED,IAEH,IAAMA,EAAY,uCAAG,gCAAA7b,EAAA,sEAEE7H,YAAc,uBAFhB,cAEX8H,EAFW,gBAGEA,EAAKC,OAHP,OAGXlI,EAHW,OAKjB,IAESA,EAAKmI,IAEGmU,EAAetc,EAAfsc,WAIT1b,EAAQ,CACJgjB,UAHYtH,KAQhBjU,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAGhC,MAAQuO,GACNtO,QAAQC,IAAIqO,GAvBC,2CAAH,qDA4BlB,OAAOnX,ED7BemkB,GAAdF,EAAR,EAAQA,UAER,EAAgDljB,mBAAS,IAAzD,mBAAOqjB,EAAP,KAAyBC,EAAzB,KAEA,EAAoEzT,EAAQ,CACxE5C,OAAQoW,IADZ,mBAAOE,EAAP,KAAiCC,EAAjC,KAIQvW,EAAWsW,EAAXtW,OAuCR,OAhBA1M,qBAAU,WAEN,GAAI2iB,IAAc,SACOxc,IAAjBwc,EAAU,GAAkB,CAE5B,IAAMO,EAAeP,EAAU,GAAGhhB,QAElCohB,EAAoBG,EAAanjB,YAIzCwgB,EAASoC,KAEV,CAACA,IAIA,qBAAKxgB,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,gDAGA,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBACImO,SA9CH,SAAC9N,GAGtB,OAFAA,EAAE+N,iBAEa,KAAX7D,GAGI5J,EAAS2E,aAAmBiF,IAC5B1J,EAAQQ,KAAK,2BAKbV,EAAS2E,aAAmBqb,IAC5B9f,EAAQQ,KAAK,2BAgCD,UAGI,sBAAKrB,UAAU,aAAf,UACI,iDACA,wBACIuY,gBAAgB,cAChBlS,KAAK,SACL1C,MAAO4G,EACPgE,SAAUuS,EACV9gB,UAAU,4CALd,SAQQ6B,EAAMzB,KAAI,SAACC,GAAD,OACN,wBAEIsD,MAAOtD,EAAEb,QAFb,SAGEa,EAAEd,QAFKc,EAAEb,iBAO3B,wBAAQQ,UAAU,sCAAlB,sC,UEvFnBwH,GAAsB,SAAC6D,GAAD,MAAmB,CAClD9F,KAAMC,IAAMgC,oBACZ9B,QAAS2F,IAWAG,GAAsB,SAACG,EAAeD,GAAhB,MAA8B,CAC7DnG,KAAMC,IAAMgG,oBACZ9F,QAAS,CAAEiG,gBAAeD,cChBjBsV,I,OAAc,SAAE7O,GAEzB,IAAMxR,EAAWC,cACT4C,EAAY5B,aAAa,SAAAC,GAAK,OAAIA,EAAMwJ,gBAAxC7H,QACAzB,EAAQH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAAnCD,IAEF0J,EAAQ,IAAIwV,MAAO9O,EAAM/O,QAezB8d,EAAc,SAAE7gB,GAElB,OAAiB,OAAZmD,GAGG7C,GDhBcwgB,ECFN,WAIhB,IAFA,IAAIC,EAAW,CAAEjP,EAAM4H,SAEbzW,EAAQ,EAAGA,EAAQmI,EAAMrI,OAAQE,IAEvC8d,EAAU9d,GAAU,CAAEnD,GAAI,KAAMqD,QAAS,IAG7C,OAAO4d,EAS2BC,GDhBA,CACtC9b,KAAMC,IAAM+F,cACZ7F,QAASyb,KCeGxgB,EAAU6K,GAAqB,CAAErL,GAAIgS,EAAMhS,GAAIqD,QAASnD,EAAE8C,OAAOhD,IAAMgS,EAAM4H,QAAU,KAK3FpZ,EAAU6K,GAAqB,CAAErL,GAAIgS,EAAMhS,GAAIqD,QAASnD,EAAE8C,OAAOhD,IAAMgS,EAAM4H,QAAU,IDtBtE,IAACoH,GCgC1B,OACK,qBAAKnhB,UAAU,aAAf,SACG,sBAAKA,UAAU,kBAAkBmE,MAAO,CAAEC,UAAU,UAApD,UACI,0CAEI+N,EAAM5V,KAEV,uBACA,uBAEA,sBAAKyD,UAAU,MAAMmE,MAAO,CAAE+R,WAAW,QAAzC,UACI,sBAAKlW,UAAU,sCAAf,UACI,uBAAOG,GAAG,MAAMkG,KAAK,UAAUd,KAAK,QAChCtE,QAAUigB,IAEV,uBAAOI,QAAQ,MAAf,gBAEJ,uBAAOnhB,GAAG,UAAUkG,KAAK,UAAUd,KAAK,QACpCtE,QAAUigB,EACVK,gBAAc,IACd,uBAAOD,QAAQ,UAAf,mBAEJ,uBAAOnhB,GAAG,KAAKkG,KAAK,UAAUd,KAAK,QAC/BtE,QAAUigB,IAEV,uBAAOI,QAAQ,KAAf,gBACJ,mBAAGnQ,KAAK,IAAR,kBAEJ,uBACA,uBACA,qBAAKnR,UAAU,WAAWmE,MAAO,CAAEgS,cAAc,OAAQ/R,UAAU,UAAnE,SACI,wBAAQpE,UAAU,kBAAkBuE,SAAU4N,EAAMqP,UAAWvgB,QAASkR,EAAMsP,KAA9E,wBAIJ,qBAAKzhB,UAAU,WAAWmE,MAAO,CAAEC,UAAU,UAA7C,SACI,wBAAQpE,UAAU,kBAAkBuE,SAAU4N,EAAMuP,SAAUzgB,QAASkR,EAAMwP,KAA7E,yBAIJ,uBAEMxP,EAAM/O,SAAa+O,EAAM4H,SAE3B,wBAAQ/Z,UAAU,gCAAgCiB,QAjD5C,WAEtBN,EDpBuB,SAACoB,EAAKyB,GAEjC,6BAAO,4BAAAoB,EAAA,sDAEGiB,EAAMrF,IAASQ,SAFlB,SAMCwC,EAAQpD,IAAR,+BAAAwE,EAAA,MAAY,WAAOvE,GAAP,mBAAAuE,EAAA,yDAEqB,QAAzBvE,EAAEmD,QAAQ5F,WAFN,iCAIeb,YAAc,uBAAwB,CACrDuC,YAAae,EAAEF,GACf2F,WAAY/D,EACZgE,WAAYF,EACZ+b,GAAI,EACJC,KAAM,EACNC,GAAI,GACL,QAXC,cAIEjd,EAJF,gBAaeA,EAAKC,OAbpB,kBAeKC,GAfL,0CAiBOE,IAAKC,KAAK,KAAM,yBAA0B,YAjBjD,iDAkEOD,IAAKC,KAAK,KAAM,uCAAwC,UAlE/D,WAwBqB,YAAzB7E,EAAEmD,QAAQ5F,WAxBN,kCA0Beb,YAAc,uBAAwB,CACrDuC,YAAae,EAAEF,GACf2F,WAAY/D,EACZgE,WAAYF,EACZ+b,GAAI,EACJC,KAAM,EACNC,GAAI,GACL,QAjCC,eA0BEjd,EA1BF,iBAmCeA,EAAKC,OAnCpB,mBAqCKC,GArCL,0CAuCOE,IAAKC,KAAK,KAAM,yBAA0B,YAvCjD,WA+CqB,OAAzB7E,EAAEmD,QAAQ5F,WA/CN,kCAkDeb,YAAc,uBAAwB,CACrDuC,YAAae,EAAEF,GACf2F,WAAY/D,EACZgE,WAAYF,EACZ+b,GAAI,EACJC,KAAM,EACNC,GAAI,GACL,QAzDC,eAkDEjd,EAlDF,iBA2DeA,EAAKC,OA3DpB,mBA6DKC,GA7DL,0CA+DOE,IAAKC,KAAK,KAAM,yBAA0B,YA/DjD,4CAAZ,uDAND,wEAiFQD,IAAKC,KAAK,QAAS,6BAA8B,UAjFzD,wDCkBO6c,CAAiBhgB,EAAKyB,KA+ChB,8BCtFXwe,GAAmB,SAAC,GAAyB,IAAD,IAAtBC,mBAAsB,MAAR,GAAQ,EAQrD,OACI,8BACI,cAAC,KAAD,CAAOC,OARA,CACXC,WAAY,CACVC,SAAU,WAMR,SAESH,EAAY7hB,KAAK,SAAEC,EAAGiE,GAClB,OACI,cAAC,KAAD,CACGlB,OAAS6e,EAAY7e,OAErBuN,UAAYqQ,GACZzkB,KAAO8D,EAAEhD,SACT8C,GAAKE,EAAEf,aAHDgF,WCfzB+d,GAAsB,WAE/B,IAAMxhB,EAAUC,cAER0G,EAAwB5F,aAAY,SAAAC,GAAK,OAAIA,EAAMwJ,gBAAnD7D,oBAER,ECRgC,SAAEhI,GAElC,MAA0BlC,mBAAS,CAC/BglB,YAAY,KADhB,mBAAQ/lB,EAAR,KAAciB,EAAd,KAIAK,qBAAU,WAEN0kB,EAAsB/iB,KAEvB,CAAEA,IAEL,IAAM+iB,EAAoB,uCAAG,8CAAA3d,EAAA,6DAAQpF,EAAR,+BAAkB,GAAlB,SAENzC,YAAc,yCAAD,OAA2CyC,IAFlD,cAEnBqF,EAFmB,gBAGNA,EAAKC,OAHC,OAGnBlI,EAHmB,OAKzB,IAESA,EAAKmI,IAEG0Z,EAAsB7hB,EAAtB6hB,kBAITjhB,EAAQ,CACJ8kB,YAHY7D,KAQhBxZ,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAGhC,MAAQuO,GACNtO,QAAQC,IAAIqO,GAvBS,2CAAH,qDA4B1B,OAAOnX,EDhCiBimB,CAAqBhb,GAArC8a,EAAR,EAAQA,YAUR,OARAzkB,qBAAU,WAEsB,OAAxB2J,GACA3G,EAAQQ,KAAK,wBAGlB,CAACmG,EAAqB3G,IAGrB,cAAC,IAAME,SAAP,UAESuhB,IAAgB,IAGb,qBAAKtiB,UAAU,4BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,qBAGA,cAAC,GAAD,CAAkBiiB,YAAaK,YE5B9CG,GAAgB,WACzB,OACI,eAAC,IAAM1hB,SAAP,WACI,sBAAKf,UAAU,sBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,qBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMmG,SAE3B,sBAAK/V,UAAU,iBAAf,UACI,sCADJ,sCAMR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,sBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMoG,SAE3B,sBAAKhW,UAAU,iBAAf,UACI,sCADJ,oCAMR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,wBAAhB,SACI,cAAC,KAAD,CAAiB4P,KAAMmG,SAE3B,sBAAK/V,UAAU,iBAAf,UACI,sCADJ,2CAOZ,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,6BACI,8BACI,cAAC,KAAD,CAAiB4P,KAAMqG,OACvB,yDAGR,mFAGA,cAAC,IAAD,CAAM9G,GAAG,qBAAqBnP,UAAU,mCAAxC,uBAEJ,sBAAKA,UAAU,WAAf,UACI,6BACI,8BACI,cAAC,KAAD,CAAiB4P,KAAMwG,OACvB,2DAGR,gFAGA,cAAC,IAAD,CAAMjH,GAAG,iBAAiBnP,UAAU,gCAApC,8BC3DP0iB,GAAsB,WAE/B,IAAM/hB,EAAWC,cACXC,EAAUC,cAEhB,EAA4BxD,mBAAS,IAArC,mBAAQuE,EAAR,KAAeuc,EAAf,KAEQU,EAAoBD,KAApBC,gBAER,EAAkDxhB,mBAAS,IAA3D,mBAAQqjB,EAAR,KAA0BC,EAA1B,KAEA,EAAsEzT,EAAQ,CAC1EzC,QAASiW,IADb,mBAAQE,EAAR,KAAkCC,EAAlC,KAISpW,EAAYmW,EAAZnW,QA+BT,OAfA7M,qBAAU,WAEN,GAAKihB,IAAoB,SACO9a,IAAvB8a,EAAgB,GAAmB,CAEpC,IAAMiC,EAAejC,EAAgB,GAAGtf,QACxCohB,EAAqBG,GAK7B3C,EAAUU,KAEX,CAAEA,IAGD,qBAAK9e,UAAU,MAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,0BAASA,UAAU,QAAnB,UACI,wBAAQA,UAAU,gBAAlB,8CAGA,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMmO,SAtCL,SAAE9N,GAEvB,OADAA,EAAE+N,iBACe,KAAZ1D,GAEG/J,EAAU6G,GAAqBmZ,EAAiB/iB,aAChDiD,EAAQQ,KAAK,qBAIjBV,EAAU6G,GAAqBkD,IAC/B7J,EAAQQ,KAAK,qBA4BG,UACI,sBAAKrB,UAAU,aAAf,UACI,kDACA,wBACIuY,gBAAgB,cAChBlS,KAAK,UACL1C,MAAQ+G,EACR6D,SAAWuS,EACX9gB,UAAU,4CALd,SAQQ6B,EAAMzB,KAAI,SAAEC,GAAF,OACN,wBAEIsD,MAAQtD,EAAEb,QAFd,SAGGa,EAAEyd,aAFKzd,EAAEb,iBAO5B,wBAAQQ,UAAU,sCAAlB,sCC1EnB2iB,GAAgB,WACzB,OACI,cAAC,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACI3S,OAAK,EACLU,KAAK,WACLC,UAAY8R,KAEhB,cAAC,IAAD,CACIzS,OAAK,EACLU,KAAK,iBACLC,UAAY4P,KAEhB,cAAC,IAAD,CACIvQ,OAAK,EACLU,KAAK,kBACLC,UAAY0R,KAEhB,cAAC,IAAD,CACIrS,OAAK,EACLU,KAAK,qBACLC,UAAY+R,KAEhB,cAAC,IAAD,CAAUvT,GAAG,mBCZhByT,GAAY,WAErB,IAAMjiB,EAAWC,cACjB,EAA0BgB,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAA7CiE,EAAR,EAAQA,SAAUlE,EAAlB,EAAkBA,IAQlB,OANAlE,qBAAU,WAEN8C,E1EuIN,uCAAO,WAAOA,GAAP,yBAAAiE,EAAA,sEACc7H,YAAc,cAD5B,cACC8H,EADD,gBAEcA,EAAKC,OAFnB,cAEClI,EAFD,OAICkJ,EAAalJ,EAAKmF,IAJnB,SAKqBhF,YACxB,gBACA,CAAE+I,cACF,OACAlJ,EAAKK,OATF,cAKCuP,EALD,iBAYqBA,EAAY1H,OAZjC,iBAYG2E,EAZH,EAYGA,QAEJ7M,EAAKmI,IAEP7H,aAAauP,QAAQ,QAAS7P,EAAKK,OACnCC,aAAauP,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDhM,EACEiM,EAAM,CACJ7K,IAAKnF,EAAKmF,IACVuK,SAAU1P,EAAK0P,SACf7C,QAASA,MAIb9I,EAASmM,KA3BN,4CAAP,yD0ErIK,CAACnM,IAEAsF,EAEI,qBAAKjG,UAAU,iBAAiBmE,MAAO,CAAE2L,QAAS,SAAlD,SACI,qBAAK9P,UAAU,aAOvB,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACI0Q,KAAK,QACLC,UAAWmB,GACXE,kBAAmBjQ,IAOvB,cAAC,GAAD,CACI2O,KAAK,QACLC,UAAWJ,GACXyB,kBAAmBjQ,IAEvB,cAAC,GAAD,CACI2O,KAAK,eACLC,UAAWmF,GACX9D,kBAAmBjQ,IAEvB,cAAC,GAAD,CACI2O,KAAK,iBACLC,UAAWyK,GACXpJ,kBAAmBjQ,IAEvB,cAAC,GAAD,CACI2O,KAAK,cACLC,UAAWmM,GACX9K,kBAAmBjQ,IAEvB,cAAC,GAAD,CACI2O,KAAK,eACLC,UAAW2P,GACXtO,kBAAmBjQ,IAEvB,cAAC,GAAD,CACI2O,KAAK,WACLC,UAAWgS,GACX3Q,kBAAmBjQ,IAEvB,cAAC,IAAD,CAAUoN,GAAG,wBC9EpB0T,GAAgB,WAC3B,OACE,cAAC,IAAD,CAAU5W,MAAQA,EAAlB,SACE,cAAC,GAAD,OCJN6W,IAASC,OACL,cAAC,GAAD,IACFvS,SAASwS,eAAe,U,6QCFbvK,EAAgB,SAAEpb,EAAUU,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKqB,EAAoB4G,EAAMC,GAE7F,8CAAO,WAAQ3F,GAAR,iBAAAiE,EAAA,6DAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,kBAOoBhL,YAAc,sBAAuB,CACpDwC,OAAO8G,EACPhJ,SAASA,EACTU,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJqB,mBAAmBA,EACnBD,QAAQ8G,GACV,QAlBH,cAOOzB,EAPP,gBAoBoBA,EAAKC,OApBzB,QAoBOlI,EApBP,QAsBWmI,IACNE,IAAKC,KAAK,KAAK,sBAAuB,WACtCvE,EAAU4H,eACV5H,EAAUqH,iBAGV/C,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BxE,EAAU4H,eACV5H,EAAUqH,gBA9Bf,kDAkCC5C,QAAQC,IAAR,MACA1E,EAAU4H,eACV5H,EAAUqH,eApCX,0DAAP,uDA2CSwQ,EAAY,SAAElZ,EAAajC,EAAUU,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKqB,EAAoB4G,EAAMC,GAEtG,8CAAO,WAAQ3F,GAAR,iBAAAiE,EAAA,6DAEHjE,EAAU6H,eACV7H,EAAUoH,eAHP,kBAOoBhL,YAAc,yBAA0B,CACvDuC,cACAC,OAAO8G,EACPhJ,SAASA,EACTU,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJC,IAAIA,EACJqB,mBAAmBA,EACnBD,QAAQ8G,GACV,OAnBH,cAOOzB,EAPP,gBAqBoBA,EAAKC,OArBzB,QAqBOlI,EArBP,QAuBWmI,IACNE,IAAKC,KAAK,KAAK,sBAAuB,WACtCvE,EAAU4H,eACV5H,EAAUqH,iBAGV/C,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAC1BxE,EAAU4H,eACV5H,EAAUqH,gBA/Bf,kDAmCC5C,QAAQC,IAAR,MACA1E,EAAU4H,eACV5H,EAAUqH,eArCX,0DAAP,uDA2CSzG,EAAsB,SAAEjC,GAEjC,6BAAO,8BAAAsF,EAAA,+EAGoB7H,YAAc,yBAA0B,CACvDuC,eACF,UALH,cAGOuF,EAHP,gBAOoBA,EAAKC,OAPzB,QAOOlI,EAPP,QASWmI,GACNE,IAAKC,KAAK,KAAK,qBAAsB,WAGrCD,IAAKC,KAAK,KAAMtI,EAAKuI,IAAK,SAb/B,kDAiBCC,QAAQC,IAAR,MAjBD,2DAwBEjE,EAAmB,SAAE3D,EAAU8B,EAAQC,EAAS0B,GAA7B,OAA4CkJ,EAAe,CAAE3M,WAAU8B,SAAQC,UAAS0B,aAElHkJ,EAAgB,SAAEhE,GAAF,MAAuB,CACzCb,KAAMC,IAAM6E,kBACZ3E,QAASU,IAGAjF,EAAqB,iBAAO,CAAEoE,KAAMC,IAAM8E,uB,+BChIvD,qtBAIazC,EAAiB,iBAAO,CAAEtC,KAAMC,IAAMqC,gBACtCC,EAAiB,iBAAO,CAAEvC,KAAMC,IAAMsC,iBAEtCC,EAAuB,iBAAO,CAAExC,KAAKC,IAAMuC,uBAC3CC,EAAwB,iBAAO,CAAEzC,KAAKC,IAAMwC,wBAE5CC,EAAiB,iBAAO,CAAE1C,KAAMC,IAAMyC,gBACtCC,EAAiB,iBAAO,CAAE3C,KAAMC,IAAM0C,iBAEtCC,EAAe,iBAAO,CAAE5C,KAAMC,IAAM2C,cACpCC,EAAe,iBAAO,CAAE7C,KAAMC,IAAM4C,eAEpCC,EAAsB,iBAAO,CAAE9C,KAAMC,IAAM6C,sBAC3CC,EAAuB,iBAAO,CAAE/C,KAAMC,IAAM8C,uBAE5CC,EAA0B,iBAAO,CAAEhD,KAAMC,IAAM+C,0BAC/CC,EAA2B,iBAAO,CAAEjD,KAAMC,IAAMgD,2BAEhDY,EAAc,iBAAO,CAAE7D,KAAKC,IAAM4D,cAClCC,EAAe,iBAAO,CAAE9D,KAAKC,IAAM6D,eAGnCX,EAA4B,iBAAO,CAAEnD,KAAKC,IAAMkD,4BAChDC,EAA8B,iBAAO,CAAEpD,KAAKC,IAAMmD,8BAElDC,EAA4B,iBAAO,CAAErD,KAAKC,IAAMoD,4BAChDC,EAA8B,iBAAO,CAAEtD,KAAKC,IAAMqD,8BAElDC,EAAwB,iBAAO,CAAEvD,KAAKC,IAAMsD,wBAC5CC,EAA0B,iBAAO,CAAExD,KAAKC,IAAMuD,0BAO9CN,EAAgB,iBAAO,CAAElD,KAAMC,IAAMiD,iB,+ECxCrCjD,GAAK,GAEdqC,cAAe,oBACfC,eAAgB,qBAIhBC,qBAAsB,qBACtBC,sBAAuB,sBAEvBC,cAAe,oBACfC,eAAgB,qBAEhBG,oBAAqB,2BACrBC,qBAAsB,2BAEtBC,wBAAyB,gCACzBC,yBAA0B,gCAC1BY,YAAa,kBACbC,aAAc,mBAGdlB,YAAa,kBACbC,aAAc,mBACdK,cAAe,cAEfkB,cAAe,sBAEfG,qBAAsB,mCACtBI,0BAA2B,kCAE3BxB,0BAA2B,4CAC3BC,4BAA6B,8CAE7BsB,kBAAmB,mCACnBrB,0BAA2B,4CAC3BC,4BAA6B,8CAE7BC,sBAAuB,wCACvBC,wBAAyB,0CAEzBG,qBAAsB,uCACtBF,wBAAyB,0CACzBC,yBAA0B,2CAE1B1C,gBAAiB,6BACjBiE,eAAgB,4BAChBC,gBAAiB,6BAEjBE,iBAAkB,qCAClBC,gBAAiB,mCACjBC,iBAAkB,qCAElBC,yBAA0B,uDAC1BE,wBAAyB,qDACzBC,yBAA0B,uDAG1Bd,YAAa,uBACbE,kBAAmB,oCACnBC,oBAAqB,mCAGrBa,wBAAyB,mCACzBC,0BAA2B,kCAE3B5D,oBAAqB,iCACrB8D,mBAAoB,gCACpBC,cAAe,iCACfC,oBAAqB,wCAErBlG,mBAAoB,uCAvEN,mCAwEM,sCAxEN,+BA4EE,sBA5EF,uCA6EU,+BA7EV,6BA8EA,gCA9EA,mCA+EM,sCA/EN,+BAgFE,sBAhFF,0BAiFH,gBAjFG,kCAkFK,yBAlFL,yCAmFY,4BAnFZ,mCAqFM,6CArFN,kCAsFK,2CAtFL,2BAwFF,iBAxFE,K","file":"static/js/main.c07a4e68.chunk.js","sourcesContent":["\nconst baseURL = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseURL}/${endpoint}`; // localhost:4000/api/\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n\n}\nconst fetchConToken = (endpoint, data, method = 'GET', tokenStart = '') => {\n\n    const url = `${baseURL}/${endpoint}`; // localhost:4000/api/\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            },\n        });\n    }\n    else if (tokenStart !== '') {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': tokenStart\n            },\n            body: JSON.stringify(data)\n        });\n    }\n    else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import { useEffect, useState } from \"react\";\n\n\nexport const useFetchDestructureValue = (pregunta = '') => {\n\n    const [data, setData] = useState({ image: '' });\n\n    const question = new Buffer.from(pregunta).toString(\"ascii\");\n\n    useEffect(() => {\n\n        setData({\n            image: question\n        })\n\n    }, [pregunta])\n\n    return data;\n\n}\n","import { useEffect, useState } from \"react\";\n\n\nexport const useFetchOptionsDestructure = ( op1 = '', op2 = '', op3 = '', op4 = '', op5 = '', op6 = '' ) => {\n\n    const [ data, setData ] = useState([]);  \n    \n    const optionOne   = new Buffer.from( op1 ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2).toString('ascii');\n    const optionThree = new Buffer.from( op3 ).toString('ascii');\n    const optionFour  = new Buffer.from( op4 ).toString('ascii');\n    const optionFive  = new Buffer.from( op5 ).toString('ascii');\n    const optionSix   = new Buffer.from( op6 ).toString('ascii');\n\n    useEffect(() => {\n\n        setData({ \n            option1 : optionOne,\n            option2 : optionTwo,\n            option3 : optionThree,\n            option4 : optionFour,\n            option5 : optionFive,\n            option6 : optionSix })\n       \n    }, [ optionOne, optionTwo, optionThree, optionFour, optionFive, optionSix ]);\n\n    return data;\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { PanelBody } from './PanelBody';\n\nexport const TestShapeCard = ({ questionData, option }) => {\n\n    const [ dataOption, setDataOption ] = useState([])\n    const  { id_pregunta, pregunta, nombre, id_test, op1, op2, op3, op4, op5, op6, respuesta_correcta, createdAt, updatedAt, test_formas } = questionData;\n    const { nombre: nombreTest } = test_formas;\n    \n    const questions   = new Buffer.from( pregunta.data ).toString(\"ascii\");\n\n    const optionOne   = new Buffer.from( op1.data ).toString(\"ascii\");\n    const optionTwo   = new Buffer.from( op2.data ).toString('ascii');\n    const optionThree = new Buffer.from( op3.data ).toString('ascii');\n    const optionFour  = new Buffer.from( op4.data ).toString('ascii');\n    const optionFive  = new Buffer.from( op5.data ).toString('ascii');\n    const optionSix   = new Buffer.from( op6.data ).toString('ascii');\n\n    const Options = [\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            optionFive,\n            optionSix\n    ];\n\n    useEffect(() => {\n        \n        setDataOption( option );\n        \n    }, [ option ]);\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n               <PanelBody \n                   questions = { questions }\n                   nombre = { nombre }\n                   createdAt = { createdAt }\n                   updatedAt = { updatedAt }\n                   respuesta_correcta = { respuesta_correcta }\n                   nombreTest = { nombreTest }\n                   id_pregunta = { id_pregunta }\n                   id_test = { id_test }\n                   filterData = { dataOption }\n                   setFilterData = { setDataOption }\n               />\n            </div>\n            <div className=\"panel-body\">\n                <div id=\"gallery\" className=\"media-gal isotope\" >\n                    {\n                        Options.map( ( e, id )=>(\n                            <div className=\"images item  isotope-item\" key={ id }>\n                                <img \n                                    \n                                    src={ e } \n                                    alt=\"Option1\" />\n                                <p>Opción { id + 1 } </p>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <hr/>\n        </div >\n    );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { questionClearShape, questionDeleteShape, questionSetShape } from '../../../../actions/questionShape';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ id_pregunta = '', id_test = '', questions = [], nombre = [], createdAt = '', updatedAt = '', respuesta_correcta = '', nombreTest = '', filterData, setFilterData }) => {\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const handleActiveQuestions = (id_pregunta, nombre, id_test, id_resp) => {\n\n        dispatch(questionClearShape());\n        dispatch(questionSetShape(id_pregunta, nombre, id_test, id_resp));\n        history.push('/test/register/updated/shapes');\n\n    }\n    const handleDeleteQuestion = (id_pregunta) => {\n        dispatch(questionDeleteShape(id_pregunta));\n        setFilterData(\n            filterData.filter(\n                e => (e.id_pregunta !== id_pregunta)\n            ));\n\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-3\">\n                <div className=\"profile-pic text-center\">\n                    <img src={questions} alt=\"question\" />\n                </div>\n            </div>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Nombre</h1>\n                    <br />\n                    <span className=\"text-muted\">{nombre}</span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : {moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : {moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestions(id_pregunta, nombre, id_test, respuesta_correcta) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp;\n                    <button onClick={() => { handleDeleteQuestion(id_pregunta) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Nombre</h1>\n                    <p>{nombre} </p>\n                    <h1>Respuesta Correcta</h1>\n                    <p>Imagen : {respuesta_correcta}</p>\n                    <h1>Nombre de Prueba </h1>\n                    <p>{nombreTest}</p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answersShapeRegister } from '../../../actions/answersShape';\nimport { useFetchQuestionShapeFindAll } from '../../../hooks/QuestionShape/useFetchQuestionShapeFindAll';\n\nexport const ShapeScreenQuestion = () => {\n\n    const INITIAL_LIMIT = 0;\n    const VALUEDEFAULT = [];\n\n    const dispatch = useDispatch();\n\n    const { shape } = useSelector(state => state.answerShape);\n\n    const { uid } = useSelector(state => state.auth);\n\n    const [limit, setLimit] = useState(INITIAL_LIMIT);\n\n    const { questionsShape } = useFetchQuestionShapeFindAll(shape, limit, setLimit);\n\n    const [disabledFinish, setDisabledFinish] = useState(false);\n\n    const [disabledStart, setDisabledStart] = useState(false);\n\n    const [question, setQuestion] = useState([]);\n\n    const [images, setImages] = useState([]);\n\n    const [limitAnswers, setLimitAnswers] = useState(0);\n\n    const [answersShape, setAnswersShape] = useState({\n        data: VALUEDEFAULT\n    });\n\n    const handleNextQuestion = () => {\n        setLimit(limit + 1);\n        setLimitAnswers(limitAnswers + 1);\n    }\n    const handlePrevQuestion = () => {\n        setLimit(limit - 1);\n        setLimitAnswers(limitAnswers - 1);\n    }\n\n    const handleSelect = (e) => {\n        handleOfChangeTheValue(e.target.id);\n    }\n\n    useEffect(() => {\n\n        if (limit === 0) {\n            return (\n                setDisabledStart(true),\n                setDisabledFinish(false)\n            );\n        }\n        else if (questionsShape.length === 0) {\n\n            return (\n                setDisabledFinish(true),\n                setDisabledStart(false)\n            );\n        }\n        return (\n            setDisabledFinish(false),\n            setDisabledStart(false)\n        )\n\n    }, [questionsShape, limit]);\n\n    const handleOfChangeTheValue = (questionCorrect) => {\n\n        const answersData = answersShape.data;\n\n        const index = answersData.findIndex(answers => answers.id === questionsShape[0].id_pregunta);\n\n        const respuesta_correcta = questionsShape[0].respuesta_correcta;\n\n        if (questionCorrect !== null) {\n\n            filterDataAnswers(index, respuesta_correcta, questionCorrect);\n        }\n        else {\n            filterDataAnswers(index, respuesta_correcta, questionCorrect);\n        }\n    }\n\n    const filterDataAnswers = (index, respuesta_correcta, questionCorrect) => {\n\n        if (respuesta_correcta !== null && questionCorrect !== null) {\n\n            if (respuesta_correcta.toString() === questionCorrect.toString()) {\n\n                correctAnswer(index, 1, respuesta_correcta, questionCorrect);\n\n            }\n            else {\n                correctAnswer(index, 0, respuesta_correcta, questionCorrect);\n            }\n\n        } else {\n            if (respuesta_correcta === null || undefined || '') {\n\n                correctAnswer(index, 0, 1, 0);\n            }\n            else if (questionCorrect === null || undefined || '') {\n\n                correctAnswer(index, 0, respuesta_correcta, 0);\n            }\n        }\n\n    }\n\n    const correctAnswer = (index, value, respuesta_correcta, questionCorrect) => {\n\n        if (index.toString() === '-1') {\n\n            if (respuesta_correcta.toString() === questionCorrect.toString()) {\n\n                const { data } = answersShape;\n\n                const newData = [\n\n                    ...data,\n                    {\n                        id: questionsShape[0].id_pregunta,\n                        bien_mal: value,\n                    }\n\n                ];\n                setAnswersShape({ data: newData });\n\n            }\n            else {\n\n                const { data } = answersShape;\n\n                const newData = [\n\n                    ...data,\n                    {\n                        id: questionsShape[0].id_pregunta,\n                        bien_mal: value,\n                    }\n\n                ];\n                setAnswersShape({ data: newData });\n            }\n\n        } else {\n\n            const { data } = answersShape;\n\n            const dataFilter = data.map(function (dato) {\n                if (dato.id === questionsShape[0].id_pregunta) {\n                    dato.bien_mal = value;\n                }\n\n                return dato;\n            });\n\n            setAnswersShape({ data: dataFilter });\n\n        }\n    }\n\n    const changeAnswerData = () => {\n\n\n        const questions = new Buffer.from(questionsShape[0].pregunta.data).toString(\"ascii\");\n\n        const optionOne = new Buffer.from(questionsShape[0].op1.data).toString(\"ascii\");\n        const optionTwo = new Buffer.from(questionsShape[0].op2.data).toString('ascii');\n        const optionThree = new Buffer.from(questionsShape[0].op3.data).toString('ascii');\n        const optionFour = new Buffer.from(questionsShape[0].op4.data).toString('ascii');\n        const optionFive = new Buffer.from(questionsShape[0].op5.data).toString('ascii');\n        const optionSix = new Buffer.from(questionsShape[0].op6.data).toString('ascii');\n\n        const Options = [\n            optionOne,\n            optionTwo,\n            optionThree,\n            optionFour,\n            optionFive,\n            optionSix\n        ];\n        setQuestion(questions);\n        setImages(Options);\n\n        handleOfChangeTheValue(null);\n\n    }\n\n    const handleAnswersShapeRegister = () => {\n\n        dispatch(answersShapeRegister(uid, answersShape.data));\n    }\n\n    useEffect(() => {\n\n        if (questionsShape[0] !== undefined) { changeAnswerData() };\n\n    }, [questionsShape]);\n\n    return (\n        <React.Fragment>\n            {\n                (questionsShape.length !== 1 && disabledFinish === true) ?\n                    <div className=\"row animated fadeIn\" >\n                        <br />\n                        <div className=\"col-sm-6\" >\n                            <button className=\"btn btn-success btn-lg btn-block\"\n                                onClick={handlePrevQuestion}\n                            >\n                                Atrás\n                            </button>\n                        </div>\n\n                        <div className=\"col-sm-6\">\n                            <button className=\"btn btn-primary btn-lg btn-block\"\n                                onClick={handleAnswersShapeRegister}\n                            >\n                                Enviar respuestas\n                            </button>\n                        </div>\n                    </div>\n                    :\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            PRUEBAS FORMAS\n                        </header>\n\n                        {\n                            (questionsShape.length !== 1) ?\n                                <div>\n                                    <div className=\"col-sm-6\">\n                                        Cargando ...\n                                    </div>\n                                </div>\n                                :\n                                <div className=\"panel-body\" style={{ textAlign: 'center' }} >\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\" style={{ paddingLeft: '5%' }}>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-4 form-group text-center\" />\n                                                <div className=\"col-sm-4 form-group text-center\">\n                                                    <section className=\"panel\">\n                                                        <div id=\"gallery\" className=\"media-gal isotope\" style={{ textAlign: 'center' }} >\n                                                            <div className=\"images item  isotope-item\" >\n                                                                <img\n                                                                    src={question}\n                                                                    alt=\"Option1\" />\n                                                                <h2 >Pregunta</h2>\n                                                            </div>\n                                                        </div>\n                                                    </section>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\" style={{ paddingLeft: '5%' }} >\n                                            <div className=\"row\">\n\n                                                {\n                                                    (images !== []) ?\n\n                                                        images.map((e, key) =>\n                                                        (\n\n                                                            <div className=\"col-sm-4 form-group text-center\" key={key} >\n                                                                <section className=\"panel\">\n                                                                    <div id=\"gallery\" className=\"media-gal isotope\" style={{ textAlign: 'center' }} >\n                                                                        <div className=\"images item  isotope-item\" >\n                                                                            <img\n                                                                                src={e}\n                                                                            />\n                                                                            <h2 >Opción {key + 1}</h2>\n                                                                            <button className=\"btn btn-info\"\n                                                                                onClick={handleSelect}\n                                                                                id={key + 1}\n                                                                            >Seleccionar</button>\n                                                                        </div>\n                                                                    </div>\n                                                                </section>\n                                                            </div>\n\n                                                        )\n                                                        )\n                                                        :\n                                                        <div>\n                                                            Cargando...\n                                                        </div>\n                                                }\n                                            </div>\n                                            <div className=\"d-grid gap-2\">\n                                                <div className=\"col-sm-6\">\n                                                    <button className=\"btn btn-primary\"\n                                                        onClick={handlePrevQuestion}\n                                                        disabled={disabledStart}\n                                                    >Anterior</button>\n                                                </div>\n                                                <div className=\"col-sm-6\">\n                                                    <button className=\"btn btn-success\"\n                                                        onClick={handleNextQuestion}\n                                                        disabled={disabledFinish}\n                                                    >Siguiente</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                        }\n                    </section>\n            }\n\n        </React.Fragment>\n    )\n}\n","// localhost:4000/api/test-formas//tformas/answers\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchQuestionShapeFindAll = (shape, INITIAL_LIMIT, setLimit) => {\n\n    const history = useHistory();\n    const [questionsShape, setQuestionsShape] = useState([]);\n\n    useEffect(() => {\n\n        return testShapeLoading(shape, INITIAL_LIMIT);\n\n    }, [shape, INITIAL_LIMIT, setLimit]);\n\n\n    useEffect(() => {\n\n        return () => {\n            setQuestionsShape([]);\n        }\n    }, []);\n\n\n\n    const testShapeLoading = async (id_test, skip) => {\n\n        if (skip === -1) {\n            setLimit(0);\n        }\n        else {\n\n            const resp = await fetchConToken(`test-formas/tformas/answers`, {\n                limit: 1,\n                skip: skip,\n                id_test,\n            }, 'POST');\n\n            const body = await resp.json();\n\n            try {\n\n                if (body.ok) {\n\n                    const { preguntaFormas } = body;\n\n                    return setQuestionsShape(preguntaFormas);\n\n                }\n                else {\n                    Swal.fire(':(', body.msg, 'error');\n                    history.push(\"/answers/shape\");\n\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n    }\n\n    return { questionsShape };\n\n\n}","import moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const answersShapeActive = (answerShape) => ({\n    type: types.shapeAnswersActive,\n    payload: answerShape\n});\n\n// AnwersShape Response\n\n\nexport const answersShapeFindAll = (answerShape) => ({\n    type: types.answersShapeActive,\n    payload: answerShape\n});\nexport const answerShapeClear = () => ({\n    type: types.shapeAnswersClear,\n});\n\nexport const answersShapeRegister = (uid, answers) => {\n\n    return async () => {\n\n        const now = moment().format();\n\n        try {\n            answers.map(async (e) => {\n\n                const resp = await fetchConToken('respuesta-formas/new', {\n                    id_pregunta: e.id,\n                    persona_id: uid,\n                    fecha_hora: now,\n                    bien_mal: e.bien_mal\n                }, 'POST');\n\n                const body = await resp.json();\n\n                if (body.ok) {\n\n                    return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                } else {\n\n                    return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                }\n\n            });\n\n        } catch (err) {\n\n            return Swal.fire('Error', \"Hable con el administrador\", 'error');\n\n        }\n    }\n\n};","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking:true,\n    // uid:null,\n    // name:null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch( action.type ){\n\n        case types.authLogin:\n                return{\n                    ...state,\n                    ...action.payload,\n                    checking: false\n                }\n        case types.authUserUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authUserUpdatePassword:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authCheckingFinish:\n            return{\n                ...state,\n                checking:false\n            }\n        case types.accountUpdate:\n            return {\n                ...state,\n                persona: action.payload\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n        default: \n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    institutions:[],\n    activeInstitution:null\n}\n\nexport const institutionReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n\n        case types.institutionSetActive:\n            return {\n                ...state,\n                activeInstitution: state.institutions.find(  institution => institution.id_institucion.toString() === action.payload.id )\n            }\n        case types.institutionLoaded:\n            return {\n                ...state,\n                institutions: [ ...action.payload]\n            }\n        case types.institutionSetActiveClear:\n            return { \n                ...state,\n                activeInstitution:null\n            }\n        \n        default:\n            return state\n    }\n    \n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    questionActive: {\n        question: null,\n        name: '',\n        id_test: null,\n        id_resp: null\n    }\n}\n\nexport const questionShape = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSetActive:\n            return {\n                ...state,\n                questionActive: action.payload\n            }\n        case types.questionClearActive:\n            return { \n                ...state,\n                questionActive: null\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape:[]\n}\n\nexport const shapeReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.shapeLoaded:\n            return {\n                ...state,\n                shape:[ ...action.payload ]\n            }\n        default:\n            return state\n    }\n    \n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    testShape: [],\n    testShapeActive: null\n}\n\nexport const testShapeReducer = ( state = initialState, action  ) => {\n\n    switch ( action.type ) {\n\n        case types.testShapeActive:\n            return {\n                ...state,\n                testShapeActive: state.testShape.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testShapeClear:\n            return {\n                ...state,\n                testShapeActive: null\n            }\n        case types.testShapeLoaded:\n            return {\n                ...state,\n                testShape: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    uiDrowp:'dropdown',\n    uiSidebar:'nav-collapse',\n    uiSection:'',\n    uiLoadingButton:'fa fa-lock',\n    uiLoadingSaveButton:'fa fa-save',\n    uiDisabled:false,\n\n    uiSelection:'none',\n    uiRegisterSelectAcordion:'',\n    uiShowSelectInstitution:'',\n\n    uiIconClose:'dcjq-icon',\n\n    uiModal: false\n\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n    switch ( action.type ) {\n        case types.uiOpenSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse'\n            }\n        case types.uiCloseSidebar:\n            return {\n                ...state,\n                uiSidebar:'nav-collapse hide-left-bar'\n            }\n        case types.uiTrueDisabledButton:\n            return {\n                ...state,\n                uiDisabled:true\n            }\n        case types.uiFalseDisabledButton:\n            return {\n                ...state,\n                uiDisabled:false\n            }\n        case types.uiOpenSection:\n            return {\n                ...state,\n                uiSection:''\n            }\n        case types.uiCloseSection:\n            return {\n                ...state,\n                uiSection:'merge-left'\n            }\n        case types.uiOpenDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown open'\n            }\n        case types.uiCloseDrowp:\n            return {\n                ...state,\n                uiDrowp:'dropdown'\n            }\n\n        case types.uiOpenLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-lock'\n            }\n        case types.uiCloseLoadingButton:\n            return {\n                ...state,\n                uiLoadingButton:'fa fa-spin fa-refresh'\n            }\n            \n        case types.uiOpenLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-save'\n            }\n        case types.uiCloseLoadingSaveButton:\n            return{\n                ...state,\n                uiLoadingSaveButton:'fa fa-spin fa-refresh'\n            }\n        \n        case types.uieventLogout:\n            return {\n                ...initialState\n            }\n        \n        // Events Screen Institution\n\n        case types.institutionAcordionSelect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'block',\n                checking:false\n            }\n        case types.institutionAcordionDeselect:\n            return{\n                ...state,\n                ...action.payload,\n                uiSelection:'none',\n                checking:false\n            }\n        case types.institutionSelectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'active',\n                checking:false\n            }\n        case types.institutionDeselectRegister:\n            return{\n                ...state,\n                ...action.payload,\n                uiRegisterSelectAcordion:'',\n                checking:false\n            }\n\n        case types.institutionSelectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:'active'\n            }\n        case types.institutionDeselectShow:\n            return {\n                ...state,\n                ...action.payload,\n                uiShowSelectInstitution:''\n            }\n        case types.institutionOpenAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionCloseAcordion:\n            return{\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.institutionIconClose:\n            return{\n                ...state,\n                ...action.payload,\n                uiIconClose:'dcjq-icon',\n                cheking:false\n            }\n        case types.uiModalTrue:\n            return {\n                ...state,\n                uiModal: true\n            }\n        case types.uiModalFalse:\n            return {\n                ...state,\n                uiModal: false\n            }\n                \n    \n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initState = {\n    testSimple: [],\n    testActiveSimple: null\n}\n\nexport const testSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleActive:\n            return {\n                ...state,\n                testActiveSimple: state.testSimple.find(  e => e.id_test.toString() === action.payload.id )\n            }\n        case types.testSimpleClear:\n            return {\n                ...state,\n                testActiveSimple: null\n            }\n        case types.testSimpleLoaded:\n            return { \n                ...state,\n                testSimple: [ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    category:[],\n    categoryActive: null\n}\n\nexport const testSimpleCategoryReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        case types.testSimpleCategoryActive:\n            return { \n                ...state,\n                categoryActive: state.category.find(  e => e.id_categoria.toString() === action.payload.id )\n            }\n        case types.testSimpleCategoryClear:\n            return {\n                ...state,\n                categoryActive: null\n            }\n        case types.testSimpleCategoryLoaded:\n            return {\n                ...state,\n                category:[ ...action.payload ]\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initState = { \n    questionActive: [],\n}\n\nexport const questionSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.questionSimpleSetActive:\n            return {\n                ...state,\n                questionActive:  action.payload \n            }\n        case types.questionSimpleClearActive:\n            return { \n                ...state,\n                questionActive: [],\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersSimpleActive: null,\n    answers: null\n}\n\nexport const answersSimpleReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersSimpleActive:\n            return{\n                ...state,\n                answersSimpleActive: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersSimpleActive: null\n            }\n        case types.answersfilter:\n                return{\n                    ...state,\n                    answers: action.payload\n                }\n        case types.answersfilterActive:\n            let array = state.answers;\n            array[ action.payload.position ] = action.payload.answersActive \n            return{\n                ...state,\n                answers: array\n            }      \n        default:\n            return  state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    shape: []\n}\n\nexport const shapeAnswersReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case types.shapeAnswersActive:\n            return {\n                ...state,\n                shape: action.payload\n            }\n        case types.shapeAnswersClear:\n            return {\n                ...state,\n                shape: []\n            }\n        default:\n            return state\n    }\n\n}\n","import { types } from \"../types/types\";\n\n\nconst initState = {\n    answersShape: [],\n}\n\nexport const answersShapeReducer = ( state = initState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.answersShapeActive:\n            return{\n                ...state,\n                answersShape: action.payload\n            }\n        case types.answersSimpleClear:\n            return{\n                ...state,\n                answersShape: []\n            }\n        // case types.answersfilter:\n        //         return{\n        //             ...state,\n        //             answers: action.payload\n        //         }\n        // case types.answersfilterActive:\n        //     let array = state.answers;\n        //     array[ action.payload.position ] = action.payload.answersActive \n        //     return{\n        //         ...state,\n        //         answers: array\n        //     }      \n        default:\n            return  state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { institutionReducer } from \"./institutionReducer\";\nimport { questionShape } from \"./questionShape\";\nimport { shapeReducer } from \"./shapeReducer\";\nimport { testShapeReducer } from \"./testShapeReducer\";\nimport { uiReducer } from \"./uiReducer\";\nimport { testSimpleReducer } from \"./testSimpleReducer\";\nimport { testSimpleCategoryReducer } from \"./testSimpleCategoryReducer\";\nimport { questionSimpleReducer } from \"./questionSimpleReducer\";\nimport { answersSimpleReducer } from \"./answersSimpleReducer\";\nimport { shapeAnswersReducer } from \"./shapeAnswersReducer\";\nimport { answersShapeReducer } from \"./answersShapeReducer\";\n\nexport const rootReducer = combineReducers({\n       ui:uiReducer,\n       auth: authReducer,\n       institution:institutionReducer,\n       shape:shapeReducer,\n       questionShape:questionShape,\n       tShape:testShapeReducer,\n       tSimple:testSimpleReducer,\n       category:testSimpleCategoryReducer,\n       qSimple:questionSimpleReducer,\n       answerSimple:answersSimpleReducer,\n       answerShape:shapeAnswersReducer,\n       shapeAnswer:answersShapeReducer\n\n});","import { createStore , compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n)","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport {\n  uiCloseLoadingButton,\n  uiCloseLoadingSaveButton,\n  uieventLogout,\n  uiFalseDisabledButton,\n  uiOpenLoadingButton,\n  uiOpenLoadingSaveButton,\n  uiTrueDisabledButton,\n} from \"./ui\";\n// import { eventLogout } from \"./events\";\n\nexport const startLogin = (username, password) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startLoginAddAccount = (username, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { username, password }, \"POST\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        })\n      );\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startRegister = (\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  genero,\n  edad,\n  direccion,\n  padres_responsables,\n  dni,\n  email,\n  username,\n  password,\n  password2,\n  id_institucion\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingButton());\n    dispatch(uiTrueDisabledButton());\n\n    if (password !== password2) {\n      return (\n        Swal.fire(\":(\", \"Las contraseñas no coinciden\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    } else if (\n      password.trim().length <= 5 ||\n      \"\" ||\n      password2.trim().length <= 5 ||\n      \"\" ||\n      username === \"\"\n    ) {\n      return (\n        Swal.fire(\":(\", \"El username o password no son validos\", \"error\"),\n        dispatch(uiOpenLoadingButton()),\n        dispatch(uiFalseDisabledButton())\n      );\n    }\n\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      {\n        nombre,\n        primer_apellido,\n        segundo_apellido,\n        celular,\n        imei,\n        genero,\n        edad,\n        direccion,\n        padres_responsables,\n        dni,\n        email,\n        username,\n        password,\n        id_institucion,\n      },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      dispatch(startLoginAddAccount(username, password));\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n      dispatch(uiOpenLoadingButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    const persona_id = body.uid;\n    const respPersona = await fetchConToken(\n      \"users/usuario\",\n      { persona_id },\n      \"POST\",\n      body.token\n    );\n\n    const { persona } = await respPersona.json();\n\n    if (body.ok) {\n\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          username: body.username,\n          persona: persona,\n        }),\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startUpdateAccount = (\n  persona_id,\n  nombre,\n  primer_apellido,\n  segundo_apellido,\n  celular,\n  imei,\n  edad,\n  dni,\n  direccion,\n  email\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      const resp = await fetchConToken(\n        \"users/update\",\n        {\n          persona_id,\n          nombre,\n          primer_apellido,\n          segundo_apellido,\n          celular,\n          imei,\n          edad,\n          dni,\n          direccion,\n          email,\n        },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(accountUpdated(persona));\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch(uiOpenLoadingSaveButton());\n      dispatch(uiFalseDisabledButton());\n    }\n  };\n};\nexport const startUpdateUser = (persona_id, username) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (username.trim() === \"\") {\n        return (\n          Swal.fire(\"Error\", \"El username esta vacio\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-user\",\n        { persona_id, username },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      if (body.ok) {\n        dispatch(\n          login({\n            uid: body.uid,\n            username: body.username,\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const startUpdateUserPassword = (\n  persona_id,\n  passwordCurrent,\n  passwordNew,\n  passwordAgain\n) => {\n  return async (dispatch) => {\n    dispatch(uiCloseLoadingSaveButton());\n    dispatch(uiTrueDisabledButton());\n\n    try {\n      if (passwordNew.trim() === \"\" || passwordNew.trim().length <= 5) {\n        return (\n          Swal.fire(\"Error\", \"La contraseña es menor a 6\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      } else if (passwordNew !== passwordAgain) {\n        return (\n          Swal.fire(\"Error\", \"Las contraseñas no coinciden\", \"error\"),\n          dispatch(uiOpenLoadingSaveButton()),\n          dispatch(uiFalseDisabledButton())\n        );\n      }\n\n      const resp = await fetchConToken(\n        \"users/update-userp\",\n        { persona_id, passwordCurrent, passwordNew },\n        \"PUT\"\n      );\n      const body = await resp.json();\n\n      const respPersona = await fetchConToken(\n        \"users/usuario\",\n        { persona_id },\n        \"POST\",\n        body.token\n      );\n\n      const { persona } = await respPersona.json();\n\n      console.log(body);\n\n      if (body.ok) {\n        dispatch(\n          login({\n            persona: persona,\n          })\n        );\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n        dispatch(uiOpenLoadingSaveButton());\n        dispatch(uiFalseDisabledButton());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst accountUpdated = (persona) => ({\n  type: types.accountUpdate,\n  payload: persona,\n});\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(uieventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });\n","\nimport { useState } from \"react\"\n\nexport const useForm = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ( { target } ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n\n        setValues({\n            ...values,\n           [target.name] : target.value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdateAccount } from '../../actions/auth';\nimport { uiFalseDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const AccountScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { persona } = useSelector(state => state.auth);\n    \n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui)\n\n    const [ formAccountValues, handleAccountInputChange ] = useForm( persona );\n    \n    const { persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email } = formAccountValues;\n\n    const handleUpdate = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startUpdateAccount( persona_id, nombre, primer_apellido, segundo_apellido, celular, imei, edad, dni, direccion, email ) );\n\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ dispatch ])\n\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>  INFORMACIÓN PERSONAL</h2>\n                                </div>\n                                <form alt=\"formulario\" className=\"form-horizontal\" onSubmit={ handleUpdate } >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">\n                                            Foto principal\n                                        </label>\n                                        <div className=\"col-sm-6\">\n                                            <img\n                                                className=\"w150 img-thumbnail\"\n                                                src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" \n                                                alt=\"perfil\"\n                                            />\n                                            <br />\n                                            <br />\n                                            <input type=\"file\" className=\"form-control\"></input>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nombre</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"nombre\"\n                                                value={ nombre }\n                                                onChange= { handleAccountInputChange }\n                                                id=\"nombre\"\n                                                name=\"nombre\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Primer Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"Primer Apellido\"\n                                                id=\"primer_apellido\"\n                                                name=\"primer_apellido\"\n                                                value={ primer_apellido }\n                                                onChange= { handleAccountInputChange }\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Segundo Apellido</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"segundo_apellido\"\n                                                name=\"segundo_apellido\"\n                                                className=\"form-control\"\n                                                value={ segundo_apellido }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Numero Celular</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"celular\"\n                                                name=\"celular\"\n                                                className=\"form-control\"\n                                                value={ celular }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Imei</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"imei\"\n                                                name=\"imei\"\n                                                className=\"form-control\"\n                                                value={ imei }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dni</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"dni\"\n                                                name=\"dni\"\n                                                className=\"form-control\"\n                                                value={ dni }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Edad</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"edad\"\n                                                name=\"edad\"\n                                                className=\"form-control\"\n                                                value={ edad }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Email</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"email\"\n                                                name=\"email\"\n                                                className=\"form-control\"\n                                                value={ email }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Dirección</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                id=\"direccion\"\n                                                name=\"direccion\"\n                                                className=\"form-control\"\n                                                value={ direccion }\n                                                onChange= { handleAccountInputChange }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">&nbsp;</label>\n                                        <div className=\"col-sm-6\">\n                                            <button type=\"submit\" className=\"btn btn-primary btn-round btn-block\" disabled={ uiDisabled } >\n                                                <i className={ uiLoadingSaveButton } ></i>  Guardar\n                                        </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startUpdateUserPassword } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const ChangePasswordScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n    const { persona_id } = useSelector(state => state.auth.persona);\n    \n    const [ formPasswordValues, handlePasswordInputChange ] = useForm({\n\n        passwordCurrent:'',\n        passwordNew:'',\n        passwordAgain:''\n\n    });\n    const inputStylePassword = {\n        color:'#1D253E'\n    }\n    \n    const { passwordCurrent, passwordNew, passwordAgain } = formPasswordValues;\n\n    useEffect(() => {\n        if ( passwordNew.trim() === '' ||  passwordAgain.trim() === ''|| passwordCurrent.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( passwordCurrent.trim().length <= 5 || passwordNew.trim().length <= 5 || passwordAgain.trim().length <= 5 ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        \n          dispatch( uiFalseDisabledButton() );\n\n    }, [ passwordCurrent, passwordNew, passwordAgain, dispatch ])\n\n\n    const handleChangePassword = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUserPassword( persona_id, passwordCurrent, passwordNew, passwordAgain ) );\n    }\n    \n\n    return (\n        <div className=\"col-md-12\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>CAMBIAR CONTRASEÑA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleChangePassword } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Contraseña Actual</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Contraseña actual\"\n                                                value={ passwordCurrent }\n                                                onChange= { handlePasswordInputChange }\n                                                id=\"passwordCurrent\"\n                                                name=\"passwordCurrent\"\n                                                className=\"form-control\" \n                                                style={ inputStylePassword }\n                                                />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Nueva Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                id=\"passwordNew\"\n                                                name=\"passwordNew\"\n                                                placeholder=\"Contraseña nueva\"\n                                                className=\"form-control\"\n                                                value={ passwordNew }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Repetir Contraseña</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"password\"\n                                                placeholder=\"Confirme contraseña\"\n                                                id=\"passwordAgain\"\n                                                name=\"passwordAgain\"\n                                                className=\"form-control\"\n                                                value={ passwordAgain }\n                                                onChange= { handlePasswordInputChange }\n                                                style={ inputStylePassword }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i \n                                            className={ uiLoadingSaveButton } \n                                            ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-warning col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/setting\"\n                                            ><i className=\"fa fa-times\" ></i> Cancelar</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport 'moment/locale/es';\nimport { startUpdateUser } from '../../actions/auth';\nimport { Link } from 'react-router-dom';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n// change Spanish\n\nmoment.locale('es');\n\nexport const UserScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { usuarios, persona_id } = useSelector(state => state.auth.persona);\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [ formUserValues, handleUserInputChange ] = useForm( usuarios[0] );\n\n    const { username, createdAt, updatedAt  } = formUserValues;\n\n    const handleUpdateUser = ( e ) => {\n        e.preventDefault();\n        dispatch( startUpdateUser( persona_id, username ) );\n    }\n    useEffect(() => {\n        dispatch( uiFalseDisabledButton() );\n\n        if( username.trim() === '' ){\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n        \n    }, [ username, dispatch ]);\n\n    return (\n        <div className=\"col-md-12 animated fadeIn\">\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <div className=\"tab-content tasi-tab\">\n                        <div id=\"settings\" className=\"tab-pane active\">\n                            <div className=\"position-center\">\n                                <div className=\"prf-contacts sttng\">\n                                    <h2>INFORMACIÓN CUENTA</h2>\n                                </div>\n                                <form alt=\"form\" className=\"form-horizontal\" \n                                onSubmit={ handleUpdateUser } \n                                >\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">User Name</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"User Name\"\n                                                value={ username }\n                                                onChange= { handleUserInputChange }\n                                                id=\"username\"\n                                                name=\"username\"\n                                                className=\"form-control\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Fecha de Creación</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"create\"\n                                                className=\"form-control\"\n                                                value={ moment(createdAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"col-lg-2 control-label\">Ultima Actualización</label>\n                                        <div className=\"col-lg-6\">\n                                            <input\n                                                type=\"text\"\n                                                disabled\n                                                name=\"update\"\n                                                className=\"form-control\"\n                                                value={ moment(updatedAt).format('LL, h:mm:ss a') }\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr></hr>\n                                    <div className=\"form-group\">\n                                        <div className=\"col-lg-offset-2 col-lg-7\">\n                                            \n                                            <button \n                                                className=\"btn btn-primary col-lg-5\" \n                                                style={{ marginRight:5 }}\n                                                type=\"submit\"\n                                                disabled={ uiDisabled }\n                                            ><i className={ uiLoadingSaveButton } ></i>  Actualizar</button>\n                                            <Link\n                                                className=\"btn btn-success col-lg-5\"  \n                                                style={{ marginRight:5 }} \n                                                type=\"button\"\n                                                to=\"/user/settingp\"\n                                            >\n                                            <i className=\"fa fa-lock\" ></i> Cambiar Contraseña</Link>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUniversity, faVials, faVial } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport '../../styles/styles.css';\nimport { institutionAcordionDeselect, institutionAcordionSelect, institutionDeselectRegister, institutionDeselectShow, institutionSelectRegister, institutionSelectShow } from '../../actions/ui';\nimport { answerShapeClear } from '../../actions/answersShape';\n\n\nexport const Aside = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiSelection, uiRegisterSelectAcordion, uiShowSelectInstitution } = useSelector(state => state.ui);\n\n    const { uiSidebar } = useSelector(state => state.ui);\n\n    const handleChangeStylePerfil = (e) => {\n        e.preventDefault();\n\n        dispatch(institutionAcordionDeselect());\n        dispatch(institutionDeselectRegister());\n        dispatch(institutionDeselectShow());\n        dispatch(answerShapeClear())\n\n    }\n\n    const handleChangeStyle = (e) => {\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister()),\n                dispatch(institutionDeselectShow())\n            )\n        }\n        dispatch(institutionAcordionSelect());\n        dispatch(answerShapeClear())\n\n\n    }\n\n    const handleChangeStyleShow = (e) => {\n        e.preventDefault();\n        dispatch(institutionSelectShow());\n        dispatch(institutionDeselectRegister());\n        dispatch(answerShapeClear())\n\n    }\n    const handleChangeStyleRegister = (e) => {\n        e.preventDefault();\n        dispatch(institutionSelectRegister());\n        dispatch(institutionDeselectShow());\n        dispatch(answerShapeClear())\n    }\n\n    const handleChangeStyleTestRegister = (e) => {\n\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionDeselectShow()),\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister())\n            )\n        }\n        dispatch(answerShapeClear())\n\n    }\n\n    const handleChangeStyleTest = (e) => {\n\n        e.preventDefault();\n        if (uiSelection === 'block') {\n            return (\n                dispatch(institutionDeselectShow()),\n                dispatch(institutionAcordionDeselect()),\n                dispatch(institutionDeselectRegister())\n            )\n        }\n        dispatch(answerShapeClear());\n\n    }\n\n    const handleLogout = () => {\n        dispatch(answerShapeClear())\n        dispatch(startLogout());\n    }\n\n    return (\n        <aside>\n            <div\n                id=\"sidebar\"\n                className={uiSidebar}\n            >\n                <div className=\"leftside-navigation\">\n                    <ul className=\"sidebar-menu\" id=\"nav-accordion\">\n\n                        <li className=\"sub-menu\" onClick={handleChangeStylePerfil} >\n                            <NavLink to='/user' activeClassName=\"active\" >\n                                <i className=\"fa fa-user\"></i>\n                                <span>Perfil</span>\n                            </NavLink>\n                        </li>\n\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}  >\n                            <div onClick={handleChangeStyle}>\n                                <NavLink to=\"/institution\" activeClassName=\"active\">\n                                    <i>\n                                        <FontAwesomeIcon icon={faUniversity} />\n                                    </i>\n                                    <span>Institución</span>\n                                </NavLink>\n                            </div>\n                            <ul className=\"sub\" style={{ display: uiSelection }}>\n                                <li className={uiShowSelectInstitution} onClick={handleChangeStyleShow} >\n                                    <NavLink to=\"/institution/view\">\n                                        Ver Instituciónes\n                                    </NavLink>\n                                </li>\n                                <li className={uiRegisterSelectAcordion} onClick={handleChangeStyleRegister}>\n                                    <NavLink to=\"/institution\" >\n                                        Registrar\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </li>\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}>\n                            <div onClick={handleChangeStyleTestRegister}>\n\n                                <NavLink to=\"/test/register\" activeClassName=\"active\" >\n                                    <i>\n                                        <FontAwesomeIcon\n                                            icon={faVial}\n                                        />\n                                    </i>\n                                    <span>Registrar pruebas</span>\n                                </NavLink>\n                            </div>\n                        </li>\n                        <li className=\"sub-menu\" style={{ cursor: \"pointer\" }}>\n                            <div onClick={handleChangeStyleTest} >\n                                <NavLink to=\"/answers\" activeClassName=\"active\" exact >\n                                    <i>\n                                        <FontAwesomeIcon icon={faVials} />\n                                    </i>\n                                    <span>Pruebas</span>\n                                </NavLink>\n                            </div>\n                        </li>\n                        <li onClick={handleLogout}  >\n                            <NavLink to=\"/auth/login\" className='hyper'>\n                                <i className=\"fa fa-sign-out\"></i>\n                                <span>Cerrar Sesión</span>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\nimport { uiCloseDrowp, uiCloseSection, uiCloseSidebar, uiOpenDrowp, uiOpenSection, uiOpenSidebar } from '../../actions/ui';\nimport '../../styles/styles.css';\n\nexport const Header = () => {\n    const { uiDrowp, uiSidebar } = useSelector(state => state.ui);\n\n    const dispatch = useDispatch();\n\n    const handleSidebar = (e) => {\n        e.preventDefault();\n\n        if (uiSidebar === 'nav-collapse') {\n            return (\n                dispatch(uiCloseSidebar()),\n                dispatch(uiCloseSection())\n            );\n        }\n        dispatch(uiOpenSidebar());\n        dispatch(uiOpenSection());\n    }\n\n    const dropDownOpen = (e) => {\n        e.preventDefault();\n\n        if (uiDrowp === 'dropdown') {\n\n            return dispatch(uiOpenDrowp());\n\n        }\n\n        dispatch(uiCloseDrowp());\n    }\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n\n    return (\n        <header className=\"header fixed-top clearfix\">\n            <div className=\"brand\">\n\n                <Link\n                    className=\"logo\" to=\"index.html\">\n                    <img\n                        src=\"https://mauriciocartagena.github.io/my-perfil/static/media/Logo.2921d167.png\"\n                        style={{ width: 168, height: 40 }} alt=\"logo\"\n                    />\n                </Link>\n                <div\n                    className=\"sidebar-toggle-box\"\n                    onClick={handleSidebar}\n                >\n                    <div className=\"fa fa-bars\"></div>\n                </div>\n            </div>\n\n            <div className=\"top-nav clearfix\">\n                <ul className=\"nav pull-right top-menu\">\n                    <li\n                        className={uiDrowp}\n                    >\n                        <Link data-toggle=\"dropdown\"\n                            className=\"dropdown-toggle\"\n                            onClick={dropDownOpen}\n                            style={{ cursor: \"pointer\" }}\n                            to=\"/\"\n                        >\n                            <img alt=\"photo\" src=\"https://mauriciocartagena.github.io/my-perfil/static/media/photo.517c8325.png\" />\n                            <span className=\"username\" > &nbsp; Mauricio Cartagena </span>\n                            <b className=\"caret\"></b>\n                        </Link>\n                        <ul className=\"dropdown-menu extended logout\">\n                            <li>\n                                <Link to='/user' >\n                                    <i className=\" fa fa-suitcase\"></i>\n                                    Perfil\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to='/user/setting' >\n                                    <i className=\"fa fa-cog\"></i>\n                                    Configuración\n                                </Link>\n                            </li>\n                            <li className=\"hyper\" onClick={handleLogout} >\n                                <Link\n                                    to=\"/\"\n                                >\n                                    <i className=\"fa fa-key\"></i>Cerrar Sesión\n                                </Link>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Aside } from './Aside';\nimport { Header } from './Header';\n\nexport const Layout = ({ children }) => {\n    \n    const { uiSection } = useSelector(state => state.ui)   \n\n    return (\n        \n        <section id=\"container\">\n            <Header />\n            <Aside />    \n           <section \n               id=\"main-content\"                 \n               className={ uiSection } \n               >\n               <section className=\"wrapper\">\n\n                { children }\n\n               </section>\n           </section>\n       </section>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AccountScreen } from '../../components/Accounts/AccountScreen';\nimport { ChangePasswordScreen } from '../../components/Accounts/ChangePasswordScreen';\nimport { UserScreen } from '../../components/Accounts/UserScreen';\nimport { Layout } from '../../components/main/Layout';\n\n\n\nexport const AccountRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/user\"\n                    component={ AccountScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/setting\"\n                    component={ UserScreen }\n                />\n                <Route\n                    exact\n                    path=\"/user/settingp\"\n                    component={ ChangePasswordScreen }\n                />\n                <Redirect to=\"/user\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startLogin } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const LoginScreen = () => {\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lUsername:'ad2min',\n        lPassword:'administrador'\n    });\n    \n    const { lUsername, lPassword } = formLoginValues;\n    \n    const handleLogin = ( e ) => {\n        e.preventDefault(); \n\n        if ( lUsername.trim() === '' || lPassword.trim() === '') {\n            return Swal.fire(':(', 'Username o contraseña esta vacia'  , 'error');\n        }\n        else if( lPassword.trim().length <= 5 ) {\n           return Swal.fire(':(', `La contraseña debe tener 6 a mas digitos y tiene ${ lPassword.trim().length }`  , 'error');\n        }\n        \n        dispatch( startLogin( lUsername, lPassword ) );  \n        \n    }\n\n    useEffect(() => {\n\n        if ( lUsername.trim() === '' ||  lPassword.trim() === '' ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        else if( lPassword.trim().length <= 5  ) {\n            return dispatch( uiTrueDisabledButton() );\n        }\n        dispatch( uiFalseDisabledButton() );\n    \n    }, [ lUsername, lPassword, dispatch ]);\n\n    return (\n        <div className=\"container animate__animated animate__fadeIn\">\n            <form className=\"form-signin\" onSubmit={ handleLogin } >\n                <h2 className=\"form-signin-heading\">Sistema de Psicologia</h2>\n                <div className=\"login-wrap\">\n                    <div className=\"user-login-info\">\n                        <input \n                            type=\"text\" \n                            name=\"lUsername\"\n                            className=\"form-control\"  \n                            placeholder=\"Username\" \n                            autoFocus\n                            autoComplete=\"off\"\n                            value={ lUsername }\n                            onChange={ handleLoginInputChange }\n                            />\n                        <input \n                            type=\"password\"\n                            name=\"lPassword\" \n                            className=\"form-control\" \n                            placeholder=\"Password\" \n                            autoComplete=\"off\"\n                            value={ lPassword }\n                            onChange={ handleLoginInputChange }\n                            />\n                    </div>\n                    <label className=\"checkbox\">\n                        <span className=\"pull-right\">\n                            <a data-toggle=\"modal\" href=\"#myModal\"> ¿Olvidadeste tu Contraseña?</a>\n                        </span>\n                        <br/>\n                    </label>\n                    <button className='btn btn-lg btn-login btn-block'  disabled={ uiDisabled } type=\"submit\">\n                        <i _ngcontent-kod-c28=\"\" className={ uiLoadingButton }></i> Iniciar Sesión\n                    </button>\n\n                    <div className=\"registration\">\n                    ¿No tienes una cuenta?                   \n                        <Link \n                            to=\"/auth/register\"\n                        > Crear cuenta \n                        </Link>\n                    </div>\n                </div>\n                {/* Modal */}\n                <div aria-hidden=\"true\" aria-labelledby=\"myModalLabel\" role=\"dialog\" tabIndex=\"-1\" id=\"myModal\" className=\"modal fade in\" style={{ display:\"none\" }} >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                                <h4 className=\"modal-title\">¿Olvidaste tu Contraseña?</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p>Ingrese tu email para restablecer tu contraseña</p>\n                                <input type=\"text\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" className=\"form-control placeholder-no-fix\" />\n\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button data-dismiss=\"modal\" className=\"btn btn-default\" type=\"button\">Cancel</button>\n                                <button className=\"btn btn-success\" type=\"button\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* End Modal */}\n            </form>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport cryptoRandomString from 'crypto-random-string';\n\n\nimport { useForm } from '../../hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startRegister } from '../../actions/auth';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../actions/ui';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { uiLoadingButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n\n        nombre: \"tu nombre\",\n        primer_apellido: \"tu primer apellido\",\n        segundo_apellido: \"tu segundo apellido\",\n        celular: `${cryptoRandomString({ length: 8, type: 'numeric' })}`,\n        imei: `${cryptoRandomString({ length: 12, type: 'numeric' })}`,\n        genero: \"Masculino\",\n        edad: \"15\",\n        direccion: \"Cochabamba\",\n        padres_responsables: \"padres\",\n        dni: `${cryptoRandomString({ length: 8, type: 'url-safe' })}`,\n        email: `${cryptoRandomString({ length: 8, type: 'distinguishable' })}@gmail.com`,\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        id_institucion: \"1\"\n\n    });\n\n    const { nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, id_institucion, password2 } = formRegisterValues;\n\n    const handleRegisterUser = (e) => {\n        e.preventDefault();\n\n        dispatch(startRegister(nombre, primer_apellido, segundo_apellido, celular, imei, genero, edad, direccion, padres_responsables, dni, email, username, password, password2, id_institucion));\n    }\n\n    useEffect(() => {\n\n        if (password.trim() === '' || password2.trim() === '' || username.trim() === '') {\n            return dispatch(uiTrueDisabledButton());\n        }\n        else if (password.trim().length <= 5 || password2.trim().length <= 5) {\n            return dispatch(uiTrueDisabledButton());\n        }\n        dispatch(uiFalseDisabledButton());\n\n    }, [password, password2, username, dispatch]);\n\n\n\n    return (\n        <div className=\"container\">\n            <form className=\"form-signin\" onSubmit={handleRegisterUser}>\n                <h2 className=\"form-signin-heading\">Crear Cuenta</h2>\n\n                <div className=\"login-wrap\">\n\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        className=\"form-control\"\n                        placeholder=\"User Name\"\n                        value={username}\n                        onChange={handleRegisterInputChange}\n\n                    />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Contraseña\"\n                        value={password}\n                        onChange={handleRegisterInputChange}\n                    />\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Confirmar Contraseña\"\n                        name=\"password2\"\n                        value={password2}\n                        onChange={handleRegisterInputChange}\n                    />\n\n                    <button className=\"btn btn-lg btn-login btn-block\" type=\"submit\" disabled={uiDisabled} >\n                        <i _ngcontent-kod-c28=\"\" className={uiLoadingButton}></i> Crear Cuenta\n                    </button>\n\n                    <div className=\"registration\">\n                        ¿Ya tienes una cuenta?\n                        <Link to=\"/auth/login\" >  Login\n                        </Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../../components/auth/LoginScreen';\nimport { RegisterScreen } from '../../components/auth/RegisterScreen';\n\n\nexport const AuthRouter = () => {\n\n    document.body.style.backgroundColor = \"#32323A\";\n\n    return (\n        <div>\n            <Switch>\n                    <Route\n                        exact\n                        path=\"/auth/login\"\n                        component= { LoginScreen }\n                    />\n                    <Route\n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" /> \n\n                </Switch>\n        </div>\n      \n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props)=>(\n                (isAuthenticated)\n                    ? ( <Component { ...props } /> )\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n        component={ ( props )=>(\n            (isAuthenticated)\n            ? ( <Redirect to=\"/user\"/> )\n            : ( <Component { ...props } /> )\n\n        )}\n    />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterInstitution = ( name, address, phone, emei, nit, contact_name, mobile ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'institutos/new',{ \n                nombre:name, \n                direccion:address, \n                celular:mobile, \n                telefono:phone, \n                imei:emei, \n                nit:nit, \n                nombre_contacto:contact_name \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Institución registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const institutionSetActive = ( institutions, id ) => ({ \n    type:types.institutionSetActive,\n    payload: { institutions, id }\n});\n\nexport const updatedInstitution = ( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'institutos/update', { \n                nombre:name,\n                direccion:address,\n                celular:mobile,\n                telefono:phone,\n                imei:emei,\n                nit:newNit,\n                nombre_contacto:contact_name,\n                id_institucion:id_institucion\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Institución actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const institutionSetActiveClear = () => ({\n    type:types.institutionSetActiveClear\n});\n\n\nexport const institutionLoaded = ( institutions ) => ({\n    type: types.institutionLoaded,\n    payload: institutions \n});\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { institutionLoaded, institutionSetActive } from '../actions/institution';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport const useFetchInstituions = () => {\n\n    const dispatch = useDispatch();\n    const [uiDisabled, setUiDisabled] = useState(false)\n    const history = useHistory();\n\n    const [institutions, setInstitutions] = useState({\n        data_institutions: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchInstitution = () => {\n\n            fetchConToken('institutos/inst', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.instituciones.forEach(item => rows.push({\n                        id_institucion: item.id_institucion,\n                        nombre: item.nombre,\n                        direccion: item.direccion,\n                        celular: item.celular,\n                        telefono: item.telefono,\n                        imei: item.imei,\n                        nit: item.nit,\n                        nombre_contacto: item.nombre_contacto,\n                        modified: <button className=\"btn btn-primary\" id={item.id_institucion} onClick={(e) => {\n                            // It's a little more understandable\n                            return (\n                                dispatch(institutionLoaded(json.instituciones)),\n                                dispatch(institutionSetActive(json.instituciones, e.target.id)),\n                                history.push('/institution/update')\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_institucion}\n                            onClick={(e) => {\n                                return (\n                                    institutionDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n                    setInstitutions({ data_institutions: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const institutionDelete = (id_institucion) => {\n\n            handleSwitchChange();\n\n            fetchConToken('institutos/delete', {\n                id_institucion\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Institución Eliminada', 'success');\n                        fetchInstitution();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n        fetchInstitution();\n\n        // Clear useEffect\n        return () => {\n            setInstitutions({ data_institutions: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return institutions;\n\n}","import React, { useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetchInstituions } from '../../hooks/useFetchInstitutions';\nimport { useDispatch } from 'react-redux';\nimport { institutionSetActiveClear } from '../../actions/institution';\n\nexport const InstitutionScreen = () => {\n\n  const dispatch = useDispatch();\n  // Rename the name\n  const { data_institutions: institutions } = useFetchInstituions();\n\n  const data = {\n    columns: [\n      {\n        label: 'Nombre',\n        field: 'nombre',\n        sort: 'asc',\n        width: 200,\n      },\n      {\n        label: 'Direccion',\n        field: 'direccion',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Nit',\n        field: 'nit',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Telefono',\n        field: 'telefono',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Celular',\n        field: 'celular',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Imei',\n        field: 'imei',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Nombre de Contacto',\n        field: 'nombre_contacto',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Modificar',\n        field: 'modified',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Eliminar',\n        field: 'deleted',\n        sort: 'asc',\n        width: 200\n      },\n    ],\n    rows: institutions\n  };\n\n  useEffect(() => {\n\n    dispatch(institutionSetActiveClear());\n\n  }, [dispatch]);\n\n  return (\n\n    <div className=\"col-lg-12 animated fadeIn\">\n      <section className=\"panel\">\n        <header className=\"panel-heading\">\n          Institutos\n        </header>\n        {\n          (data.rows.length !== [])\n            ?\n            <div className=\"panel-body\">\n              <MDBDataTable\n                noRecordsFoundLabel=\"Cargando...\"\n                scrollX\n                autoWidth={true}\n                maxHeight=\"40vh\"\n                striped\n                bordered\n                small\n                data={data}\n              />\n            </div>\n            :\n            <div className=\"panel-body\">\n              <div>Aún no se registro ningun dato</div>\n            </div>\n        }\n      </section>\n    </div>\n  )\n}\n","\nimport { useState } from \"react\"\n\nexport const useFormPhone = ( initialState = {}  ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = (  value  ) =>{\n\n        // console.log(target.name);\n        // console.log(target.value);\n        setValues({\n            ...values,\n           mobile : value\n        });\n\n    }\n\n    return [ values, handleInputChange,reset ];\n}","import React, { useEffect } from 'react'\nimport InputMask from 'react-input-mask';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { institutionSetActiveClear, startRegisterInstitution } from '../../actions/institution';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\n\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n\n    const [formInstitutionValues, handleInstitutionInputChange] = useForm({\n        name: '',\n        address: '',\n        phone: '',\n        emei: '',\n        nit: '',\n        contact_name: ''\n    });\n    const [formInstitutionPhoneValues, handleInstitutionPhoneInputChange] = useFormPhone({\n        mobile: '',\n    });\n\n    const { name, address, phone, emei, nit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        dispatch(startRegisterInstitution(name, address, phone, emei, nit, contact_name, mobile));\n    }\n\n    useEffect(() => {\n\n        dispatch(institutionSetActiveClear());\n\n        if (name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || nit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [address, phone, emei, nit, contact_name, mobile, name, dispatch]);\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    REGISTRAR INSTITUCIÓN\n                </header>\n                <div className=\"panel-body\">\n                    <div className=\"position-center\">\n                        <form autoComplete=\"off\" onSubmit={handleRegister} >\n                            <div className=\"form-group\">\n                                <label>Nombre</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    placeholder=\"Ingrese nombre\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Dirección</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"address\"\n                                    placeholder=\"Ingrese dirección\"\n                                    name=\"address\"\n                                    value={address}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Celular</label>\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: mobile,\n                                        required: true,\n                                        autoFocus: true\n                                    }}\n                                    dropdownClass=\"col-lg-3\"\n                                    inputStyle={{ width: \"100%\" }}\n                                    placeholder=\"Enter phone number\"\n                                    value={mobile}\n                                    onChange={handleInstitutionPhoneInputChange}\n                                    country=\"bo\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Telefono</label>\n                                <InputMask\n                                    placeholder=\"Ingrese telefono\"\n                                    className=\"form-control\"\n                                    mask=\"999-99-999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    name=\"phone\"\n                                    id=\"phone\"\n                                    value={phone}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Imei</label>\n                                <InputMask\n                                    className=\"form-control\"\n                                    mask=\"999999999999999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    placeholder=\"Ingrese imei\"\n                                    id=\"emei\"\n                                    name=\"emei\"\n                                    value={emei}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nit</label>\n                                <InputMask\n                                    className=\"form-control\"\n                                    mask=\"9999999999999\"\n                                    style={{ color: \"black\" }}\n                                    maskChar={null}\n                                    id=\"nit\"\n                                    placeholder=\"Ingrese Nit\"\n                                    name=\"nit\"\n                                    value={nit}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Nombre de Contacto</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"contact_name\"\n                                    placeholder=\"Ingrese nombre de contacto\"\n                                    name=\"contact_name\"\n                                    value={contact_name}\n                                    onChange={handleInstitutionInputChange}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-info\" disabled={uiDisabled} >\n                                <i className={uiLoadingSaveButton} /> Registrar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport PhoneInput from 'react-phone-input-2';\nimport InputMask from 'react-input-mask';\nimport { useForm } from '../../hooks/useForm';\nimport { useFormPhone } from '../../hooks/useFormPhone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../actions/ui';\nimport { updatedInstitution } from '../../actions/institution';\n\nexport const FormUpdate = ( { data = '' } ) => {\n\n    const dispatch = useDispatch();\n\n    const  { nombre = '', celular = '', direccion = '', telefono = '', imei = '', nit = '', nombre_contacto = '', id_institucion = '' } = data;\n\n    const { uiDisabled, uiLoadingSaveButton } = useSelector(state => state.ui)\n    \n    const [ formInstitutionValues, handleInstitutionInputChange ] = useForm({ \n        name: nombre,\n        address: direccion,\n        phone: telefono,\n        emei: imei,\n        newNit: nit,\n        contact_name: nombre_contacto\n    });\n    \n    const [ formInstitutionPhoneValues, handleInstitutionPhoneInputChange ] = useFormPhone({ \n        mobile: celular ,\n    });\n    \n    const { name, address, phone, emei, newNit, contact_name } = formInstitutionValues;\n    const { mobile } = formInstitutionPhoneValues;\n\n    const handleUpdated = (e) => {\n        e.preventDefault();\n        dispatch( updatedInstitution( name, address, phone, emei, newNit, contact_name, mobile, id_institucion  ) );\n    }\n\n    useEffect(() => {\n        if ( name.trim() === '' || address.trim() === '' || phone.trim() === '' || emei.trim() === '' || newNit.trim() === '' || contact_name.trim() === '' || mobile.trim() === '') {\n            return (\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiTrueDisabledButton() )\n            )\n\n        }\n        dispatch( uiFalseDisabledButton() );\n       \n        \n    }, [ address ,phone ,emei ,newNit ,contact_name ,mobile ,name, dispatch ]);\n\n    return (\n        <div className=\"panel-body\">\n            <div className=\"position-center\">\n                <form autoComplete=\"off\" onSubmit={ handleUpdated } >\n                    <div className=\"form-group\">\n                        <label>Nombre</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"name\" \n                            placeholder=\"Ingrese nombre\"  \n                            name=\"name\" \n                            value={ name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Dirección</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"address\" \n                            placeholder=\"Ingrese dirección\"  \n                            name=\"address\" \n                            value={ address } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Celular</label>\n                        <PhoneInput\n                            inputExtraProps={{\n                                name: \"444\",\n                                required: true,\n                                autoFocus: true\n                            }}\n                            dropdownClass=\"col-lg-3\"\n                            inputStyle={{ width:\"100%\" }}\n                            placeholder=\"Enter phone number\"\n                            value={ mobile }\n                            onChange={ handleInstitutionPhoneInputChange }\n                            country=\"bo\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Telefono</label>\n                    <InputMask \n                            placeholder=\"Ingrese telefono\"\n                            className=\"form-control\" \n                            mask=\"999-99-999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            name=\"phone\"\n                            id=\"phone\" \n                            value={ phone } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Imei</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"999999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            placeholder=\"Ingrese imei\"  \n                            id=\"emei\" \n                            name=\"emei\" \n                            value={ emei } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nit</label>\n                        <InputMask \n                            className=\"form-control\" \n                            mask=\"9999999999999\" \n                            style={{ color:\"black\" }}\n                            maskChar={null} \n                            id=\"newNit\" \n                            placeholder=\"Ingrese Nit\"  \n                            name=\"newNit\" \n                            value={ newNit } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Nombre de Contacto</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"contact_name\" \n                            placeholder=\"Ingrese nombre de contacto\"  \n                            name=\"contact_name\" \n                            value={ contact_name } \n                            onChange={ handleInstitutionInputChange }\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info\" \n                    disabled={ uiDisabled } \n                    > \n                        <i \n                        className={ uiLoadingSaveButton } \n                        /> Modificar\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormUpdate } from './FormUpdate';\n\nexport const UpdateScreen = () => {\n\n    const { activeInstitution } = useSelector(state => state.institution);\n    const history  = useHistory();\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    MODIFICAR INSTITUCIÓN\n                </header>\n                {\n                    (activeInstitution !== null)\n                    ?\n                        [activeInstitution].map(( e, i ) => (\n                            <FormUpdate key={ i } data={ e }  />\n                        ))\n                    :\n                        history.push('/institution/view')\n                }\n            </section>\n        </div>   \n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { InstitutionScreen } from '../../components/institution/InstitutionScreen';\nimport { RegisterScreen } from '../../components/institution/RegisterScreen';\nimport { UpdateScreen } from '../../components/institution/UpdateScreen';\nimport { Layout } from '../../components/main/Layout';\n\nexport const InstitutionRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route \n                    exact\n                    path=\"/institution\"\n                    component={ RegisterScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/view\"\n                    component={ InstitutionScreen }\n                />\n                <Route\n                    exact\n                    path=\"/institution/update\"\n                    component={ UpdateScreen }\n                />\n                <Redirect to=\"/institution\" />\n            </Switch>\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterScreen = () => {\n\n    return (\n        <React.Fragment>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>31</span>\n                            Cantidad de Pruebas simples\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={faThermometerThreeQuarters} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>60</span>\n                            Cantidad total de pruebas\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>29</span>\n                            Cantidad de Pruebas de formas\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" >\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faBong} />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <NavLink className=\"btn btn-primary btn-lg btn-block\"\n                        to=\"/test-simple/question\"\n                    >\n                        Seleccionar\n                    </NavLink>\n\n                    <div className=\"row\" style={{ paddingTop: \"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom: \"10px\" }} >\n                            <NavLink className=\"btn btn-success btn-lg btn-block\"\n                                to=\"/test-simple\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-danger btn-lg btn-block\"\n                                to=\"/test-simple/category\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                    <NavLink className=\"btn btn-info btn-lg btn-block\"\n                        to=\"/test-simple/tsimple\"\n                    >\n                        Prueba Simple\n                    </NavLink>\n                </div>\n\n\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faCubes} />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <NavLink className=\"btn btn-success btn-lg btn-block\"\n                        to=\"/test/register/shapes\"\n                    >\n                        Seleccionar\n                    </NavLink>\n\n                    <div className=\"row\" style={{ paddingTop: \"10px\" }} >\n                        <div className=\"col-sm-6\" style={{ paddingBottom: \"10px\" }} >\n                            <NavLink className=\"btn btn-warning btn-lg btn-block\"\n                                to=\"/test/register/shapes/screen\"\n                            >\n                                Administrar pruebas\n                            </NavLink>\n                        </div>\n                        <div className=\"col-sm-6\" >\n                            <NavLink className=\"btn btn-info btn-lg btn-block\"\n                                to=\"/test-shape\"\n                            >\n                                Categoria pruebas\n                            </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\n\n\nexport const shapeStartLoading = () => {\n    return async ( dispatch ) => { \n       try {\n           \n           const resp = await fetchConToken('test-formas/tformas');\n           const body = await resp.json();\n\n           const { testFormas } =  body;\n\n           dispatch( shapeLoaded( testFormas ) );\n\n       } catch (error) {\n           console.log(error);\n       }\n    }\n}\n\nexport const shapeLoaded = ( shape ) => ({\n    type: types.shapeLoaded,\n    payload: shape \n});","import { keyframes, css } from 'styled-components'\nconst fadeInKeyFrames = keyframes`\n  from{\n    filter:blur(5px);\n    opacity:0;\n  }\n  to{\n    filter:blur(0);\n    opacity:1;\n  }\n`\nexport const fadeIn = ({ time = '1s', type = 'ease' } = {}) =>\n  css`animation:${time} ${fadeInKeyFrames} ${type};`","import styled from 'styled-components';\nimport { fadeIn } from '../../../../styles/animation';\n\nexport const Img = styled.img`\n  ${fadeIn({ time: '2.5s' })}\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`\nexport const ImgDefault = styled.img`\n  box-shadow:0 10px 14px rgba(0,0,0, .2);\n  width:240vh;\n  max-width:240px; \n  height:220vh; \n  max-height:220px;\n  position:relative;\n  justify-content:center;\n  align-items:center;\n`;\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImage = ({ data, onImageUpdate, onImageRemove }) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n\n    return (\n        <React.Fragment>\n            {\n                data.map((image, index) => (\n                    <div key={index} className=\"col-sm-4 form-group text-center\"\n                        style={{ justifyContent: 'center' }}\n                    >\n                        <br />\n                        {\n                            (image.data_url !== undefined)\n                                ?\n                                <Img src={image['data_url']} alt=\"images-shapes\" className=\"img-rounded\" />\n                                :\n                                <ImgDefault src={DEFAULT_IMAGE} alt=\"images-shapes\" className=\"img-rounded\" />\n                        }\n                        <br />\n                        <div className=\"image-item__btn-wrapper\">\n                            <br />\n                            <button className=\"btn btn-info\" style={{ marginRight: 5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight: 5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React from 'react';\nimport { Img, ImgDefault } from './styles/style';\n\nexport const GetImageOne = ({ data, onImageUpdate, onImageRemove }) => {\n\n    const DEFAULT_IMAGE = 'https://i.pinimg.com/originals/90/80/60/9080607321ab98fa3e70dd24b2513a20.gif';\n\n    return (\n        <React.Fragment>\n            {\n                data.map((image, index) => (\n                    <div key={index}\n                        style={{ justifyContent: 'center', alignItems: 'center' }}\n                    >\n                        <br />\n                        {\n                            (image.data_url !== '')\n                                ?\n                                <Img src={image['data_url']} alt=\"images-shapes\" className=\"img-rounded\" />\n                                :\n                                <ImgDefault src={DEFAULT_IMAGE} alt=\"images-shapes\" className=\"img-rounded\" />\n                        }\n                        <br />\n                        <div className=\"image-item__btn-wrapper\">\n                            <br />\n                            <button className=\"btn btn-info\" style={{ marginRight: 5 }} onClick={() => onImageUpdate(index)}>Actualizar</button>\n                            <button className=\"btn btn-danger\" style={{ marginRight: 5 }} onClick={() => onImageRemove(index)}>Eliminar</button>\n                        </div>\n                    </div>\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport { shapeEdit, shapeRegister } from '../../../actions/questionShape';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiFalseDisabledButton, uiTrueDisabledButton } from '../../../actions/ui';\nimport { useForm } from '../../../hooks/useForm';\nimport { GetImage } from './GetImage';\nimport { GetImageOne } from './GetImageOne';\nimport Swal from 'sweetalert2';\n\nexport const Form = ({ id_pregunta = '', nombre = '', id_test = '', respuesta_correcta = '', questionImage, optionsImage }) => {\n\n    const dispatch = useDispatch();\n\n    const { shape } = useSelector(state => state.shape);\n\n    const [dataQuestionShape, setDataQuestionShape] = useState([])\n\n    const { uiLoadingSaveButton, uiDisabled } = useSelector(state => state.ui);\n\n    const [formShapeInputValues, handleShapeInputValueChange] = useForm({\n        name: nombre,\n        respCorrect: respuesta_correcta,\n        testShape: id_test\n    });\n\n    const { name, testShape, respCorrect } = formShapeInputValues;\n\n    const [imagesQuestion, setImagesQuestion] = useState([]);\n\n    const maxNumberQuestion = 1;\n    const maxNumber = 6;\n\n    const onChangeQuestion = (imageList) => {\n        setImagesQuestion(imageList);\n    };\n\n    const [images, setImages] = useState([]);\n\n    const onChange = (imageList) => {\n        setImages(imageList);\n    };\n\n    const handleRegisterTestShape = (e) => {\n        e.preventDefault();\n\n        if (respCorrect === '' || testShape === '') {\n            Swal.fire(\"Error\", \"Debe de seleccionar una respuesta y una prueba forma\", \"error\");\n        }\n        else if (nombre !== '') {\n\n            dispatch(shapeEdit(\n                id_pregunta,\n                imagesQuestion[0].data_url,\n                images[0].data_url,\n                images[1].data_url,\n                images[2].data_url,\n                images[3].data_url,\n                images[4].data_url,\n                images[5].data_url,\n                respCorrect,\n                name,\n                testShape)\n            );\n\n        } else {\n\n            dispatch(shapeRegister(\n                imagesQuestion[0].data_url,\n                images[0].data_url,\n                images[1].data_url,\n                images[2].data_url,\n                images[3].data_url,\n                images[4].data_url,\n                images[5].data_url,\n                respCorrect,\n                name,\n                testShape)\n            );\n\n        }\n    }\n\n    useEffect(() => {\n\n        if (imagesQuestion.length !== 1 || images.length !== 6 || name === undefined || '' || 0) {\n            return dispatch(uiTrueDisabledButton());\n        }\n        dispatch(uiFalseDisabledButton());\n\n    }, [imagesQuestion, images, name, dispatch]);\n\n    useEffect(() => {\n\n        if (nombre !== '' || undefined || null) {\n            setImagesQuestion(questionImage);\n            setImages(optionsImage);\n        }\n\n    }, [questionImage, optionsImage, nombre]);\n\n    useEffect(() => {\n        setDataQuestionShape(shape.filter((e) => (\n            e.id_test.toString() === testShape.toString()\n        )));\n    }, [testShape, shape]);\n\n    return (\n        <React.Fragment>\n            <div className=\"form-group alert alert-info\" style={{ paddingLeft: \"25%\", paddingRight: \"25%\" }}>\n                <div className=\"col-xs-14 text-center\">\n                    <label>\n                        <h3>Nombre</h3>\n                    </label>\n                    <input\n                        className=\"text-center form-control round-input input-medium default-date-picker\"\n                        placeholder=\"Ingrese Nombre\"\n                        autoComplete=\"off\"\n                        size=\"16\"\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleShapeInputValueChange}\n                    />\n                </div>\n            </div>\n            <div className=\"form-group text-center alert alert-success\">\n                <label >\n                    <h3>Pregunta</h3>\n                </label>\n                <ImageUploading\n                    multiple\n                    value={imagesQuestion}\n                    onChange={onChangeQuestion}\n                    maxNumber={maxNumberQuestion}\n                    dataURLKey=\"data_url\"\n                >\n                    {\n                        ({ onImageUpload, onImageRemoveAll, onImageUpdate, onImageRemove }) => (\n                            <div className=\"upload__image-wrapper\">\n                                <button\n                                    className=\"btn btn-round btn-success\"\n                                    style={{ marginRight: 5 }}\n                                    onClick={onImageUpload}\n                                >\n                                    Subir Imagen\n                                </button>\n                                <button\n                                    className=\"btn btn-round btn-warning\"\n                                    style={{ marginRight: 5 }}\n                                    onClick={onImageRemoveAll}\n                                >\n                                    Eliminar Todo\n                                </button>\n                                <div className=\"row\" >\n                                    <GetImageOne\n                                        data={imagesQuestion}\n                                        onImageUpdate={onImageUpdate}\n                                        onImageRemove={onImageRemove}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    }\n                </ImageUploading>\n            </div>\n            <div className=\"form-group text-center alert alert-warning\" >\n                <label>\n                    <h3>Opciones</h3>\n                </label>\n                <ImageUploading\n                    multiple\n                    value={images}\n                    onChange={onChange}\n                    maxNumber={maxNumber}\n                    dataURLKey=\"data_url\"\n                >\n                    {\n                        ({ onImageUpload, onImageRemoveAll, onImageUpdate, onImageRemove }) => (\n                            <div className=\"upload__image-wrapper\">\n                                <button\n                                    className=\"btn btn-round btn-success\"\n                                    style={{ marginRight: 5 }}\n                                    onClick={onImageUpload}\n                                >\n                                    Subir Imagen\n                                </button>\n                                <button\n                                    className=\"btn btn-round btn-warning\"\n                                    style={{ marginRight: 5 }}\n                                    onClick={onImageRemoveAll}\n                                >\n                                    Eliminar Todo\n                                </button>\n                                <div className=\"row\" >\n                                    <GetImage data={images}\n                                        onImageUpdate={onImageUpdate}\n                                        onImageRemove={onImageRemove}\n                                    />\n                                </div>\n                            </div>\n                        )\n                    }\n                </ImageUploading>\n            </div>\n            <div className=\"form-group text-center alert\">\n                <label>\n                    <h3>Respuesta Correcta</h3>\n                </label>\n                <div className=\"form-group\">\n                    <label className=\"col-sm-3 control-label\"></label>\n                    <div className=\"col-sm-7\">\n                        <p>Respuesta seleccionada : `{respCorrect}`</p>\n                        <select\n                            formcontrolname=\"curso\"\n                            name=\"respCorrect\"\n                            onChange={handleShapeInputValueChange}\n                            className=\"form-control ng-valid ng-dirty ng-touched\"\n                            value={respCorrect}\n                        >\n                            {\n                                images.map((e, i) => (\n                                    <option\n                                        name=\"respCorrect\"\n                                        key={i}\n                                        value={i + 1}\n                                    > Imagen {i + 1}</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group text-center alert\">\n                <label>\n                    <h3>Prueba Forma</h3>\n                </label>\n                <div className=\"form-group\">\n                    <label className=\"col-sm-3 control-label\"></label>\n                    <div className=\"col-sm-7\" >\n                        <p>Forma seleccionada : `{\n                            dataQuestionShape.map((e) => (\n                                e.nombre\n                            ))\n                        }`\n                        </p>\n                        <select\n                            formcontrolname=\"curso\"\n                            name=\"testShape\"\n                            onChange={handleShapeInputValueChange}\n                            className=\"form-control ng-valid ng-dirty ng-touched\"\n                            value={testShape}\n                        >\n                            {\n                                shape.map((e, i) => (\n                                    <option\n                                        key={i}\n                                        value={e.id_test}\n                                    > {e.nombre}</option>\n                                ))\n                            }\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div className=\"panel-body\">\n                <hr />\n                <button type=\"submit\"\n                    onClick={handleRegisterTestShape}\n                    disabled={uiDisabled}\n                    className=\"btn btn-primary btn-lg btn-block\" >\n                    <i className={uiLoadingSaveButton} ></i>\n                    {\n                        (id_test === '')\n                            ?\n                            \" Registrar\"\n                            :\n                            \" Modificar\"\n                    }\n                </button>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shapeStartLoading } from \"../../../actions/shape\";\nimport { useFetchQuestionShapeOne } from \"../../../hooks/QuestionShape/useFetchQuestionShapeOne\";\nimport { useFetchDestructureValue } from \"../../../hooks/QuestionShape/useFetchDestructureValue\";\nimport { useFetchOptionsDestructure } from \"../../../hooks/QuestionShape/useFetchOptionsDestructure\";\nimport { Form } from \"./Form\";\n\nexport const FormQuestionShape = ({ id_pregunta = \"\",nombre = \"\",id_test = \"\", respuesta_correcta = \"\" }) => {\n  \n  const dispatch = useDispatch();\n\n  const { data_questions_shape } = useFetchQuestionShapeOne(id_pregunta);\n\n  const [question, setQuestion] = useState([]);\n\n  const { pregunta, op1, op2, op3, op4, op5, op6 } = question;\n\n  const [questionsImage, setQuestionsImage] = useState([]);\n\n  const [imageOptions, setImageOptions] = useState([]);\n\n  const DestructureValue = (data_questions_shape) => {\n    setQuestion(data_questions_shape);\n  };\n  useEffect(() => {\n    DestructureValue(data_questions_shape);\n  }, [data_questions_shape]);\n\n  const { image } = useFetchDestructureValue(pregunta);\n\n  const {\n    option1,\n    option2,\n    option3,\n    option4,\n    option5,\n    option6,\n  } = useFetchOptionsDestructure(op1, op2, op3, op4, op5, op6);\n\n  useEffect(() => {\n    dispatch(shapeStartLoading());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (\n      image !== \"\" ||\n      option1 !== \"\" ||\n      option2 !== \"\" ||\n      option3 !== \"\" ||\n      option4 !== \"\" ||\n      option5 !== \"\" ||\n      option6 !== \"\"\n    ) {\n      const options = [\n        {\n          data_url: option1,\n        },\n        {\n          data_url: option2,\n        },\n        {\n          data_url: option3,\n        },\n        {\n          data_url: option4,\n        },\n        {\n          data_url: option5,\n        },\n        {\n          data_url: option6,\n        },\n      ];\n      setQuestionsImage([{ data_url: image }]);\n      setImageOptions(options);\n    }\n  }, [image, option1, option2, option3, option4, option5, option6]);\n\n  return (\n    <div className=\"panel-body row align-items-end\">\n      <Form\n        id_pregunta={id_pregunta}\n        questionImage={questionsImage}\n        optionsImage={imageOptions}\n        nombre={nombre}\n        id_test={id_test}\n        respuesta_correcta={respuesta_correcta}\n      />\n    </div>\n  );\n};\n","\nimport { useEffect, useState } from 'react'\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchQuestionShapeOne = ( id_pregunta ) => {\n\n    const [ questionsShape, setQuestionsShape ] = useState({\n        data_questions_shape:[]\n    });\n\n    useEffect(() => {\n        testShapeLoading( id_pregunta );\n\n        return (()=>{\n            setQuestionsShape({ data_questions_shape:[] })\n        })\n\n    }, [ id_pregunta ])\n\n    const testShapeLoading = async ( id_pregunta ) => {\n\n        const resp = await fetchConToken('pregunta-formas/pforma', { id_pregunta },'POST');\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { preguntaFormas } = body;\n                setQuestionsShape({\n                    data_questions_shape:preguntaFormas\n                });\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return questionsShape;\n\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { questionClearShape } from '../../../actions/questionShape';\nimport { FormQuestionShape } from './FormQuestionShape';\n\nexport const Register = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        \n        dispatch( questionClearShape() );\n\n    }, [ dispatch ])\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        REGISTRO DE PRUEBAS FORMAS\n                    </header>\n                    <FormQuestionShape />\n                </section>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState, useRef } from 'react';\n\n\nexport default function useNearScreen({ distance = '100px', externalRef, once = true } = {}) {\n  const [isNearScreen, setShow] = useState(false);\n  const fromRef = useRef()\n\n  useEffect(() => {\n    let observer\n\n    const element = externalRef ? externalRef.current : fromRef.current\n\n    const onChange = (entries, observer) => {\n      const el = entries[0]\n      if (el.isIntersecting) {\n        setShow(true)\n        once && observer.disconnect()\n      } else {\n        !once && setShow(false)\n      }\n    }\n\n    Promise.resolve(\n      IntersectionObserver\n\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance\n      })\n\n      if (element) observer.observe(element)\n    })\n\n    return () => observer && observer.disconnect()\n  })\n\n  return { isNearScreen, fromRef }\n}","import React, { useEffect, useState } from 'react'\nimport { TestShapeCard } from './TestShapeCard';\n\nexport const TestBodyProfile = ({ options }) => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n\n        setData(options);\n\n    }, [options]);\n\n    return (\n        <React.Fragment>\n            {\n                (data !== [])\n                &&\n                data.map((question, key) => (\n                    <TestShapeCard\n                        key={key}\n                        questionData={question}\n                        option={data}\n                    />\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionShape } from '../../../hooks/QuestionShape/useFetchQuestionShape';\nimport useNearScreen from '../../../hooks/useNeerScreen';\nimport { TestBodyProfile } from './ProfileShape/TestBodyProfile';\nimport './styles.css';\n\nexport const ShapeScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, questionsShape, setSkip } = useFetchQuestionShape();\n\n    const { isNearScreen } = useNearScreen({\n        externalRef: loading ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPage = useCallback(debounce(\n        () => setSkip(preveSkip => preveSkip + 1), 200\n    ), [setSkip]);\n\n    useEffect(() => {\n        if (isNearScreen) debounceHandleNextPage()\n    }, [isNearScreen, debounceHandleNextPage]);\n\n    return (\n        <React.Fragment>\n            <div className=\"animated fadeIn\">\n                <div className=\"profile-nav alt\">\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            ADMINISTRACION DE PREGUNTAS FORMAS\n                        </header>\n                        {\n                            (questionsShape !== []) ?\n                                <TestBodyProfile options={questionsShape} />\n                                :\n                                <div className='panel-body'>\n                                    Cargando ...\n                                </div>\n                        }\n                    </section>\n                </div>\n            </div>\n            <div id=\"visor\" ref={externalRef}></div>\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionShape = () => {\n\n    const [loading, setLoading] = useState(false);\n\n    const [skip, setSkip] = useState(INITIAL_LIMIT);\n\n    const [questionsShape, setQuestionsShape] = useState([]);\n\n    useEffect(() => {\n\n        if (skip === INITIAL_LIMIT) {\n            testShapeLoading(INITIAL_LIMIT)\n        } else {\n            testShapeLoading(skip);\n        }\n    }, [skip]);\n\n    useEffect(() => {\n\n        return () => {\n            setQuestionsShape([])\n        }\n    }, []);\n\n    const testShapeLoading = async (skip) => {\n\n        setLoading(true);\n        const resp = await fetchConToken(`pregunta-formas/pformas?limit=1&skip=${skip}`);\n        const body = await resp.json();\n\n        try {\n\n            if (body.ok) {\n\n                const { preguntaFormas } = body;\n\n                setQuestionsShape((questionsShape) => questionsShape.concat(preguntaFormas));\n                setLoading(false);\n\n            }\n            else {\n                Swal.fire(':(', body.msg, 'error');\n                setLoading(false);\n\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n\n    }\n    return { loading, questionsShape, setSkip };\n\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionShape } from './FormQuestionShape';\n\nexport const UpdatedScreen = () => {\n\n    const { question, nombre, id_test, id_resp } = useSelector(state => state.questionShape.questionActive);\n\n    const history = useHistory();\n\n    const ChangeLocation = (e) => {\n        e.preventDefault();\n        history.push('/test/register/shapes/screen');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBAS FORMAS\n                    </header>\n                    {\n                        (question !== null)\n                            ?\n                            <FormQuestionShape\n                                id_pregunta={question}\n                                nombre={nombre}\n                                id_test={id_test}\n                                respuesta_correcta={id_resp}\n\n                            />\n                            :\n                            <div className=\"panel-body row align-items-end\">\n                                <div className=\"col-sm-12\">\n                                    <div className=\"text-center\">\n                                        <br />\n                                        <button onClick={ChangeLocation} className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                    </div>\n                                </div>\n                            </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { RegisterScreen } from '../../components/test/RegisterScreen';\nimport { Register } from '../../components/test/shapes/Register';\nimport { ShapeScreen } from '../../components/test/shapes/ShapeScreen';\nimport { UpdatedScreen } from '../../components/test/shapes/UpdatedScreen';\n\nexport const TestsRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test/register\"\n                    component={RegisterScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes\"\n                    component={Register}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/shapes/screen\"\n                    component={ShapeScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test/register/updated/shapes\"\n                    component={UpdatedScreen}\n                />\n                <Redirect to=\"/test/register\" />\n            </Switch>\n        </Layout>\n\n    )\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestShape = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-formas/new',{ \n                nombre:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba forma registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testShapeSetActive = ( testShape, id ) => ({ \n    type:types.testShapeActive,\n    payload: { testShape, id }\n});\n\nexport const updatedTestShape = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-formas/update', { \n                nombre:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba forma actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestShapeSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestShapeSetActiveClear = () => ({\n    type:types.testShapeClear\n});\n\n\nexport const testShapeLoaded = ( testShape ) => ({\n    type: types.testShapeLoaded,\n    payload: testShape \n});\n","import Swal from 'sweetalert2';\nimport React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { testShapeLoaded, testShapeSetActive } from '../actions/testShape';\nimport { uiModalTrue } from '../actions/ui';\n\n\nexport const useFetcheTestShape = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_Tformas: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTFormas = () => {\n\n            fetchConToken('test-formas/tformas', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.testFormas.forEach(item => rows.push({\n                        id_test: item.id_test,\n                        nombre: item.nombre,\n                        modified: <button className=\"btn btn-primary\" id={item.id_test} onClick={(e) => {\n\n                            // It's a little more understandable\n                            return (\n                                dispatch(testShapeLoaded(json.testFormas)),\n                                dispatch(testShapeSetActive(json.testFormas, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_test}\n                            onClick={(e) => {\n                                return (\n                                    testShapeDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_Tformas: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testShapeDelete = (id_test) => {\n\n            handleSwitchChange();\n\n            fetchConToken('test-formas/delete', {\n                id_test\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Prueba forma Eliminada', 'success');\n                        fetchTFormas();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTFormas();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_Tformas: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestShape, TestShapeSetActiveClear, updatedTestShape } from '../../../actions/testShape';\nimport { uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../../actions/ui';\n\nexport const ModalRegister = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testShapeActive } = useSelector(state => state.tShape);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n    //TODO README \n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (testShapeActive) {\n\n            dispatch(updatedTestShape(nombre, id_test));\n            history.push('/test-shape');\n\n        } else {\n\n            dispatch(startRegisterTestShape(nombre));\n            history.push('/test-shape');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(TestShapeSetActiveClear());\n    }\n\n    useEffect(() => {\n        if (testShapeActive) {\n            setFormValues(testShapeActive);\n        }\n        else {\n            setFormValues({ nombre: '' });\n        }\n\n    }, [testShapeActive, setFormValues]);\n\n    useEffect(() => {\n\n\n        if (nombre.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [nombre, dispatch]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(testShapeActive) ? 'Editar Prueba Forma' : 'Registrar Prueba Forma'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre\"\n                                placeholder=\"Ingrese nombre\"\n                                name=\"nombre\"\n                                value={nombre}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (testShapeActive) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { useFetcheTestShape } from '../../../hooks/useFetchTestShape';\nimport { ModalRegister } from './ModalRegister';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../actions/ui';\n\nexport const TestShapeScreen = () => {\n\n    const { data_Tformas: TestShape } =  useFetcheTestShape();\n    const dispatch = useDispatch();\n\n    const data = {\n        columns: [\n            {\n              label: 'Nombre',\n              field: 'nombre',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Modificar',\n              field: 'modified',\n              sort: 'asc',\n              width: 200\n            },\n            {\n              label: 'Eliminar',\n              field: 'deleted',\n              sort: 'asc',\n              width: 200\n            },\n        ],\n        rows: TestShape\n      };\n    const handleChangeModal = () =>{\n        dispatch( uiModalTrue() );\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Pruebas Formas\n                </header>\n                {\n                    (data.rows !== [])\n                    ?\n                    <div className=\"panel-body\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"text-right\" id=\"nestable_list_menu\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={ handleChangeModal }>Registrar</button>\n                        </div>\n                        <br/>\n                    </div>\n\n                        <MDBDataTable\n                            noRecordsFoundLabel=\"Cargando...\"\n                            scrollX\n                            autoWidth={true}\n                            maxHeight=\"40vh\"\n                            striped\n                            bordered\n                            small\n                            data={ data }\n                        />\n                    </div>\n                    :\n                    <div className=\"panel-body\">\n                        <div>Cargando...</div>\n                    </div>\n                }\n            </section>\n            <ModalRegister />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreenQuestion } from '../../components/answers/shapes/ShapeScreenQuestion';\nimport { Layout } from '../../components/main/Layout';\nimport { TestShapeScreen } from '../../components/test/test-shape/TestShapeScreen';\n\nexport const TestShapeRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-shape\"\n                    component={TestShapeScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-shape/questions\"\n                    component={ShapeScreenQuestion}\n                />\n                <Redirect to=\"/test-shape\" />\n            </Switch>\n        </Layout >\n    );\n\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterCategory = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'categoria/new',{ \n                nombre_categoria:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Categoria registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleCategoryActive = ( testSimpleCategory, id ) => ({ \n    type:types.testSimpleCategoryActive,\n    payload: { testSimpleCategory, id }\n});\n\nexport const updatedTestSimpleCategory = ( name, id  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'categoria/update', { \n                nombre_categoria: name,\n                id_categoria: id\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Categoria actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleCategorySetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleCategorySetActiveClear = () => ({\n    type:types.testSimpleCategoryClear\n});\n\n\nexport const testSimpleCategoryLoaded = ( testSimpleCategory ) => ({\n    type: types.testSimpleCategoryLoaded,\n    payload: testSimpleCategory \n});\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleCategoryActive, testSimpleCategoryLoaded } from '../actions/category';\n\n\nexport const useFetchCategory = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_category: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTSimpleCategory = () => {\n\n            fetchConToken('categoria/categorias', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.categorias.forEach(item => rows.push({\n                        id_categoria: item.id_categoria,\n                        nombre_categoria: item.nombre_categoria,\n                        modified: <button className=\"btn btn-primary\" id={item.id_categoria} onClick={(e) => {\n                            // It's a little more understandable\n                            return (\n                                dispatch(testSimpleCategoryLoaded(json.categorias)),\n                                dispatch(testSimpleCategoryActive(json.categorias, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_categoria}\n                            onClick={(e) => {\n                                return (\n                                    testSimpleCategoryDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_category: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testSimpleCategoryDelete = (id_categoria) => {\n\n            handleSwitchChange();\n\n            fetchConToken('categoria/delete', {\n                id_categoria\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Categoria Eliminada', 'success');\n                        fetchTSimpleCategory();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTSimpleCategory();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_category: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterCategory, testSimpleCategoryActive, updatedTestSimpleCategory } from '../../../../actions/category';\nimport { uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from '../../../../actions/ui';\n\nexport const ModalCategory = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { categoryActive } = useSelector(state => state.category);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n\n\n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_categoria: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre_categoria, id_categoria } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (categoryActive) {\n\n            dispatch(updatedTestSimpleCategory(nombre_categoria, id_categoria));\n            history.push('category');\n\n        } else {\n\n            dispatch(startRegisterCategory(nombre_categoria));\n            history.push('category');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(testSimpleCategoryActive());\n    }\n\n    useEffect(() => {\n        if (categoryActive) {\n            setFormValues(categoryActive);\n        }\n        else {\n            setFormValues({ nombre_categoria: '' });\n        }\n\n    }, [categoryActive, setFormValues]);\n\n    useEffect(() => {\n\n        if (nombre_categoria.trim() === '') {\n            return (\n                dispatch(uiOpenLoadingSaveButton()),\n                dispatch(uiTrueDisabledButton())\n            )\n\n        }\n        return dispatch(uiFalseDisabledButton());\n\n\n    }, [nombre_categoria, dispatch]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(categoryActive) ? 'Editar Categoria' : 'Registrar Categoria'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre categoria</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre_categoria\"\n                                placeholder=\"Ingrese nombre categoria\"\n                                name=\"nombre_categoria\"\n                                value={nombre_categoria}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (categoryActive) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { MDBDataTable } from 'mdbreact';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../../actions/ui';\nimport { useFetchCategory } from '../../../../hooks/useFetchCategory';\nimport { ModalCategory } from './ModalCategory';\n\nexport const CategoryScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { data_category: category } = useFetchCategory();\n\n\n    const data = {\n        columns: [\n            {\n                label: 'Nombre Categoria',\n                field: 'nombre_categoria',\n                sort: 'asc',\n                width: 200,\n            },\n            {\n                label: 'Modificar',\n                field: 'modified',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'Eliminar',\n                field: 'deleted',\n                sort: 'asc',\n                width: 200\n            },\n        ],\n        rows: category\n    };\n    const handleChangeModal = () => {\n        return dispatch(uiModalTrue());\n    }\n\n    return (\n        <div className=\"col-lg-12 animated fadeIn\">\n            <section className=\"panel\">\n                <header className=\"panel-heading\">\n                    Administración de Categoria\n                </header>\n                {\n                    (data.rows !== [])\n                        ?\n                        <div className=\"panel-body\">\n                            <div className=\"col-lg-12\">\n                                <div className=\"text-right\" id=\"nestable_list_menu\">\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={handleChangeModal}>Registrar</button>\n                                </div>\n                                <br />\n                            </div>\n\n                            <MDBDataTable\n                                noRecordsFoundLabel={category !== undefined || data.rows !== undefined ? \"Cargando...\" : \"Aún no se registro ningun dato\"}\n                                scrollX\n                                autoWidth={true}\n                                maxHeight=\"40vh\"\n                                striped\n                                bordered\n                                small\n                                data={data}\n                            />\n                        </div>\n                        :\n                        <div className=\"panel-body\">\n                            <div>Cargando</div>\n                        </div>\n                }\n            </section>\n            <ModalCategory />\n        </div>\n    )\n}\n","import Swal from 'sweetalert2';\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from '../types/types';\n\nexport const simpleRegister = ( pregunta, id_category, id_test ) => {\n\n    return async ( dispatch ) => {\n\n       console.log(pregunta, id_category, id_test)\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n        if ( pregunta === '' || id_test === '' || id_category === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.','error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton () )\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/new', {\n                pregunta: pregunta,\n                id_categoria: id_category,\n                id_test: id_test\n            },'POST');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta registrada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\n\nexport const simpleEdit = ( id_pregunta, pregunta, id_categoria, id_test ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( id_pregunta === '' || pregunta === '' || id_test === '' || id_categoria === '' || pregunta === undefined) {\n            return (\n                Swal.fire(':(', 'Es requerido todos los campos.','error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton () )\n            )\n        }\n\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/update', {\n                id_pregunta,\n                pregunta:pregunta,\n                id_test:id_test,\n                id_categoria:id_categoria\n            },'PUT');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Modificada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n        \n\n    }\n}\n\nexport const questionDeleteSimple = ( id_pregunta ) => {\n\n    return async () => {\n        try {\n\n            const resp = await fetchConToken('pregunta-simple/delete', {\n                id_pregunta\n            },'DELETE');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Eliminada', 'success');\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log( error);\n        }\n\n    }\n\n}\n\nexport const questionSetSimple = ( id_pregunta, pregunta, id_categoria, id_test ) => ( questionSimple( { id_pregunta, pregunta, id_categoria, id_test }  ) );\n\nconst questionSimple = ( questionActive ) => ({ \n    type: types.questionSimpleSetActive,\n    payload: questionActive\n});\n\nexport const questionClearSimple = ()  =>({ type: types.questionSimpleClearActive });","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { questionClearSimple, questionDeleteSimple, questionSetSimple } from '../../../../actions/questionSimple';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nmoment.locale('es');\n\nexport const PanelBody = ({ setDataQuestion, setFilter = [], id_pregunta = '', id_categoria = '', id_test = '', pregunta = '', updatedAt = '', createdAt = '', categorias = '', test_simples = '' }) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { nombre_categoria } = categorias;\n\n    const { nombre_test } = test_simples;\n\n    const handleActiveQuestionsSimple = (id_pregunta, pregunta, id_categoria, id_test) => {\n\n        dispatch(questionClearSimple());\n        dispatch(questionSetSimple(id_pregunta, pregunta, id_categoria, id_test));\n        history.push('/test-simple/question/edit');\n    }\n\n    const handleDeleteQuestionSimple = (id_pregunta) => {\n\n        dispatch(questionDeleteSimple(id_pregunta));\n        setDataQuestion(\n            setFilter.filter(\n                e => (e.id_pregunta !== id_pregunta)\n            ));\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-6\">\n                <div className=\"profile-desk\">\n                    <h1>Pregunta</h1>\n                    <br />\n                    {pregunta}\n                    <span className=\"text-muted\"></span>\n                    <h1>Detalles</h1>\n                    <br />\n                    <span className=\"text-muted\">\n                        Creado : {moment(createdAt).format('LL, h:mm:ss a')}\n                        <br />\n                        Ultima Actualizacion : {moment(updatedAt).format('LL, h:mm:ss a')}\n                        <br />\n                    </span>\n                    <br />\n                    <button onClick={() => { handleActiveQuestionsSimple(id_pregunta, pregunta, id_categoria, id_test) }} className=\"btn btn-primary\">Editar</button>\n                    &nbsp;\n                    <button onClick={() => { handleDeleteQuestionSimple(id_pregunta) }} className=\"btn btn-success\">Eliminar</button>\n                </div>\n            </div>\n            <div className=\"col-md-3\">\n                <div className=\"profile-statistics\">\n                    <h1>Categoria</h1>\n                    <p>\n                        {\n                            nombre_categoria\n                        }\n                    </p>\n                    <h1>Prueba Simple</h1>\n                    <p>\n                        {\n                            nombre_test\n                        }\n                    </p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React,{ useState, useEffect } from 'react'\nimport { PanelBody } from './PanelBody'\n\nexport const QuestionSimpleCard = ( { setDataQuestion, option = [], setFilter = [] } ) => {\n\n    const [state, setState] = useState([]);\n\n    const { id_pregunta, id_categoria, id_test, pregunta, updatedAt, createdAt, categorias, test_simples } = state;\n\n    useEffect(() => {\n        setState( option );\n        return () => {\n            setState([]);\n        }\n    }, [ option ]);\n\n\n    return (\n        <div className=\"animated fadeIn\" >\n            <div className=\"panel-body profile-information\">\n                <PanelBody\n                    id_pregunta = { id_pregunta }\n                    id_categoria = { id_categoria } \n                    id_test = { id_test }\n                    pregunta={ pregunta }\n                    updatedAt={ updatedAt }\n                    createdAt ={ createdAt }\n                    categorias={ categorias }\n                    test_simples={ test_simples }\n                    setFilter= { setFilter }\n                    setDataQuestion={ setDataQuestion }\n               />\n            </div>\n            <hr/>\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { QuestionSimpleCard } from './QuestionSimpleCard';\n\nexport const QuestionBodyProfile = ({ options }) => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n\n        setData(options);\n\n        return (() => {\n            setData([])\n        });\n\n    }, [options]);\n\n    return (\n        <React.Fragment>\n            {\n                (data !== [])\n                &&\n                data.map((option, key) => (\n                    <QuestionSimpleCard\n                        option={option}\n                        setFilter={options}\n                        setDataQuestion={setData}\n                        key={key} />\n                ))\n            }\n        </React.Fragment>\n    )\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'just-debounce-it';\nimport { useFetchQuestionSimple } from '../../../hooks/QuestionSimple/useFetchQuestionSimple';\nimport { QuestionBodyProfile } from './ProfileSimple/QuestionBodyProfile'\nimport useNearScreen from '../../../hooks/useNeerScreen';\n\nexport const SimpleScreen = () => {\n\n    const externalRef = useRef();\n\n    const { loading, QuestionsSimple, setSkip } = useFetchQuestionSimple();\n\n    const { isNearScreen } = useNearScreen({\n        externalRef: loading ? null : externalRef,\n        once: false\n    });\n\n    const debounceHandleNextPageSimple = useCallback(\n        debounce(\n            () => setSkip(preveSkip => preveSkip + 5), 1000\n        ), [setSkip]);\n\n    useEffect(() => {\n        if (isNearScreen) debounceHandleNextPageSimple();\n    }, [isNearScreen, debounceHandleNextPageSimple]);\n\n    return (\n        <React.Fragment>\n            <div className=\"animated fadeIn\">\n                <div className=\"profile-nav alt\">\n                    <section className=\"panel\">\n                        <header className=\"panel-heading\">\n                            ADMINISTRACION DE PREGUNTAS SIMPLES\n                        </header>\n                        <div>\n                            {\n                                (QuestionsSimple !== []) &&\n                                <QuestionBodyProfile options={QuestionsSimple} />\n                            }\n                        </div>\n                    </section>\n                </div>\n            </div>\n            <div id=\"visor-simple\" ref={externalRef}></div>\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nconst INITIAL_LIMIT = 0;\n\nexport const useFetchQuestionSimple = () => {\n\n    const [ loading, setLoading ] = useState( false );\n\n    const [ skip, setSkip ] = useState( INITIAL_LIMIT );\n\n    const [ QuestionsSimple, setQuestionsSimple ] = useState([]);\n\n    useEffect(() => {\n        \n        if ( skip === INITIAL_LIMIT) \n            testShapeLoading(INITIAL_LIMIT)\n        else\n        testShapeLoading(skip)\n    }, [ skip ]);\n\n    useEffect(() => {\n        \n        return () => {\n            setQuestionsSimple([])\n        }\n    }, []);\n\n    const testShapeLoading = async ( skip ) => {\n        \n        setLoading( true );\n        const resp = await fetchConToken(`pregunta-simple/psimples?limit=5&skip=${ skip }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { simples_preguntas } = body;\n\n                setQuestionsSimple( QuestionsSimple.concat( simples_preguntas ) );\n                setLoading( false );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n                setLoading( false );\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n            setLoading( false );\n        }\n    \n    }\n\n    return { loading, QuestionsSimple, setSkip };\n\n\n}","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchCategory = () => {\n\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        \n        categoryLoading()\n        \n    }, [])\n\n    const categoryLoading = async () => {\n\n        const resp = await fetchConToken(`categoria/categorias`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { categorias } = body;\n\n                setData( categorias );\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return { data };\n\n\n}","import { useEffect, useState } from 'react'\nimport Swal from 'sweetalert2';\nimport { fetchConToken } from '../../helpers/fetch';\n\nexport const useFetchTestSimple = () => {\n\n\n    const [questionsSimple, setQuestionsSimple] = useState([]);\n\n    useEffect(() => {\n\n        testSimpleLoading();\n\n    }, []);\n\n    const testSimpleLoading = async () => {\n\n        const resp = await fetchConToken(`test-simple/testsimples`);\n        const body = await resp.json();\n\n        try {\n\n            if (body.ok) {\n\n                const { testSimple } = body;\n\n                setQuestionsSimple(testSimple);\n\n            }\n            else {\n                Swal.fire(':(', body.msg, 'error');\n\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    return { questionsSimple };\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleRegister } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SimpleScreenRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n    const { data } = useFetchCategory();\n\n    const [ state, setState ] = useState([]);\n    const [ categoryData, setCategoryData ] = useState([]);\n    const [ testName, setTestName ] = useState([]);\n    const [ nameCategory, setNameCategory ] = useState([]);\n\n    const [ formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange ] = useForm({\n        question: '',\n        tSimple: '',\n        category: ''\n    });\n\n    const  { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleRegister = ( e ) =>{\n        e.preventDefault();\n        if ( question !== '' && tSimple !== '' && category !== '' ) {\n            dispatch( simpleRegister( question, tSimple, category ) );\n        }\n        Swal.fire(':(','Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n        \n        setState( questionsSimple );\n        setCategoryData( data );\n        \n    }, [ questionsSimple, data ]);\n\n    \n    useEffect(() => {\n        \n        setNameCategory( data.find( e => e.id_categoria.toString() === category ) );\n        setTestName( questionsSimple.find( e => e.id_test.toString() === tSimple ) );\n\n    }, [ category, tSimple, data, questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        REGISTRO DE PRUEBAS SIMPLES\n                    </header>\n                \n                        <div className=\"panel-body\">\n                            <div className=\"position-center\">\n                                <form onSubmit={ handleRegister }>\n                                <div className=\"form-group\">\n                                    <label>Pregunta</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"InputQuestion\" \n                                        name=\"question\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        value={ question }\n                                        placeholder=\"Ingrese la pregunta\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <p>Prueba seleccionada : `{ ( testName !== undefined || '' ? testName.nombre_test : '') }`</p>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ tSimple  }\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Categoria</label>\n                                    <p>Categoria seleccionada : `{ ( nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '') }`</p>\n                                    <select \n                                        formcontrolname=\"curso\" \n                                        name=\"category\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ category  }\n                                        >\n                                        {\n                                            categoryData.map(( e )=>(\n                                                <option \n                                                    key={ e.id_categoria } \n                                                    value={ e.id_categoria } \n                                                >{ e.nombre_categoria }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                <button type=\"submit\" className=\"btn btn-success\">Registrar</button>\n                            </form>\n                            </div>\n\n                        </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiModalFalse, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\n\n\nexport const startRegisterTestSimple = ( name ) => {\n    return async( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        if ( name.trim() === '' ) {\n            \n            return (\n                Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n\n        }\n        const resp = await fetchConToken( 'test-simple/new',{ \n                nombre_test:name, \n        } , 'POST');\n        const body = await resp.json();\n\n\n        if ( body.ok ) {\n            Swal.fire(':)','Prueba simple registrada', 'success');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n            dispatch( uiModalFalse() );\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton() );\n        }\n\n\n    }\n}\n\nexport const testSimpleActive = ( testSimple, id ) => ({ \n    type:types.testSimpleActive,\n    payload: { testSimple, id }\n});\n\nexport const updatedTestSimple = ( name, id_test  ) => {\n    return async ( dispatch ) => {\n        \n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n    \n            if ( name.trim() === '' ) {\n                \n                return (\n                    Swal.fire(':(', 'Todos los campos son requeridos', 'error'),\n                    dispatch( uiOpenLoadingSaveButton() ),\n                    dispatch( uiFalseDisabledButton() )\n                );\n    \n            }\n            const resp = await fetchConToken( 'test-simple/update', { \n                nombre_test:name,\n                id_test:id_test\n            }, 'PUT');\n\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                Swal.fire(':)','Prueba simple actualizada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n                dispatch( TestSimpleSetActiveClear() );\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton() );\n            }\n    \n\n        } catch (error) {\n            console.log(error);\n            return (\n                Swal.fire('Error', \"Hable con el administrador\", 'error'),\n                dispatch( uiOpenLoadingSaveButton() ),\n                dispatch( uiFalseDisabledButton() )\n            );\n        }\n\n    }\n}\n\nexport const TestSimpleSetActiveClear = () => ({\n    type:types.testSimpleClear\n});\n\n\nexport const testSimpleLoaded = ( testSimple ) => ({\n    type: types.testSimpleLoaded,\n    payload: testSimple \n});\n","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { startRegisterTestSimple, TestSimpleSetActiveClear, updatedTestSimple } from '../../../../actions/testSimple';\nimport { uiModalFalse } from '../../../../actions/ui';\n\nexport const ModalRegisterSimple = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { testActiveSimple } = useSelector(state => state.tSimple);\n    const { uiDisabled, uiLoadingSaveButton, uiModal } = useSelector(state => state.ui);\n\n    if (process.env.NODE_ENV !== 'test') {\n        Modal.setAppElement('#root');\n    }\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    const initForm = {\n        nombre_test_test: ''\n    }\n    const [formValues, setFormValues] = useState(initForm);\n\n    const { nombre_test, id_test } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (testActiveSimple) {\n\n            dispatch(updatedTestSimple(nombre_test, id_test));\n            history.push('tsimple');\n\n        } else {\n\n            dispatch(startRegisterTestSimple(nombre_test));\n            history.push('tsimple');\n\n        }\n\n        closeModal();\n    }\n    const closeModal = () => {\n        dispatch(uiModalFalse());\n        dispatch(TestSimpleSetActiveClear());\n    }\n\n    useEffect(() => {\n        if (testActiveSimple) {\n            setFormValues(testActiveSimple);\n        }\n        else {\n            setFormValues({ nombre_test: '' });\n        }\n\n    }, [testActiveSimple, setFormValues]);\n\n    return (\n        <Modal\n            isOpen={uiModal}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\n        >\n            <h1> {(testActiveSimple) ? 'Editar Prueba Simple' : 'Registrar Prueba Simple'} </h1>\n            <section className=\"panel\">\n                <div className=\"panel-body\">\n                    <form autoComplete=\"off\" onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <label>Nombre</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                id=\"nombre_test\"\n                                placeholder=\"Ingrese nombre\"\n                                name=\"nombre_test\"\n                                value={nombre_test}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-info\"\n                            disabled={uiDisabled}\n                        >\n                            <i className={uiLoadingSaveButton} />\n                            {\n                                (testActiveSimple) ? \" Modificar\" : \" Registrar\"\n                            }\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchConToken } from '../helpers/fetch';\nimport { uiModalTrue } from '../actions/ui';\nimport { testSimpleActive, testSimpleLoaded } from '../actions/testSimple';\n\n\nexport const useFetchTestSimple = () => {\n\n    const dispatch = useDispatch();\n\n    const [uiDisabled, setUiDisabled] = useState(false);\n\n    const history = useHistory();\n\n    const [data, setData] = useState({\n        data_simple: []\n    });\n\n    const handleSwitchChange = useCallback(() => {\n        setUiDisabled(true)\n    }, []);\n\n    useEffect(() => {\n\n        const fetchTSimple = () => {\n\n            fetchConToken('test-simple/testsimples', 'GET')\n                .then(res => res.json())\n                .then(json => {\n\n                    let rows = [];\n\n                    json.testSimple.forEach(item => rows.push({\n                        id_test: item.id_test,\n                        nombre: item.nombre_test,\n                        modified: <button className=\"btn btn-primary\" id={item.id_test} onClick={(e) => {\n\n                            // It's a little more understandable\n                            return (\n                                dispatch(testSimpleLoaded(json.testSimple)),\n                                dispatch(testSimpleActive(json.testSimple, e.target.id)),\n                                dispatch(uiModalTrue())\n                            )\n                        }}>Modificar</button>,\n                        deleted: <button className=\"btn btn-success\" disabled={uiDisabled} id={item.id_test}\n                            onClick={(e) => {\n                                return (\n                                    testSimpleDelete(e.target.id)\n                                )\n                            }}\n                        >Eliminar</button>\n                    }));\n\n                    setData({ data_simple: rows });\n                })\n                .catch(err => console.error(err));\n\n        }\n        const testSimpleDelete = (id_test) => {\n\n            handleSwitchChange();\n\n            fetchConToken('test-simple/delete', {\n                id_test\n            }, 'DELETE')\n                .then(res => {\n                    if (res.ok) {\n                        Swal.fire(':)', 'Prueba simple Eliminada', 'success');\n                        fetchTSimple();\n                    }\n                })\n                .catch(err => (\n                    console.error(err)),\n                );\n        };\n\n        fetchTSimple();\n\n        // Clear useEffect\n        return () => {\n            setData({ data_simple: [] });\n            setUiDisabled(false);\n        }\n\n    }, [history, dispatch, uiDisabled, handleSwitchChange]);\n\n    return data;\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiModalTrue } from '../../../../actions/ui';\n\nimport { MDBDataTable } from 'mdbreact';\nimport { ModalRegisterSimple } from './ModalRegisterSimple';\nimport { useFetchTestSimple } from '../../../../hooks/useFetchTestSimple';\n\nexport const TestScreenSimple = () => {\n\n    const dispatch = useDispatch();\n\n    const { data_simple: TestSimple } = useFetchTestSimple();\n\n    const data = {\n        columns: [\n            {\n                label: 'Nombre',\n                field: 'nombre',\n                sort: 'asc',\n                width: 200,\n            },\n            {\n                label: 'Modificar',\n                field: 'modified',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'Eliminar',\n                field: 'deleted',\n                sort: 'asc',\n                width: 200\n            },\n        ],\n        rows: TestSimple\n    };\n    const handleChangeModal = () => {\n        dispatch(uiModalTrue());\n    }\n\n\n    return (\n        <React.Fragment>\n            <div className=\"col-lg-12 animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        Pruebas Simple\n                    </header>\n                    {\n                        (data.rows !== [])\n                            ?\n                            <div className=\"panel-body\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"text-right\" id=\"nestable_list_menu\">\n                                        <button type=\"button\" className=\"btn btn-success\" onClick={handleChangeModal}>Registrar</button>\n                                    </div>\n                                    <br />\n                                </div>\n\n                                <MDBDataTable\n                                    noRecordsFoundLabel={(TestSimple !== undefined || data.rows !== undefined) ? \"Cargando...\" : \"Aún no se registro ningun dato\"}\n                                    scrollX\n                                    autoWidth={true}\n                                    maxHeight=\"40vh\"\n                                    striped\n                                    bordered\n                                    small\n                                    data={data}\n                                />\n                            </div>\n                            :\n                            <div className=\"panel-body\">\n                                <div>Cargando ...</div>\n                            </div>\n\n                    }\n                </section>\n                <ModalRegisterSimple />\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { simpleEdit } from '../../../actions/questionSimple';\nimport { useFetchCategory } from '../../../hooks/QuestionSimple/useFetchCategory';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const FormUpdatedQuestion = ( { id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  } ) => {\n\n    const dispatch = useDispatch();\n\n    const { questionsSimple } = useFetchTestSimple();\n    const { data } = useFetchCategory();\n\n    const [ state, setState ] = useState([]);\n    const [ categoryData, setCategoryData ] = useState([]);\n    const [ testName, setTestName ] = useState([]);\n    const [ nameCategory, setNameCategory ] = useState([]);\n\n    const [ formQuestionSimpleInputValues, handleQuestionSimpleInputValueChange ] = useForm({\n        question: pregunta,\n        tSimple: id_test,\n        category: id_categoria\n    });\n\n    const  { question, tSimple, category } = formQuestionSimpleInputValues;\n\n    const handleModified = ( e ) =>{\n        e.preventDefault();\n        if ( question !== '' && tSimple !== '' && category !== '' && question.trim().length !== 0 ) {\n            dispatch( simpleEdit( id_pregunta, question, category, tSimple ) );\n        }\n        Swal.fire(':(','Todos los campos son necesarios verificar nuevamente', 'error');\n    }\n\n    useEffect(() => {\n        \n        setState( questionsSimple );\n        setCategoryData( data );\n        \n        return(()=>{\n            setState([]);\n            setCategoryData([]);    \n        })\n        \n    }, [ questionsSimple, data ]);\n\n    \n    useEffect(() => {\n        \n        setNameCategory( data.find( e => e.id_categoria.toString() === category ) );\n        setTestName( questionsSimple.find( e => e.id_test.toString() === tSimple ) );\n\n        return(()=>{\n            setNameCategory([]);\n            setTestName([]);\n        })\n\n    }, [ category, tSimple, data, questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        MODIFICAR PRUEBA SIMPLE\n                    </header>\n                \n                        <div className=\"panel-body\">\n                            <div className=\"position-center\">\n                                <form onSubmit={ handleModified }>\n                                <div className=\"form-group\">\n                                    <label>Pregunta</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"InputQuestion\" \n                                        name=\"question\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        value={ question }\n                                        placeholder=\"Ingrese la pregunta\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <p>Prueba seleccionada : `{ ( testName !== undefined || '' ? testName.nombre_test : '') }`</p>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ tSimple  }\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Categoria</label>\n                                    <p>Categoria seleccionada : `{ ( nameCategory !== undefined || '' ? nameCategory.nombre_categoria : '') }`</p>\n                                    <select \n                                        formcontrolname=\"curso\" \n                                        name=\"category\"\n                                        onChange={ handleQuestionSimpleInputValueChange } \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        value={ category  }\n                                        >\n                                        {\n                                            categoryData.map(( e )=>(\n                                                <option \n                                                    key={ e.id_categoria } \n                                                    value={ e.id_categoria } \n                                                >{ e.nombre_categoria }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <p className=\"help-block\">Todos los campos son requeridos.</p>\n                                <button type=\"submit\" className=\"btn btn-success\">Modificar</button>\n                            </form>\n                            </div>\n\n                        </div>\n                </section>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { FormUpdatedQuestion } from './FormUpdatedQuestion';\n\n\nexport const FormQuestionSimple = ({ id_pregunta = '', pregunta = '', id_categoria = '', id_test = ''  }) => {\n\n    return (\n       <FormUpdatedQuestion\n            id_pregunta={ id_pregunta }\n            pregunta={ pregunta }\n            id_categoria={ id_categoria }\n            id_test={ id_test }\n       />\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormQuestionSimple } from './FormQuestionSimple';\n\nexport const UpdatedScreen = () => {\n\n    const { id_pregunta, pregunta, id_categoria, id_test } = useSelector( state => state.qSimple.questionActive );\n\n    const history = useHistory();\n\n    const ChangeLocation = ( e ) => {\n        e.preventDefault();\n        history.push('/test-simple');\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                        {\n                            ( id_pregunta === undefined ) &&\n                            <header className=\"panel-heading\">\n                                MODIFICAR PRUEBA SIMPLE\n                            </header>\n                        }\n                        {\n                        ( id_pregunta !== undefined )\n                        ?\n                            <FormQuestionSimple\n                                id_pregunta={ id_pregunta }\n                                pregunta={ pregunta }\n                                id_categoria={ id_categoria }\n                                id_test={ id_test }\n\n                            /> \n                        :\n                        <div className=\"panel-body row align-items-end\">\n                            <div className=\"col-sm-12\"> \n                                <div className=\"text-center\">\n                                    <br/>\n                                    <button onClick={ ChangeLocation } className=\"btn btn-primary\">Debe de seleccionar una pregunta para editar</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from '../../components/main/Layout';\nimport { CategoryScreen } from '../../components/test/simple/category/CategoryScreen';\nimport { SimpleScreen } from '../../components/test/simple/SimpleScreen';\nimport { SimpleScreenRegister } from '../../components/test/simple/SimpleScreenRegister';\nimport { TestScreenSimple } from '../../components/test/simple/test/TestScreenSimple';\nimport { UpdatedScreen } from '../../components/test/simple/UpdatedScreen';\n\nexport const TestSimpleRouter = () => {\n\n    document.body.style.backgroundColor = \"\";\n\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/test-simple\"\n                    component={SimpleScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/question\"\n                    component={SimpleScreenRegister}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/question/edit\"\n                    component={UpdatedScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/category\"\n                    component={CategoryScreen}\n                />\n                <Route\n                    exact\n                    path=\"/test-simple/tsimple\"\n                    component={TestScreenSimple}\n                />\n            </Switch>\n        </Layout>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersShapeActive } from '../../../actions/answersShape';\nimport { useFetchTestShape } from '../../../hooks/Answers/Shape/useFetchTestShape';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const ShapeScreeAnswers = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState([]);\n\n\n    const { dataShape } = useFetchTestShape();\n\n    const [selectionDefault, setSelectionDefault] = useState('');\n\n    const [formSelectionInputValues, handleSelectionInputValueChange] = useForm({\n        tShape: selectionDefault\n    });\n\n    const { tShape } = formSelectionInputValues;\n\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        if (tShape !== '') {\n\n            return (\n                dispatch(answersShapeActive(tShape)),\n                history.push('/test-shape/questions')\n            )\n\n        } else {\n            return (\n                dispatch(answersShapeActive(selectionDefault)),\n                history.push('/test-shape/questions')\n            )\n\n        }\n\n    }\n\n    useEffect(() => {\n\n        if (dataShape !== []) {\n            if (dataShape[0] !== undefined) {\n\n                const DEFAULTVALUE = dataShape[0].id_test;\n\n                setSelectionDefault(DEFAULTVALUE.toString());\n\n            }\n        }\n        setState(dataShape);\n\n    }, [dataShape]);\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA DE FORMA\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form\n                                onSubmit={handleSubmitForm}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Prueba forma</label>\n                                    <select\n                                        formcontrolname=\"test-simple\"\n                                        name=\"tShape\"\n                                        value={tShape}\n                                        onChange={handleSelectionInputValueChange}\n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                    >\n                                        {\n                                            state.map((e) => (\n                                                <option\n                                                    key={e.id_test}\n                                                    value={e.id_test}\n                                                >{e.nombre}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchTestShape = () => {\n    \n    const [ data, setData ] = useState({\n        dataShape:[]\n    });\n    \n    useEffect(() => {\n        \n        shapeLoading();\n\n    }, []);\n\n    const shapeLoading = async () => {\n\n        const resp = await fetchConToken(`test-formas/tformas`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { testFormas } = body;\n\n                const dataMap = testFormas;    \n\n                setData({\n                    dataShape: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport * as moment from 'moment';\nimport Swal from \"sweetalert2\";\n\n\nexport const answersSimpleActive = (answerSimple) => ({\n    type: types.answersSimpleActive,\n    payload: answerSimple\n});\n\nexport const answersSimpleClear = () => ({\n    type: types.answersSimpleClear\n});\n\nexport const answersfilter = (answer) => ({\n    type: types.answersfilter,\n    payload: answer\n});\nexport const answersfilterActive = (answersActive, position) => ({\n    type: types.answersfilterActive,\n    payload: { answersActive, position }\n});\n\nexport const answersRegister = (uid, answers) => {\n\n    return async () => {\n\n        const now = moment().format();\n\n        try {\n\n            answers.map(async (e) => {\n\n                if (e.answers.toString() === 'yes') {\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 1,\n                        nose: 0,\n                        no: 0\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n                }\n                if (e.answers.toString() === 'no-know') {\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 0,\n                        nose: 1,\n                        no: 0\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n\n                }\n                if (e.answers.toString() === 'no') {\n\n\n                    const resp = await fetchConToken('respuesta-simple/new', {\n                        id_pregunta: e.id,\n                        persona_id: uid,\n                        fecha_hora: now,\n                        si: 0,\n                        nose: 0,\n                        no: 1\n                    }, 'POST');\n\n                    const body = await resp.json();\n\n                    if (body.ok) {\n\n                        return Swal.fire(':)', 'Respuestas Registradas', 'success');\n                    } else {\n\n                        return Swal.fire(':(', 'Las respuestas ya fueron registradas', 'error');\n                    }\n\n                }\n\n\n            });\n\n        } catch (err) {\n            return Swal.fire('Error', \"Hable con el administrador\", 'error')\n        }\n    }\n\n};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { answersfilter, answersfilterActive, answersRegister } from '../../../actions/answersSimple';\nimport '../styles/simples/FormWinzard.css'\n\nexport const FormWinzard = ( props ) => {  \n\n    const dispatch = useDispatch();\n    const { answers } = useSelector( state => state.answerSimple );\n    const { uid } = useSelector(state => state.auth);\n\n    const array = new Array( props.length );\n\n    const arrayLength = () => {\n        \n        let elements = [ props.current ];\n\n        for ( let index = 0; index < array.length; index++ ) {\n            \n            elements[ index ] = { id: null, answers: '' };\n        }\n\n        return elements\n    \n    }\n\n    const handleClick = ( e ) => {\n        \n        if ( answers === null ) {\n\n            return (\n                dispatch(  answersfilter( arrayLength() ) ),\n                dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n            )\n        }\n\n        return (\n            dispatch( answersfilterActive( { id: props.id, answers: e.target.id }, props.current - 1 ) )\n        )\n\n    }\n\n    const handleSendAnswers = () => {\n        \n        dispatch( answersRegister( uid, answers ) );\n    }\n\n    return (\n         <div className=\"panel-body\">\n            <div className=\"position-center\" style={{ textAlign:\"center\" }}>\n                <h3>Pregunta</h3>\n                {\n                    props.data\n                }\n                <br/>\n                <br/>\n           \n                <div className=\"row\" style={{ paddingTop:\"10px\" }} >\n                    <div className=\"switch-toggle switch-3 switch-candy\">\n                        <input id=\"yes\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick }\n                            />\n                            <label htmlFor=\"yes\" >Si</label>\n                        \n                        <input id=\"no-know\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            defaultChecked/>\n                            <label htmlFor=\"no-know\" >No se</label>\n\n                        <input id=\"no\" name=\"state-d\" type=\"radio\" \n                            onClick={ handleClick } \n                            />\n                            <label htmlFor=\"no\" >No</label>\n                        <a href=\"/\"> </a> \n                    </div>\n                    <br/>\n                    <br/>\n                    <div className=\"col-sm-6\" style={{ paddingBottom:\"10px\", textAlign:\"center\" }} >\n                        <button className=\"btn btn-primary\" disabled={props.isFirst()} onClick={props.prev}>\n                            Anterior\n                        </button> \n                    </div>\n                    <div className=\"col-sm-6\" style={{ textAlign:\"center\" }} >\n                        <button className=\"btn btn-success\" disabled={props.isLast()} onClick={props.next}>\n                            Siguiente\n                        </button>\n                    </div>\n                    <br/>\n                    {\n                        ( props.length === ( props.current ) )\n                        &&\n                        <button className=\"btn btn-info btn-lg btn-block\" onClick={ handleSendAnswers }>\n                            Enviar\n                        </button> \n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Steps, Step } from \"react-step-builder\"\nimport { FormWinzard } from './FormWinzard';\n\n\nexport const MapOfFormWinzard = ({ dataAnswers = []}) => {\n\n    const config = {\n        navigation: {\n          location: \"before\",\n        }\n    };\n    \n    return (\n        <div>\n            <Steps config={ config } >\n                {\n                     dataAnswers.map( ( e, key ) =>{\n                         return (\n                             <Step \n                                length={ dataAnswers.length }\n                                key={ key }\n                                component={ FormWinzard }\n                                data={ e.pregunta } \n                                id={ e.id_pregunta } \n                             />\n                         )\n                     })\n                }\n            </Steps>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useFetchAnswerSimple } from '../../../hooks/Answers/Simple/useFetchAnswerSimple';\nimport { MapOfFormWinzard } from './MapOfFormWinzard';\n\nexport const SimpleScreenAnswers = () => {\n\n    const history = useHistory();\n\n    const { answersSimpleActive } = useSelector(state => state.answerSimple);\n\n    const { data_answer } = useFetchAnswerSimple(answersSimpleActive);\n\n    useEffect(() => {\n\n        if (answersSimpleActive === null) {\n            history.push('/answers/selection');\n        }\n\n    }, [answersSimpleActive, history]);\n\n    return (\n        <React.Fragment>\n            {\n                (data_answer !== [])\n                &&\n                (\n                    <div className=\"col-lg-12 animated fadeIn\">\n                        <section className=\"panel\">\n                            <header className=\"panel-heading\">\n                                PRUEBAS\n                            </header>\n                            <MapOfFormWinzard dataAnswers={data_answer} />\n                        </section>\n                    </div>\n                )\n            }\n        </React.Fragment>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../../../helpers/fetch\";\n\nexport const useFetchAnswerSimple = ( id_test ) => {\n    \n    const [ data, setData ] = useState({\n        data_answer:[]\n    });\n\n    useEffect(() => {\n        \n        answersSimpleLoading( id_test );\n\n    }, [ id_test ]);\n\n    const answersSimpleLoading = async ( id_test = '') => {\n\n        const resp = await fetchConToken(`pregunta-simple/psimples-test?id_test=${ id_test }`);\n        const body = await resp.json();\n    \n        try {\n\n            if ( body.ok ) {   \n                \n                const  { simples_preguntas } = body;\n\n                const dataMap = simples_preguntas;    \n\n                setData({\n                    data_answer: dataMap\n                });\n    \n            }\n            else{\n                Swal.fire(':(', body.msg, 'error');\n    \n            }\n        } catch ( error ) {\n            console.log(error);\n        }\n    \n    }\n\n    return data;\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBong, faCubes, faThermometerQuarter, faThermometerThreeQuarters } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\n\nexport const AnswersScreen = () => {\n    return (\n        <React.Fragment>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon tar\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>31</span>\n                            Cantidad de Pruebas simples\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon pink\">\n                            <FontAwesomeIcon icon={faThermometerThreeQuarters} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>60</span>\n                            Cantidad total de pruebas\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"mini-stat clearfix\">\n                        <span className=\"mini-stat-icon orange\">\n                            <FontAwesomeIcon icon={faThermometerQuarter} />\n                        </span>\n                        <div className=\"mini-stat-info\">\n                            <span>29</span>\n                            Cantidad de Pruebas de formas\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row animated fadeIn\" >\n                <div className=\"col-sm-6\" >\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faBong} />\n                            <span> Pruebas Simples</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas simples sin graficos, solamente preguntas.\n                    </p>\n                    <Link to=\"/answers/selection\" className=\"btn btn-primary btn-lg btn-block\" >Elegir</Link>\n                </div>\n                <div className=\"col-sm-6\">\n                    <h2>\n                        <i>\n                            <FontAwesomeIcon icon={faCubes} />\n                            <span> Pruebas de Formas</span>\n                        </i>\n                    </h2>\n                    <p>\n                        Pruebas con graficos, formas entre otras cosas.\n                    </p>\n                    <Link to=\"/answers/shape\" className=\"btn btn-info btn-lg btn-block\" >Elegir</Link>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { answersSimpleActive } from '../../../actions/answersSimple';\nimport { useFetchTestSimple } from '../../../hooks/QuestionSimple/useFetchTestSimple';\nimport { useForm } from '../../../hooks/useForm';\n\nexport const SelectionTestScreen = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [ state, setState ] = useState([]);\n\n    const { questionsSimple } = useFetchTestSimple();\n\n    const [ selectionDefault, setSelectionDefault ] = useState('');\n\n    const [ formSelectionInputValues, handleSelectionInputValueChange ] = useForm({\n        tSimple: selectionDefault\n    });\n\n    const  { tSimple } = formSelectionInputValues;\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        if ( tSimple === '' ) {\n            return (\n                dispatch( answersSimpleActive( selectionDefault.toString() ) ),\n                history.push('/answers/simple')\n            )\n        }\n        return (\n            dispatch( answersSimpleActive( tSimple ) ),\n            history.push('/answers/simple')\n        )\n    }\n\n    useEffect(() => {\n        \n        if ( questionsSimple !== [] ) {\n            if ( questionsSimple[0] !== undefined ) {   \n                \n                const DEFAULTVALUE = questionsSimple[0].id_test;\n                setSelectionDefault( DEFAULTVALUE );\n\n            }\n        }\n        \n        setState( questionsSimple );\n        \n    }, [ questionsSimple ]);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-12  animated fadeIn\">\n                <section className=\"panel\">\n                    <header className=\"panel-heading\">\n                        SELECCIÓN DE LA PRUEBA SIMPLE\n                    </header>\n                    <div className=\"panel-body\">\n                        <div className=\"position-center\">\n                            <form onSubmit={ handleSubmitForm } >\n                                <div className=\"form-group\">\n                                    <label>Prueba Simple</label>\n                                    <select \n                                        formcontrolname=\"test-simple\" \n                                        name=\"tSimple\"\n                                        value={ tSimple }\n                                        onChange={ handleSelectionInputValueChange }   \n                                        className=\"form-control ng-valid ng-dirty ng-touched\"\n                                        >\n                                        {\n                                            state.map(( e )=>(\n                                                <option \n                                                    key={ e.id_test } \n                                                    value={ e.id_test } \n                                                >{ e.nombre_test }</option>\n                                            ))\n                                        }\n                                    </select>\n                                </div>\n                                <button className=\"btn btn-primary btn-round btn-block\">Continuar</button>\n                            </form>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ShapeScreeAnswers } from '../../components/answers/shapes/ShapeScreeAnswers';\nimport { SimpleScreenAnswers } from '../../components/answers/simples/SimpleScreenAnswers';\nimport { AnswersScreen } from '../../components/answers/AnswersScreen';\nimport { Layout } from '../../components/main/Layout';\nimport { SelectionTestScreen } from '../../components/answers/simples/SelectionTestScreen';\n\nexport const AnswersRouter = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/answers\"\n                    component={ AnswersScreen }\n                />\n                <Route\n                    exact\n                    path=\"/answers/shape\"\n                    component={ ShapeScreeAnswers }\n                />\n                <Route\n                    exact\n                    path=\"/answers/simple\"\n                    component={ SimpleScreenAnswers }\n                />\n                <Route \n                    exact\n                    path=\"/answers/selection\"\n                    component={ SelectionTestScreen }\n                />\n                <Redirect to=\"/answers\" />\n            </Switch>\n        </Layout>\n        \n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { AccountRouter } from './private/AccountRouter';\nimport { AuthRouter } from './public/AuthRouter';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRouter';\nimport { InstitutionRouter } from './private/InstitutionRouter';\nimport { TestsRouter } from './private/TestsRouter';\nimport { TestShapeRouter } from './private/TestShapeRouter';\nimport { TestSimpleRouter } from './private/TestSimpleRouter';\nimport { AnswersRouter } from './private/AnswersRouter';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch]);\n\n    if (checking) {\n        return (\n            <div className=\"loader-wrapper\" style={{ display: \"block\" }} >\n                <div className=\"loader\" />\n            </div>\n        );\n    }\n\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={!!uid}\n                    />\n\n                    {/* \n                        Rutas privadas \n                    */}\n\n                    <PrivateRoute\n                        path=\"/user\"\n                        component={AccountRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/institution\"\n                        component={InstitutionRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test/register\"\n                        component={TestsRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test-shape\"\n                        component={TestShapeRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/test-simple\"\n                        component={TestSimpleRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        path=\"/answers\"\n                        component={AnswersRouter}\n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const PsicologiaApp = () => {\n  return (\n    <Provider store={ store }> \n      <AppRouter  />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PsicologiaApp  } from './PsicologiaApp'; \n\nReactDOM.render(\n    <PsicologiaApp />,\n  document.getElementById('root')\n);\n\n","import { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { uiCloseLoadingSaveButton, uiFalseDisabledButton, uiOpenLoadingSaveButton, uiTrueDisabledButton } from \"./ui\";\nimport { fetchConToken } from \"../helpers/fetch\";\n\nexport const shapeRegister = ( pregunta, op1, op2, op3, op4, op5, op6, respuesta_correcta, name, testShape ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/new', {\n                nombre:name,\n                pregunta:pregunta,\n                op1:op1,\n                op2:op2,\n                op3:op3,\n                op4:op4,\n                op5:op5,\n                op6:op6,\n                respuesta_correcta:respuesta_correcta,\n                id_test:testShape\n            },'POST');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta registrada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\n\nexport const shapeEdit = ( id_pregunta, pregunta, op1, op2, op3, op4, op5, op6, respuesta_correcta, name, testShape ) => {\n\n    return async ( dispatch ) => {\n\n        dispatch( uiCloseLoadingSaveButton() );\n        dispatch( uiTrueDisabledButton() );\n\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/update', {\n                id_pregunta,\n                nombre:name,\n                pregunta:pregunta,\n                op1:op1,\n                op2:op2,\n                op3:op3,\n                op4:op4,\n                op5:op5,\n                op6:op6,\n                respuesta_correcta:respuesta_correcta,\n                id_test:testShape\n            },'PUT');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Modificada', 'success');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n                dispatch( uiOpenLoadingSaveButton() );\n                dispatch( uiFalseDisabledButton () );\n            }\n            \n        } catch (error) {\n            console.log( error);\n            dispatch( uiOpenLoadingSaveButton() );\n            dispatch( uiFalseDisabledButton () );\n        }\n\n    }\n\n}\nexport const questionDeleteShape = ( id_pregunta ) => {\n\n    return async () => {\n        try {\n\n            const resp = await fetchConToken('pregunta-formas/delete', {\n                id_pregunta\n            },'DELETE');\n\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                Swal.fire(':)','Pregunta Eliminada', 'success');\n            }else {  \n\n                Swal.fire(':(', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log( error);\n        }\n\n    }\n\n}\n\nexport const questionSetShape = ( question, nombre, id_test, id_resp ) => ( questionShape( { question, nombre, id_test, id_resp }  ) )\n\nconst questionShape = ( questionActive ) => ({ \n    type: types.questionSetActive,\n    payload: questionActive\n});\n\nexport const questionClearShape = ()  =>({ type: types.questionClearActive });","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenSidebar  = () => ({ type: types.uiOpenSidebar });\nexport const uiCloseSidebar = () => ({ type: types.uiCloseSidebar });\n\nexport const uiTrueDisabledButton = () => ({ type:types.uiTrueDisabledButton });\nexport const uiFalseDisabledButton = () => ({ type:types.uiFalseDisabledButton });\n\nexport const uiOpenSection  = () => ({ type: types.uiOpenSection });\nexport const uiCloseSection = () => ({ type: types.uiCloseSection });\n\nexport const uiOpenDrowp  = () => ({ type: types.uiOpenDrowp });\nexport const uiCloseDrowp = () => ({ type: types.uiCloseDrowp });\n\nexport const uiOpenLoadingButton = () => ({ type: types.uiOpenLoadingButton } );\nexport const uiCloseLoadingButton = () => ({ type: types.uiCloseLoadingButton } );\n\nexport const uiOpenLoadingSaveButton = () => ({ type: types.uiOpenLoadingSaveButton } );\nexport const uiCloseLoadingSaveButton = () => ({ type: types.uiCloseLoadingSaveButton } );\n\nexport const uiModalTrue = () => ({ type:types.uiModalTrue });\nexport const uiModalFalse = () => ({ type:types.uiModalFalse });\n\n// Institution\nexport const institutionAcordionSelect = () => ({ type:types.institutionAcordionSelect });\nexport const institutionAcordionDeselect = () => ({ type:types.institutionAcordionDeselect });\n\nexport const institutionSelectRegister = () => ({ type:types.institutionSelectRegister });\nexport const institutionDeselectRegister = () => ({ type:types.institutionDeselectRegister });\n\nexport const institutionSelectShow = () => ({ type:types.institutionSelectShow });\nexport const institutionDeselectShow = () => ({ type:types.institutionDeselectShow });\n\nexport const institutionOpenAcordion = () => ({ type:types.institutionOpenAcordion });\nexport const institutionCloseAcordion = () => ({ type:types.institutionCloseAcordion });\nexport const institutionIconClose = () => ({ type:types.institutionIconClose });\n\n\nexport const uieventLogout = () => ({ type: types.uieventLogout } );\n\n","export const types = {\n\n    uiOpenSidebar: '[ui] Open Sidebar',\n    uiCloseSidebar: '[ui] Close Sidebar',\n\n\n\n    uiTrueDisabledButton: '[ui] Disabled true',\n    uiFalseDisabledButton: '[ui] Disabled false',\n\n    uiOpenSection: '[ui] Open Section',\n    uiCloseSection: '[ui] Close Section',\n\n    uiOpenLoadingButton: '[ui] Open Loading Button',\n    uiCloseLoadingButton: '[ui] CloseLoading Button',\n\n    uiOpenLoadingSaveButton: '[ui] Open Loading Save Button',\n    uiCloseLoadingSaveButton: '[ui] CloseLoading Save Button',\n    uiModalTrue: '[ui] Modal true',\n    uiModalFalse: '[ui] Modal false',\n\n\n    uiOpenDrowp: '[ui] Open drowp',\n    uiCloseDrowp: '[ui] Close drowp',\n    uieventLogout: '[ui] Logout',\n\n    accountUpdate: '[ui] Account update',\n\n    institutionSetActive: '[institution] Institution active',\n    institutionSetActiveClear: '[institution] Institution clear',\n\n    institutionAcordionSelect: '[institution] Institution acordion select',\n    institutionAcordionDeselect: '[institution] Institution acordion deselect',\n\n    institutionLoaded: '[institution] Loaded institution',\n    institutionSelectRegister: '[institution] Select register institution',\n    institutionDeselectRegister: '[institution] Deselect register institution',\n\n    institutionSelectShow: '[institution] Select show institution',\n    institutionDeselectShow: '[institution] Deselect show institution',\n\n    institutionIconClose: '[institution] Close icon institution',\n    institutionOpenAcordion: '[institution] Open acordion institution',\n    institutionCloseAcordion: '[institution] Cloase acordion instituion',\n\n    testShapeActive: '[tShape] Active test shape',\n    testShapeClear: '[tShape] Clear test shape',\n    testShapeLoaded: '[tShape] Loaded test Shape',\n\n    testSimpleActive: '[tSimpleActive] Active test simple',\n    testSimpleClear: '[tSimpleClear] Clear test simple',\n    testSimpleLoaded: '[tSimpleLoaded] Loaded test simple',\n\n    testSimpleCategoryActive: '[tSimpleCategoryActive] Active category test simple ',\n    testSimpleCategoryClear: '[tSimpleCategoryClear] Clear category test simple ',\n    testSimpleCategoryLoaded: '[tSimpleCategoryLoaded] Loaded category test simple ',\n\n    //Question Shape\n    shapeLoaded: '[Shape] Loaded Shape',\n    questionSetActive: '[QuestionS] Question shape active',\n    questionClearActive: '[QuestionS] Question shape clear',\n\n    //Question Simple\n    questionSimpleSetActive: '[QSimple] Question simple active',\n    questionSimpleClearActive: '[QSimple] Quesiton simple clear',\n\n    answersSimpleActive: '[Answers] Answer simple active',\n    answersSimpleClear: '[Answers] Answer simple clear',\n    answersfilter: '[Answers] Answer simple filter',\n    answersfilterActive: '[Answers] Answer simple filter active',\n\n    answersShapeActive: '[Answers Shape] Answer shape active',\n    answersSimpleClear: '[Answers Shape] Answer shape clear',\n\n\n\n    authUserUpdate: '[auth] User update',\n    authUserUpdatePassword: \"[auth] User update password\",\n    authChecking: '[auth] Checking login state ',\n    authCheckingFinish: '[auth] Finish cheking login state ',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Login Register',\n    authStartStartTokenRenew: '[auth] start token renew',\n\n    shapeAnswersActive: '[shapeAnswersActive] Loaded shape answers',\n    shapeAnswersClear: '[shapeAnswersClear] clear shape answers',\n\n    authLogout: '[auth] Logout',\n\n}"],"sourceRoot":""}